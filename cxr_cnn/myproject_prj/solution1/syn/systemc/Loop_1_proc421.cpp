// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_1_proc421.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_1_proc421::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_1_proc421::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> Loop_1_proc421::ap_ST_fsm_state1 = "1";
const sc_lv<7> Loop_1_proc421::ap_ST_fsm_state2 = "10";
const sc_lv<7> Loop_1_proc421::ap_ST_fsm_state3 = "100";
const sc_lv<7> Loop_1_proc421::ap_ST_fsm_state4 = "1000";
const sc_lv<7> Loop_1_proc421::ap_ST_fsm_state5 = "10000";
const sc_lv<7> Loop_1_proc421::ap_ST_fsm_state6 = "100000";
const sc_lv<7> Loop_1_proc421::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_6 = "110";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_1 = "1";
const sc_lv<1> Loop_1_proc421::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_2 = "10";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_3 = "11";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_5 = "101";
const sc_lv<15> Loop_1_proc421::ap_const_lv15_0 = "000000000000000";
const sc_lv<15> Loop_1_proc421::ap_const_lv15_4000 = "100000000000000";
const sc_lv<15> Loop_1_proc421::ap_const_lv15_1 = "1";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_1F = "11111";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_17 = "10111";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_1E = "11110";
const sc_lv<31> Loop_1_proc421::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<9> Loop_1_proc421::ap_const_lv9_96 = "10010110";
const sc_lv<8> Loop_1_proc421::ap_const_lv8_96 = "10010110";
const sc_lv<9> Loop_1_proc421::ap_const_lv9_0 = "000000000";
const sc_lv<9> Loop_1_proc421::ap_const_lv9_19 = "11001";
const sc_lv<1> Loop_1_proc421::ap_const_lv1_1 = "1";
const sc_lv<8> Loop_1_proc421::ap_const_lv8_FF = "11111111";
const sc_lv<8> Loop_1_proc421::ap_const_lv8_0 = "00000000";
const sc_lv<32> Loop_1_proc421::ap_const_lv32_7 = "111";
const sc_lv<5> Loop_1_proc421::ap_const_lv5_1 = "1";
const bool Loop_1_proc421::ap_const_boolean_1 = true;

Loop_1_proc421::Loop_1_proc421(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_in_last_V_U = new regslice_both<1>("regslice_both_in_last_V_U");
    regslice_both_in_last_V_U->ap_clk(ap_clk);
    regslice_both_in_last_V_U->ap_rst(ap_rst);
    regslice_both_in_last_V_U->data_in(in_r_TLAST);
    regslice_both_in_last_V_U->vld_in(in_r_TVALID);
    regslice_both_in_last_V_U->ack_in(regslice_both_in_last_V_U_ack_in);
    regslice_both_in_last_V_U->data_out(in_r_TLAST_int);
    regslice_both_in_last_V_U->vld_out(in_r_TVALID_int);
    regslice_both_in_last_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_last_V_U->apdone_blk(regslice_both_in_last_V_U_apdone_blk);
    regslice_both_in_data_U = new regslice_both<32>("regslice_both_in_data_U");
    regslice_both_in_data_U->ap_clk(ap_clk);
    regslice_both_in_data_U->ap_rst(ap_rst);
    regslice_both_in_data_U->data_in(in_r_TDATA);
    regslice_both_in_data_U->vld_in(in_r_TVALID);
    regslice_both_in_data_U->ack_in(regslice_both_in_data_U_ack_in);
    regslice_both_in_data_U->data_out(in_r_TDATA_int);
    regslice_both_in_data_U->vld_out(regslice_both_in_data_U_vld_out);
    regslice_both_in_data_U->ack_out(in_r_TREADY_int);
    regslice_both_in_data_U->apdone_blk(regslice_both_in_data_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln282_fu_309_p2);
    sensitive << ( icmp_ln282_reg_390 );
    sensitive << ( xor_ln278_fu_304_p2 );

    SC_METHOD(thread_and_ln285_1_fu_264_p2);
    sensitive << ( icmp_ln284_reg_395 );
    sensitive << ( and_ln285_fu_259_p2 );

    SC_METHOD(thread_and_ln285_fu_259_p2);
    sensitive << ( icmp_ln285_reg_401 );
    sensitive << ( xor_ln282_fu_254_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( is_last_0_i_out_0_reg_93 );
    sensitive << ( ap_return_preg );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_bitcast_ln705_fu_135_p1);
    sensitive << ( in_r_TDATA_int );

    SC_METHOD(thread_i_fu_121_p2);
    sensitive << ( i_0_i_reg_104 );

    SC_METHOD(thread_icmp_ln17_fu_115_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( i_0_i_reg_104 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln278_fu_169_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( trunc_ln263_fu_139_p1 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln282_fu_181_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( p_Result_i_fu_151_p4 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln284_fu_187_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( sub_ln281_fu_175_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln285_fu_193_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( sub_ln281_fu_175_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_icmp_ln295_fu_292_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_25_fu_282_p4 );

    SC_METHOD(thread_in_local_V_data_0_V_blk_n);
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_in_local_V_data_0_V_din);
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_data_0_V_reg_448 );

    SC_METHOD(thread_in_local_V_data_0_V_write);
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_r_TVALID );
    sensitive << ( regslice_both_in_last_V_U_ack_in );

    SC_METHOD(thread_in_r_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_lshr_ln286_fu_229_p2);
    sensitive << ( tmp_fu_218_p3 );
    sensitive << ( sext_ln281_fu_226_p1 );

    SC_METHOD(thread_or_ln22_fu_209_p2);
    sensitive << ( is_last_0_i_out_0_reg_93 );
    sensitive << ( in_r_TLAST_int );

    SC_METHOD(thread_or_ln282_fu_203_p2);
    sensitive << ( icmp_ln278_fu_169_p2 );
    sensitive << ( icmp_ln282_fu_181_p2 );

    SC_METHOD(thread_or_ln284_fu_332_p2);
    sensitive << ( icmp_ln284_reg_395 );
    sensitive << ( or_ln282_reg_411 );

    SC_METHOD(thread_p_Result_i_fu_151_p4);
    sensitive << ( bitcast_ln705_fu_135_p1 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_select_ln278_fu_298_p3);
    sensitive << ( icmp_ln278_reg_379 );
    sensitive << ( select_ln285_reg_422 );

    SC_METHOD(thread_select_ln282_fu_314_p3);
    sensitive << ( trunc_ln296_reg_373 );
    sensitive << ( and_ln282_fu_309_p2 );
    sensitive << ( select_ln278_fu_298_p3 );

    SC_METHOD(thread_select_ln284_fu_336_p3);
    sensitive << ( select_ln282_reg_437 );
    sensitive << ( or_ln284_fu_332_p2 );
    sensitive << ( select_ln295_fu_325_p3 );

    SC_METHOD(thread_select_ln285_fu_269_p3);
    sensitive << ( and_ln285_1_fu_264_p2 );
    sensitive << ( trunc_ln286_fu_235_p1 );
    sensitive << ( select_ln288_fu_246_p3 );

    SC_METHOD(thread_select_ln288_fu_246_p3);
    sensitive << ( tmp_26_fu_239_p3 );

    SC_METHOD(thread_select_ln295_fu_325_p3);
    sensitive << ( icmp_ln295_reg_432 );
    sensitive << ( shl_ln297_fu_321_p2 );

    SC_METHOD(thread_sext_ln281_fu_226_p1);
    sensitive << ( sub_ln281_reg_385 );

    SC_METHOD(thread_shl_ln297_fu_321_p2);
    sensitive << ( trunc_ln296_reg_373 );
    sensitive << ( sub_ln294_reg_427 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sub_ln281_fu_175_p2);
    sensitive << ( zext_ln266_fu_161_p1 );

    SC_METHOD(thread_sub_ln294_fu_277_p2);
    sensitive << ( trunc_ln294_reg_406 );

    SC_METHOD(thread_sub_ln461_fu_343_p2);
    sensitive << ( select_ln284_reg_442 );

    SC_METHOD(thread_tmp_25_fu_282_p4);
    sensitive << ( sub_ln294_fu_277_p2 );

    SC_METHOD(thread_tmp_26_fu_239_p3);
    sensitive << ( bitcast_ln705_reg_362 );

    SC_METHOD(thread_tmp_data_0_V_fu_348_p3);
    sensitive << ( tmp_24_reg_368 );
    sensitive << ( select_ln284_reg_442 );
    sensitive << ( sub_ln461_fu_343_p2 );

    SC_METHOD(thread_tmp_fu_218_p3);
    sensitive << ( trunc_ln270_fu_215_p1 );

    SC_METHOD(thread_trunc_ln263_fu_139_p1);
    sensitive << ( bitcast_ln705_fu_135_p1 );

    SC_METHOD(thread_trunc_ln270_fu_215_p1);
    sensitive << ( bitcast_ln705_reg_362 );

    SC_METHOD(thread_trunc_ln286_fu_235_p1);
    sensitive << ( lshr_ln286_fu_229_p2 );

    SC_METHOD(thread_trunc_ln294_fu_199_p1);
    sensitive << ( sub_ln281_fu_175_p2 );

    SC_METHOD(thread_trunc_ln296_fu_165_p1);
    sensitive << ( bitcast_ln705_fu_135_p1 );

    SC_METHOD(thread_xor_ln278_fu_304_p2);
    sensitive << ( icmp_ln278_reg_379 );

    SC_METHOD(thread_xor_ln282_fu_254_p2);
    sensitive << ( or_ln282_reg_411 );

    SC_METHOD(thread_zext_ln266_fu_161_p1);
    sensitive << ( p_Result_i_fu_151_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_115_p2 );
    sensitive << ( in_r_TVALID_int );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    ap_return_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_1_proc421_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_local_V_data_0_V_din, "(port)in_local_V_data_0_V_din");
    sc_trace(mVcdFile, in_local_V_data_0_V_full_n, "(port)in_local_V_data_0_V_full_n");
    sc_trace(mVcdFile, in_local_V_data_0_V_write, "(port)in_local_V_data_0_V_write");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_local_V_data_0_V_blk_n, "in_local_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln17_fu_115_p2, "icmp_ln17_fu_115_p2");
    sc_trace(mVcdFile, i_fu_121_p2, "i_fu_121_p2");
    sc_trace(mVcdFile, i_reg_357, "i_reg_357");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, bitcast_ln705_fu_135_p1, "bitcast_ln705_fu_135_p1");
    sc_trace(mVcdFile, bitcast_ln705_reg_362, "bitcast_ln705_reg_362");
    sc_trace(mVcdFile, tmp_24_reg_368, "tmp_24_reg_368");
    sc_trace(mVcdFile, trunc_ln296_fu_165_p1, "trunc_ln296_fu_165_p1");
    sc_trace(mVcdFile, trunc_ln296_reg_373, "trunc_ln296_reg_373");
    sc_trace(mVcdFile, icmp_ln278_fu_169_p2, "icmp_ln278_fu_169_p2");
    sc_trace(mVcdFile, icmp_ln278_reg_379, "icmp_ln278_reg_379");
    sc_trace(mVcdFile, sub_ln281_fu_175_p2, "sub_ln281_fu_175_p2");
    sc_trace(mVcdFile, sub_ln281_reg_385, "sub_ln281_reg_385");
    sc_trace(mVcdFile, icmp_ln282_fu_181_p2, "icmp_ln282_fu_181_p2");
    sc_trace(mVcdFile, icmp_ln282_reg_390, "icmp_ln282_reg_390");
    sc_trace(mVcdFile, icmp_ln284_fu_187_p2, "icmp_ln284_fu_187_p2");
    sc_trace(mVcdFile, icmp_ln284_reg_395, "icmp_ln284_reg_395");
    sc_trace(mVcdFile, icmp_ln285_fu_193_p2, "icmp_ln285_fu_193_p2");
    sc_trace(mVcdFile, icmp_ln285_reg_401, "icmp_ln285_reg_401");
    sc_trace(mVcdFile, trunc_ln294_fu_199_p1, "trunc_ln294_fu_199_p1");
    sc_trace(mVcdFile, trunc_ln294_reg_406, "trunc_ln294_reg_406");
    sc_trace(mVcdFile, or_ln282_fu_203_p2, "or_ln282_fu_203_p2");
    sc_trace(mVcdFile, or_ln282_reg_411, "or_ln282_reg_411");
    sc_trace(mVcdFile, or_ln22_fu_209_p2, "or_ln22_fu_209_p2");
    sc_trace(mVcdFile, or_ln22_reg_417, "or_ln22_reg_417");
    sc_trace(mVcdFile, select_ln285_fu_269_p3, "select_ln285_fu_269_p3");
    sc_trace(mVcdFile, select_ln285_reg_422, "select_ln285_reg_422");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln294_fu_277_p2, "sub_ln294_fu_277_p2");
    sc_trace(mVcdFile, sub_ln294_reg_427, "sub_ln294_reg_427");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln295_fu_292_p2, "icmp_ln295_fu_292_p2");
    sc_trace(mVcdFile, icmp_ln295_reg_432, "icmp_ln295_reg_432");
    sc_trace(mVcdFile, select_ln282_fu_314_p3, "select_ln282_fu_314_p3");
    sc_trace(mVcdFile, select_ln282_reg_437, "select_ln282_reg_437");
    sc_trace(mVcdFile, select_ln284_fu_336_p3, "select_ln284_fu_336_p3");
    sc_trace(mVcdFile, select_ln284_reg_442, "select_ln284_reg_442");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_data_0_V_fu_348_p3, "tmp_data_0_V_fu_348_p3");
    sc_trace(mVcdFile, tmp_data_0_V_reg_448, "tmp_data_0_V_reg_448");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, is_last_0_i_out_0_reg_93, "is_last_0_i_out_0_reg_93");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i_0_i_reg_104, "i_0_i_reg_104");
    sc_trace(mVcdFile, p_Result_i_fu_151_p4, "p_Result_i_fu_151_p4");
    sc_trace(mVcdFile, trunc_ln263_fu_139_p1, "trunc_ln263_fu_139_p1");
    sc_trace(mVcdFile, zext_ln266_fu_161_p1, "zext_ln266_fu_161_p1");
    sc_trace(mVcdFile, trunc_ln270_fu_215_p1, "trunc_ln270_fu_215_p1");
    sc_trace(mVcdFile, tmp_fu_218_p3, "tmp_fu_218_p3");
    sc_trace(mVcdFile, sext_ln281_fu_226_p1, "sext_ln281_fu_226_p1");
    sc_trace(mVcdFile, lshr_ln286_fu_229_p2, "lshr_ln286_fu_229_p2");
    sc_trace(mVcdFile, tmp_26_fu_239_p3, "tmp_26_fu_239_p3");
    sc_trace(mVcdFile, xor_ln282_fu_254_p2, "xor_ln282_fu_254_p2");
    sc_trace(mVcdFile, and_ln285_fu_259_p2, "and_ln285_fu_259_p2");
    sc_trace(mVcdFile, and_ln285_1_fu_264_p2, "and_ln285_1_fu_264_p2");
    sc_trace(mVcdFile, trunc_ln286_fu_235_p1, "trunc_ln286_fu_235_p1");
    sc_trace(mVcdFile, select_ln288_fu_246_p3, "select_ln288_fu_246_p3");
    sc_trace(mVcdFile, tmp_25_fu_282_p4, "tmp_25_fu_282_p4");
    sc_trace(mVcdFile, xor_ln278_fu_304_p2, "xor_ln278_fu_304_p2");
    sc_trace(mVcdFile, and_ln282_fu_309_p2, "and_ln282_fu_309_p2");
    sc_trace(mVcdFile, select_ln278_fu_298_p3, "select_ln278_fu_298_p3");
    sc_trace(mVcdFile, shl_ln297_fu_321_p2, "shl_ln297_fu_321_p2");
    sc_trace(mVcdFile, or_ln284_fu_332_p2, "or_ln284_fu_332_p2");
    sc_trace(mVcdFile, select_ln295_fu_325_p3, "select_ln295_fu_325_p3");
    sc_trace(mVcdFile, sub_ln461_fu_343_p2, "sub_ln461_fu_343_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_in_last_V_U_apdone_blk, "regslice_both_in_last_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TLAST_int, "in_r_TLAST_int");
    sc_trace(mVcdFile, in_r_TVALID_int, "in_r_TVALID_int");
    sc_trace(mVcdFile, in_r_TREADY_int, "in_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_last_V_U_ack_in, "regslice_both_in_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_in_data_U_apdone_blk, "regslice_both_in_data_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TDATA_int, "in_r_TDATA_int");
    sc_trace(mVcdFile, regslice_both_in_data_U_vld_out, "regslice_both_in_data_U_vld_out");
    sc_trace(mVcdFile, regslice_both_in_data_U_ack_in, "regslice_both_in_data_U_ack_in");
#endif

    }
}

Loop_1_proc421::~Loop_1_proc421() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_in_last_V_U;
    delete regslice_both_in_data_U;
}

void Loop_1_proc421::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_1) && 
                    !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
            ap_return_preg = is_last_0_i_out_0_reg_93.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
        i_0_i_reg_104 = i_reg_357.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_i_reg_104 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
        is_last_0_i_out_0_reg_93 = or_ln22_reg_417.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        is_last_0_i_out_0_reg_93 = ap_const_lv1_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        bitcast_ln705_reg_362 = bitcast_ln705_fu_135_p1.read();
        icmp_ln278_reg_379 = icmp_ln278_fu_169_p2.read();
        icmp_ln282_reg_390 = icmp_ln282_fu_181_p2.read();
        icmp_ln284_reg_395 = icmp_ln284_fu_187_p2.read();
        icmp_ln285_reg_401 = icmp_ln285_fu_193_p2.read();
        or_ln22_reg_417 = or_ln22_fu_209_p2.read();
        or_ln282_reg_411 = or_ln282_fu_203_p2.read();
        sub_ln281_reg_385 = sub_ln281_fu_175_p2.read();
        tmp_24_reg_368 = bitcast_ln705_fu_135_p1.read().range(31, 31);
        trunc_ln294_reg_406 = trunc_ln294_fu_199_p1.read();
        trunc_ln296_reg_373 = trunc_ln296_fu_165_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        i_reg_357 = i_fu_121_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        icmp_ln295_reg_432 = icmp_ln295_fu_292_p2.read();
        select_ln282_reg_437 = select_ln282_fu_314_p3.read();
        sub_ln294_reg_427 = sub_ln294_fu_277_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        select_ln284_reg_442 = select_ln284_fu_336_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln278_reg_379.read()))) {
        select_ln285_reg_422 = select_ln285_fu_269_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_data_0_V_reg_448 = tmp_data_0_V_fu_348_p3.read();
    }
}

void Loop_1_proc421::thread_and_ln282_fu_309_p2() {
    and_ln282_fu_309_p2 = (icmp_ln282_reg_390.read() & xor_ln278_fu_304_p2.read());
}

void Loop_1_proc421::thread_and_ln285_1_fu_264_p2() {
    and_ln285_1_fu_264_p2 = (and_ln285_fu_259_p2.read() & icmp_ln284_reg_395.read());
}

void Loop_1_proc421::thread_and_ln285_fu_259_p2() {
    and_ln285_fu_259_p2 = (icmp_ln285_reg_401.read() & xor_ln282_fu_254_p2.read());
}

void Loop_1_proc421::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_1_proc421::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_1_proc421::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Loop_1_proc421::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Loop_1_proc421::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Loop_1_proc421::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Loop_1_proc421::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Loop_1_proc421::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_1_proc421::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void Loop_1_proc421::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_1_proc421::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_1_proc421::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Loop_1_proc421::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        ap_return = is_last_0_i_out_0_reg_93.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void Loop_1_proc421::thread_bitcast_ln705_fu_135_p1() {
    bitcast_ln705_fu_135_p1 = in_r_TDATA_int.read();
}

void Loop_1_proc421::thread_i_fu_121_p2() {
    i_fu_121_p2 = (!i_0_i_reg_104.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i_0_i_reg_104.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void Loop_1_proc421::thread_icmp_ln17_fu_115_p2() {
    icmp_ln17_fu_115_p2 = (!i_0_i_reg_104.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_104.read() == ap_const_lv15_4000);
}

void Loop_1_proc421::thread_icmp_ln278_fu_169_p2() {
    icmp_ln278_fu_169_p2 = (!trunc_ln263_fu_139_p1.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln263_fu_139_p1.read() == ap_const_lv31_0);
}

void Loop_1_proc421::thread_icmp_ln282_fu_181_p2() {
    icmp_ln282_fu_181_p2 = (!p_Result_i_fu_151_p4.read().is_01() || !ap_const_lv8_96.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_i_fu_151_p4.read() == ap_const_lv8_96);
}

void Loop_1_proc421::thread_icmp_ln284_fu_187_p2() {
    icmp_ln284_fu_187_p2 = (!sub_ln281_fu_175_p2.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): (sc_bigint<9>(sub_ln281_fu_175_p2.read()) > sc_bigint<9>(ap_const_lv9_0));
}

void Loop_1_proc421::thread_icmp_ln285_fu_193_p2() {
    icmp_ln285_fu_193_p2 = (!sub_ln281_fu_175_p2.read().is_01() || !ap_const_lv9_19.is_01())? sc_lv<1>(): (sc_bigint<9>(sub_ln281_fu_175_p2.read()) < sc_bigint<9>(ap_const_lv9_19));
}

void Loop_1_proc421::thread_icmp_ln295_fu_292_p2() {
    icmp_ln295_fu_292_p2 = (!tmp_25_fu_282_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<1>(): (sc_bigint<5>(tmp_25_fu_282_p4.read()) < sc_bigint<5>(ap_const_lv5_1));
}

void Loop_1_proc421::thread_in_local_V_data_0_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in_local_V_data_0_V_blk_n = in_local_V_data_0_V_full_n.read();
    } else {
        in_local_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc421::thread_in_local_V_data_0_V_din() {
    in_local_V_data_0_V_din = tmp_data_0_V_reg_448.read();
}

void Loop_1_proc421::thread_in_local_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
        in_local_V_data_0_V_write = ap_const_logic_1;
    } else {
        in_local_V_data_0_V_write = ap_const_logic_0;
    }
}

void Loop_1_proc421::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0))) {
        in_r_TDATA_blk_n = in_r_TVALID_int.read();
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc421::thread_in_r_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_r_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_last_V_U_ack_in.read()))) {
        in_r_TREADY = ap_const_logic_1;
    } else {
        in_r_TREADY = ap_const_logic_0;
    }
}

void Loop_1_proc421::thread_in_r_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        in_r_TREADY_int = ap_const_logic_1;
    } else {
        in_r_TREADY_int = ap_const_logic_0;
    }
}

void Loop_1_proc421::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Loop_1_proc421::thread_lshr_ln286_fu_229_p2() {
    lshr_ln286_fu_229_p2 = (!sext_ln281_fu_226_p1.read().is_01())? sc_lv<24>(): tmp_fu_218_p3.read() >> (unsigned short)sext_ln281_fu_226_p1.read().to_uint();
}

void Loop_1_proc421::thread_or_ln22_fu_209_p2() {
    or_ln22_fu_209_p2 = (in_r_TLAST_int.read() | is_last_0_i_out_0_reg_93.read());
}

void Loop_1_proc421::thread_or_ln282_fu_203_p2() {
    or_ln282_fu_203_p2 = (icmp_ln278_fu_169_p2.read() | icmp_ln282_fu_181_p2.read());
}

void Loop_1_proc421::thread_or_ln284_fu_332_p2() {
    or_ln284_fu_332_p2 = (or_ln282_reg_411.read() | icmp_ln284_reg_395.read());
}

void Loop_1_proc421::thread_p_Result_i_fu_151_p4() {
    p_Result_i_fu_151_p4 = bitcast_ln705_fu_135_p1.read().range(30, 23);
}

void Loop_1_proc421::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Loop_1_proc421::thread_select_ln278_fu_298_p3() {
    select_ln278_fu_298_p3 = (!icmp_ln278_reg_379.read()[0].is_01())? sc_lv<8>(): ((icmp_ln278_reg_379.read()[0].to_bool())? ap_const_lv8_0: select_ln285_reg_422.read());
}

void Loop_1_proc421::thread_select_ln282_fu_314_p3() {
    select_ln282_fu_314_p3 = (!and_ln282_fu_309_p2.read()[0].is_01())? sc_lv<8>(): ((and_ln282_fu_309_p2.read()[0].to_bool())? trunc_ln296_reg_373.read(): select_ln278_fu_298_p3.read());
}

void Loop_1_proc421::thread_select_ln284_fu_336_p3() {
    select_ln284_fu_336_p3 = (!or_ln284_fu_332_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln284_fu_332_p2.read()[0].to_bool())? select_ln282_reg_437.read(): select_ln295_fu_325_p3.read());
}

void Loop_1_proc421::thread_select_ln285_fu_269_p3() {
    select_ln285_fu_269_p3 = (!and_ln285_1_fu_264_p2.read()[0].is_01())? sc_lv<8>(): ((and_ln285_1_fu_264_p2.read()[0].to_bool())? trunc_ln286_fu_235_p1.read(): select_ln288_fu_246_p3.read());
}

void Loop_1_proc421::thread_select_ln288_fu_246_p3() {
    select_ln288_fu_246_p3 = (!tmp_26_fu_239_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_26_fu_239_p3.read()[0].to_bool())? ap_const_lv8_FF: ap_const_lv8_0);
}

void Loop_1_proc421::thread_select_ln295_fu_325_p3() {
    select_ln295_fu_325_p3 = (!icmp_ln295_reg_432.read()[0].is_01())? sc_lv<8>(): ((icmp_ln295_reg_432.read()[0].to_bool())? shl_ln297_fu_321_p2.read(): ap_const_lv8_0);
}

void Loop_1_proc421::thread_sext_ln281_fu_226_p1() {
    sext_ln281_fu_226_p1 = esl_sext<24,9>(sub_ln281_reg_385.read());
}

void Loop_1_proc421::thread_shl_ln297_fu_321_p2() {
    shl_ln297_fu_321_p2 = (!sub_ln294_reg_427.read().is_01())? sc_lv<8>(): trunc_ln296_reg_373.read() << (unsigned short)sub_ln294_reg_427.read().to_uint();
}

void Loop_1_proc421::thread_start_out() {
    start_out = real_start.read();
}

void Loop_1_proc421::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void Loop_1_proc421::thread_sub_ln281_fu_175_p2() {
    sub_ln281_fu_175_p2 = (!ap_const_lv9_96.is_01() || !zext_ln266_fu_161_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_96) - sc_biguint<9>(zext_ln266_fu_161_p1.read()));
}

void Loop_1_proc421::thread_sub_ln294_fu_277_p2() {
    sub_ln294_fu_277_p2 = (!ap_const_lv8_0.is_01() || !trunc_ln294_reg_406.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(trunc_ln294_reg_406.read()));
}

void Loop_1_proc421::thread_sub_ln461_fu_343_p2() {
    sub_ln461_fu_343_p2 = (!ap_const_lv8_0.is_01() || !select_ln284_reg_442.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(select_ln284_reg_442.read()));
}

void Loop_1_proc421::thread_tmp_25_fu_282_p4() {
    tmp_25_fu_282_p4 = sub_ln294_fu_277_p2.read().range(7, 3);
}

void Loop_1_proc421::thread_tmp_26_fu_239_p3() {
    tmp_26_fu_239_p3 = bitcast_ln705_reg_362.read().range(31, 31);
}

void Loop_1_proc421::thread_tmp_data_0_V_fu_348_p3() {
    tmp_data_0_V_fu_348_p3 = (!tmp_24_reg_368.read()[0].is_01())? sc_lv<8>(): ((tmp_24_reg_368.read()[0].to_bool())? sub_ln461_fu_343_p2.read(): select_ln284_reg_442.read());
}

void Loop_1_proc421::thread_tmp_fu_218_p3() {
    tmp_fu_218_p3 = esl_concat<1,23>(ap_const_lv1_1, trunc_ln270_fu_215_p1.read());
}

void Loop_1_proc421::thread_trunc_ln263_fu_139_p1() {
    trunc_ln263_fu_139_p1 = bitcast_ln705_fu_135_p1.read().range(31-1, 0);
}

void Loop_1_proc421::thread_trunc_ln270_fu_215_p1() {
    trunc_ln270_fu_215_p1 = bitcast_ln705_reg_362.read().range(23-1, 0);
}

void Loop_1_proc421::thread_trunc_ln286_fu_235_p1() {
    trunc_ln286_fu_235_p1 = lshr_ln286_fu_229_p2.read().range(8-1, 0);
}

void Loop_1_proc421::thread_trunc_ln294_fu_199_p1() {
    trunc_ln294_fu_199_p1 = sub_ln281_fu_175_p2.read().range(8-1, 0);
}

void Loop_1_proc421::thread_trunc_ln296_fu_165_p1() {
    trunc_ln296_fu_165_p1 = bitcast_ln705_fu_135_p1.read().range(8-1, 0);
}

void Loop_1_proc421::thread_xor_ln278_fu_304_p2() {
    xor_ln278_fu_304_p2 = (icmp_ln278_reg_379.read() ^ ap_const_lv1_1);
}

void Loop_1_proc421::thread_xor_ln282_fu_254_p2() {
    xor_ln282_fu_254_p2 = (or_ln282_reg_411.read() ^ ap_const_lv1_1);
}

void Loop_1_proc421::thread_zext_ln266_fu_161_p1() {
    zext_ln266_fu_161_p1 = esl_zext<9,8>(p_Result_i_fu_151_p4.read());
}

void Loop_1_proc421::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln17_fu_115_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

