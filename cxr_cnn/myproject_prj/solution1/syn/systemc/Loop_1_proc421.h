// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_1_proc421_HH_
#define _Loop_1_proc421_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_1_proc421 : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<1> > in_r_TLAST;
    sc_in< sc_logic > in_r_TVALID;
    sc_out< sc_logic > in_r_TREADY;
    sc_out< sc_lv<8> > in_local_V_data_0_V_din;
    sc_in< sc_logic > in_local_V_data_0_V_full_n;
    sc_out< sc_logic > in_local_V_data_0_V_write;
    sc_in< sc_lv<32> > in_r_TDATA;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    Loop_1_proc421(sc_module_name name);
    SC_HAS_PROCESS(Loop_1_proc421);

    ~Loop_1_proc421();

    sc_trace_file* mVcdFile;

    regslice_both<1>* regslice_both_in_last_V_U;
    regslice_both<32>* regslice_both_in_data_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > in_local_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > in_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln17_fu_115_p2;
    sc_signal< sc_lv<15> > i_fu_121_p2;
    sc_signal< sc_lv<15> > i_reg_357;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<32> > bitcast_ln705_fu_135_p1;
    sc_signal< sc_lv<32> > bitcast_ln705_reg_362;
    sc_signal< sc_lv<1> > tmp_24_reg_368;
    sc_signal< sc_lv<8> > trunc_ln296_fu_165_p1;
    sc_signal< sc_lv<8> > trunc_ln296_reg_373;
    sc_signal< sc_lv<1> > icmp_ln278_fu_169_p2;
    sc_signal< sc_lv<1> > icmp_ln278_reg_379;
    sc_signal< sc_lv<9> > sub_ln281_fu_175_p2;
    sc_signal< sc_lv<9> > sub_ln281_reg_385;
    sc_signal< sc_lv<1> > icmp_ln282_fu_181_p2;
    sc_signal< sc_lv<1> > icmp_ln282_reg_390;
    sc_signal< sc_lv<1> > icmp_ln284_fu_187_p2;
    sc_signal< sc_lv<1> > icmp_ln284_reg_395;
    sc_signal< sc_lv<1> > icmp_ln285_fu_193_p2;
    sc_signal< sc_lv<1> > icmp_ln285_reg_401;
    sc_signal< sc_lv<8> > trunc_ln294_fu_199_p1;
    sc_signal< sc_lv<8> > trunc_ln294_reg_406;
    sc_signal< sc_lv<1> > or_ln282_fu_203_p2;
    sc_signal< sc_lv<1> > or_ln282_reg_411;
    sc_signal< sc_lv<1> > or_ln22_fu_209_p2;
    sc_signal< sc_lv<1> > or_ln22_reg_417;
    sc_signal< sc_lv<8> > select_ln285_fu_269_p3;
    sc_signal< sc_lv<8> > select_ln285_reg_422;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > sub_ln294_fu_277_p2;
    sc_signal< sc_lv<8> > sub_ln294_reg_427;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln295_fu_292_p2;
    sc_signal< sc_lv<1> > icmp_ln295_reg_432;
    sc_signal< sc_lv<8> > select_ln282_fu_314_p3;
    sc_signal< sc_lv<8> > select_ln282_reg_437;
    sc_signal< sc_lv<8> > select_ln284_fu_336_p3;
    sc_signal< sc_lv<8> > select_ln284_reg_442;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_data_0_V_fu_348_p3;
    sc_signal< sc_lv<8> > tmp_data_0_V_reg_448;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > is_last_0_i_out_0_reg_93;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<15> > i_0_i_reg_104;
    sc_signal< sc_lv<8> > p_Result_i_fu_151_p4;
    sc_signal< sc_lv<31> > trunc_ln263_fu_139_p1;
    sc_signal< sc_lv<9> > zext_ln266_fu_161_p1;
    sc_signal< sc_lv<23> > trunc_ln270_fu_215_p1;
    sc_signal< sc_lv<24> > tmp_fu_218_p3;
    sc_signal< sc_lv<24> > sext_ln281_fu_226_p1;
    sc_signal< sc_lv<24> > lshr_ln286_fu_229_p2;
    sc_signal< sc_lv<1> > tmp_26_fu_239_p3;
    sc_signal< sc_lv<1> > xor_ln282_fu_254_p2;
    sc_signal< sc_lv<1> > and_ln285_fu_259_p2;
    sc_signal< sc_lv<1> > and_ln285_1_fu_264_p2;
    sc_signal< sc_lv<8> > trunc_ln286_fu_235_p1;
    sc_signal< sc_lv<8> > select_ln288_fu_246_p3;
    sc_signal< sc_lv<5> > tmp_25_fu_282_p4;
    sc_signal< sc_lv<1> > xor_ln278_fu_304_p2;
    sc_signal< sc_lv<1> > and_ln282_fu_309_p2;
    sc_signal< sc_lv<8> > select_ln278_fu_298_p3;
    sc_signal< sc_lv<8> > shl_ln297_fu_321_p2;
    sc_signal< sc_lv<1> > or_ln284_fu_332_p2;
    sc_signal< sc_lv<8> > select_ln295_fu_325_p3;
    sc_signal< sc_lv<8> > sub_ln461_fu_343_p2;
    sc_signal< sc_lv<1> > ap_return_preg;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_logic > regslice_both_in_last_V_U_apdone_blk;
    sc_signal< sc_lv<1> > in_r_TLAST_int;
    sc_signal< sc_logic > in_r_TVALID_int;
    sc_signal< sc_logic > in_r_TREADY_int;
    sc_signal< sc_logic > regslice_both_in_last_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_in_data_U_apdone_blk;
    sc_signal< sc_lv<32> > in_r_TDATA_int;
    sc_signal< sc_logic > regslice_both_in_data_U_vld_out;
    sc_signal< sc_logic > regslice_both_in_data_U_ack_in;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<15> ap_const_lv15_4000;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<9> ap_const_lv9_96;
    static const sc_lv<8> ap_const_lv8_96;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<9> ap_const_lv9_19;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln282_fu_309_p2();
    void thread_and_ln285_1_fu_264_p2();
    void thread_and_ln285_fu_259_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_bitcast_ln705_fu_135_p1();
    void thread_i_fu_121_p2();
    void thread_icmp_ln17_fu_115_p2();
    void thread_icmp_ln278_fu_169_p2();
    void thread_icmp_ln282_fu_181_p2();
    void thread_icmp_ln284_fu_187_p2();
    void thread_icmp_ln285_fu_193_p2();
    void thread_icmp_ln295_fu_292_p2();
    void thread_in_local_V_data_0_V_blk_n();
    void thread_in_local_V_data_0_V_din();
    void thread_in_local_V_data_0_V_write();
    void thread_in_r_TDATA_blk_n();
    void thread_in_r_TREADY();
    void thread_in_r_TREADY_int();
    void thread_internal_ap_ready();
    void thread_lshr_ln286_fu_229_p2();
    void thread_or_ln22_fu_209_p2();
    void thread_or_ln282_fu_203_p2();
    void thread_or_ln284_fu_332_p2();
    void thread_p_Result_i_fu_151_p4();
    void thread_real_start();
    void thread_select_ln278_fu_298_p3();
    void thread_select_ln282_fu_314_p3();
    void thread_select_ln284_fu_336_p3();
    void thread_select_ln285_fu_269_p3();
    void thread_select_ln288_fu_246_p3();
    void thread_select_ln295_fu_325_p3();
    void thread_sext_ln281_fu_226_p1();
    void thread_shl_ln297_fu_321_p2();
    void thread_start_out();
    void thread_start_write();
    void thread_sub_ln281_fu_175_p2();
    void thread_sub_ln294_fu_277_p2();
    void thread_sub_ln461_fu_343_p2();
    void thread_tmp_25_fu_282_p4();
    void thread_tmp_26_fu_239_p3();
    void thread_tmp_data_0_V_fu_348_p3();
    void thread_tmp_fu_218_p3();
    void thread_trunc_ln263_fu_139_p1();
    void thread_trunc_ln270_fu_215_p1();
    void thread_trunc_ln286_fu_235_p1();
    void thread_trunc_ln294_fu_199_p1();
    void thread_trunc_ln296_fu_165_p1();
    void thread_xor_ln278_fu_304_p2();
    void thread_xor_ln282_fu_254_p2();
    void thread_zext_ln266_fu_161_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
