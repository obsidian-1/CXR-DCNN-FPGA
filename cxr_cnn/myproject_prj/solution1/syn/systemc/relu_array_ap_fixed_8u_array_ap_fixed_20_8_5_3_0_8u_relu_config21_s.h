// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_array_ap_fixed_8u_array_ap_fixed_20_8_5_3_0_8u_relu_config21_s_HH_
#define _relu_array_ap_fixed_8u_array_ap_fixed_20_8_5_3_0_8u_relu_config21_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct relu_array_ap_fixed_8u_array_ap_fixed_20_8_5_3_0_8u_relu_config21_s : public sc_module {
    // Port declarations 58
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<20> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<20> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<20> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<20> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_in< sc_lv<20> > data_V_data_4_V_dout;
    sc_in< sc_logic > data_V_data_4_V_empty_n;
    sc_out< sc_logic > data_V_data_4_V_read;
    sc_in< sc_lv<20> > data_V_data_5_V_dout;
    sc_in< sc_logic > data_V_data_5_V_empty_n;
    sc_out< sc_logic > data_V_data_5_V_read;
    sc_in< sc_lv<20> > data_V_data_6_V_dout;
    sc_in< sc_logic > data_V_data_6_V_empty_n;
    sc_out< sc_logic > data_V_data_6_V_read;
    sc_in< sc_lv<20> > data_V_data_7_V_dout;
    sc_in< sc_logic > data_V_data_7_V_empty_n;
    sc_out< sc_logic > data_V_data_7_V_read;
    sc_out< sc_lv<20> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<20> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<20> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<20> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;
    sc_out< sc_lv<20> > res_V_data_4_V_din;
    sc_in< sc_logic > res_V_data_4_V_full_n;
    sc_out< sc_logic > res_V_data_4_V_write;
    sc_out< sc_lv<20> > res_V_data_5_V_din;
    sc_in< sc_logic > res_V_data_5_V_full_n;
    sc_out< sc_logic > res_V_data_5_V_write;
    sc_out< sc_lv<20> > res_V_data_6_V_din;
    sc_in< sc_logic > res_V_data_6_V_full_n;
    sc_out< sc_logic > res_V_data_6_V_write;
    sc_out< sc_lv<20> > res_V_data_7_V_din;
    sc_in< sc_logic > res_V_data_7_V_full_n;
    sc_out< sc_logic > res_V_data_7_V_write;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;


    // Module declarations
    relu_array_ap_fixed_8u_array_ap_fixed_20_8_5_3_0_8u_relu_config21_s(sc_module_name name);
    SC_HAS_PROCESS(relu_array_ap_fixed_8u_array_ap_fixed_20_8_5_3_0_8u_relu_config21_s);

    ~relu_array_ap_fixed_8u_array_ap_fixed_20_8_5_3_0_8u_relu_config21_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > io_acc_block_signal_op4;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > io_acc_block_signal_op48;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_logic > data_V_data_0_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > data_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_V_data_3_V_blk_n;
    sc_signal< sc_logic > data_V_data_4_V_blk_n;
    sc_signal< sc_logic > data_V_data_5_V_blk_n;
    sc_signal< sc_logic > data_V_data_6_V_blk_n;
    sc_signal< sc_logic > data_V_data_7_V_blk_n;
    sc_signal< sc_logic > res_V_data_0_V_blk_n;
    sc_signal< sc_logic > res_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_V_data_4_V_blk_n;
    sc_signal< sc_logic > res_V_data_5_V_blk_n;
    sc_signal< sc_logic > res_V_data_6_V_blk_n;
    sc_signal< sc_logic > res_V_data_7_V_blk_n;
    sc_signal< sc_lv<20> > tmp_data_V_0_reg_242;
    sc_signal< sc_lv<20> > tmp_data_V_1_reg_248;
    sc_signal< sc_lv<20> > tmp_data_V_216_reg_254;
    sc_signal< sc_lv<20> > tmp_data_V_3_reg_260;
    sc_signal< sc_lv<20> > tmp_data_V_4_reg_266;
    sc_signal< sc_lv<20> > tmp_data_V_5_reg_272;
    sc_signal< sc_lv<20> > tmp_data_V_6_reg_278;
    sc_signal< sc_lv<20> > tmp_data_V_7_reg_284;
    sc_signal< sc_lv<20> > tmp_data_0_V_fu_186_p3;
    sc_signal< sc_lv<20> > tmp_data_0_V_reg_290;
    sc_signal< sc_lv<20> > tmp_data_1_V_fu_193_p3;
    sc_signal< sc_lv<20> > tmp_data_1_V_reg_295;
    sc_signal< sc_lv<20> > tmp_data_2_V_fu_200_p3;
    sc_signal< sc_lv<20> > tmp_data_2_V_reg_300;
    sc_signal< sc_lv<20> > tmp_data_3_V_fu_207_p3;
    sc_signal< sc_lv<20> > tmp_data_3_V_reg_305;
    sc_signal< sc_lv<20> > tmp_data_4_V_fu_214_p3;
    sc_signal< sc_lv<20> > tmp_data_4_V_reg_310;
    sc_signal< sc_lv<20> > tmp_data_5_V_fu_221_p3;
    sc_signal< sc_lv<20> > tmp_data_5_V_reg_315;
    sc_signal< sc_lv<20> > tmp_data_6_V_fu_228_p3;
    sc_signal< sc_lv<20> > tmp_data_6_V_reg_320;
    sc_signal< sc_lv<20> > tmp_data_7_V_fu_235_p3;
    sc_signal< sc_lv<20> > tmp_data_7_V_reg_325;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_146_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_151_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_156_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_161_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_4_fu_166_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_5_fu_171_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_6_fu_176_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_7_fu_181_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<20> ap_const_lv20_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_data_V_data_4_V_blk_n();
    void thread_data_V_data_4_V_read();
    void thread_data_V_data_5_V_blk_n();
    void thread_data_V_data_5_V_read();
    void thread_data_V_data_6_V_blk_n();
    void thread_data_V_data_6_V_read();
    void thread_data_V_data_7_V_blk_n();
    void thread_data_V_data_7_V_read();
    void thread_icmp_ln1494_1_fu_151_p2();
    void thread_icmp_ln1494_2_fu_156_p2();
    void thread_icmp_ln1494_3_fu_161_p2();
    void thread_icmp_ln1494_4_fu_166_p2();
    void thread_icmp_ln1494_5_fu_171_p2();
    void thread_icmp_ln1494_6_fu_176_p2();
    void thread_icmp_ln1494_7_fu_181_p2();
    void thread_icmp_ln1494_fu_146_p2();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op4();
    void thread_io_acc_block_signal_op48();
    void thread_real_start();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_res_V_data_4_V_blk_n();
    void thread_res_V_data_4_V_din();
    void thread_res_V_data_4_V_write();
    void thread_res_V_data_5_V_blk_n();
    void thread_res_V_data_5_V_din();
    void thread_res_V_data_5_V_write();
    void thread_res_V_data_6_V_blk_n();
    void thread_res_V_data_6_V_din();
    void thread_res_V_data_6_V_write();
    void thread_res_V_data_7_V_blk_n();
    void thread_res_V_data_7_V_din();
    void thread_res_V_data_7_V_write();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_data_0_V_fu_186_p3();
    void thread_tmp_data_1_V_fu_193_p3();
    void thread_tmp_data_2_V_fu_200_p3();
    void thread_tmp_data_3_V_fu_207_p3();
    void thread_tmp_data_4_V_fu_214_p3();
    void thread_tmp_data_5_V_fu_221_p3();
    void thread_tmp_data_6_V_fu_228_p3();
    void thread_tmp_data_7_V_fu_235_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
