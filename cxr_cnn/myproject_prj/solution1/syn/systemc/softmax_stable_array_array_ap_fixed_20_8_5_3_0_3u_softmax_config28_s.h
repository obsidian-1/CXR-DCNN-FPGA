// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s_HH_
#define _softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_axi_mul_17ns_18s_28_2_1.h"
#include "softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s_exp_table4.h"
#include "softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s_invert_tbfk.h"

namespace ap_rtl {

struct softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s : public sc_module {
    // Port declarations 30
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<20> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<20> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<20> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_out< sc_lv<20> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<20> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<20> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_logic > data_V_data_0_V_blk_n;
    sc_out< sc_logic > data_V_data_1_V_blk_n;
    sc_out< sc_logic > data_V_data_2_V_blk_n;
    sc_out< sc_logic > res_V_data_0_V_blk_n;
    sc_out< sc_logic > res_V_data_1_V_blk_n;
    sc_out< sc_logic > res_V_data_2_V_blk_n;


    // Module declarations
    softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s);

    ~softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s();

    sc_trace_file* mVcdFile;

    softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s_exp_table4* exp_table4_U;
    softmax_stable_array_array_ap_fixed_20_8_5_3_0_3u_softmax_config28_s_invert_tbfk* invert_table5_U;
    myproject_axi_mul_17ns_18s_28_2_1<1,2,17,18,28>* myproject_axi_mul_17ns_18s_28_2_1_U434;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state3_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter2;
    sc_signal< bool > ap_block_state12_pp0_stage2_iter3;
    sc_signal< bool > ap_block_state15_pp0_stage2_iter4;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<10> > exp_table4_address0;
    sc_signal< sc_logic > exp_table4_ce0;
    sc_signal< sc_lv<17> > exp_table4_q0;
    sc_signal< sc_lv<10> > invert_table5_address0;
    sc_signal< sc_logic > invert_table5_ce0;
    sc_signal< sc_lv<18> > invert_table5_q0;
    sc_signal< sc_lv<20> > tmp_data_0_V_1_reg_627;
    sc_signal< sc_logic > io_acc_block_signal_op17;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter4;
    sc_signal< sc_logic > io_acc_block_signal_op131;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<20> > tmp_data_1_V_1_reg_634;
    sc_signal< sc_lv<20> > tmp_data_2_V_1_reg_641;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_192_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_reg_648;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state11_pp0_stage1_iter3;
    sc_signal< bool > ap_block_state14_pp0_stage1_iter4;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<20> > x_max_V_fu_206_p3;
    sc_signal< sc_lv<20> > x_max_V_reg_653;
    sc_signal< sc_lv<10> > y_V_fu_407_p3;
    sc_signal< sc_lv<10> > y_V_reg_658;
    sc_signal< sc_lv<10> > y_V_1_fu_441_p3;
    sc_signal< sc_lv<10> > y_V_1_reg_663;
    sc_signal< sc_lv<10> > y_V_2_fu_475_p3;
    sc_signal< sc_lv<10> > y_V_2_reg_668;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_678;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_678_pp0_iter2_reg;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_689;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_689_pp0_iter3_reg;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_700;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_700_pp0_iter3_reg;
    sc_signal< sc_lv<18> > ret_V_fu_501_p2;
    sc_signal< sc_lv<18> > ret_V_reg_707;
    sc_signal< sc_lv<10> > y_V_3_fu_599_p3;
    sc_signal< sc_lv<10> > y_V_3_reg_713;
    sc_signal< sc_lv<18> > inv_exp_sum_V_reg_723;
    sc_signal< sc_lv<28> > sext_ln241_fu_611_p1;
    sc_signal< sc_lv<28> > sext_ln241_reg_728;
    sc_signal< sc_lv<28> > zext_ln1118_fu_615_p1;
    sc_signal< sc_lv<20> > tmp_data_0_V_reg_738;
    sc_signal< sc_lv<28> > zext_ln1118_1_fu_619_p1;
    sc_signal< sc_lv<20> > tmp_data_1_V_reg_748;
    sc_signal< sc_lv<28> > zext_ln1118_2_fu_623_p1;
    sc_signal< sc_lv<20> > tmp_data_2_V_reg_758;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0_reg;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln225_fu_483_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln225_1_fu_487_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > zext_ln225_2_fu_491_p1;
    sc_signal< sc_lv<64> > zext_ln235_fu_607_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<17> > grp_fu_153_p0;
    sc_signal< sc_lv<18> > grp_fu_153_p1;
    sc_signal< sc_lv<28> > grp_fu_153_p2;
    sc_signal< sc_lv<20> > select_ln65_fu_196_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_201_p2;
    sc_signal< sc_lv<21> > sext_ln703_fu_213_p1;
    sc_signal< sc_lv<21> > sext_ln703_1_fu_216_p1;
    sc_signal< sc_lv<21> > sub_ln1193_fu_219_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_233_p3;
    sc_signal< sc_lv<1> > tmp_5_fu_225_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_241_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_259_p2;
    sc_signal< sc_lv<21> > sext_ln703_2_fu_271_p1;
    sc_signal< sc_lv<21> > sub_ln1193_1_fu_274_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_288_p3;
    sc_signal< sc_lv<1> > tmp_9_fu_280_p3;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_296_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_314_p2;
    sc_signal< sc_lv<21> > sext_ln703_3_fu_326_p1;
    sc_signal< sc_lv<21> > sub_ln1193_2_fu_329_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_343_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_335_p3;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_351_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_369_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_253_p2;
    sc_signal< sc_lv<10> > tmp_fu_381_p4;
    sc_signal< sc_lv<1> > and_ln786_fu_247_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_265_p2;
    sc_signal< sc_lv<10> > select_ln340_fu_391_p3;
    sc_signal< sc_lv<10> > select_ln388_fu_399_p3;
    sc_signal< sc_lv<1> > xor_ln340_4_fu_308_p2;
    sc_signal< sc_lv<10> > tmp_6_fu_415_p4;
    sc_signal< sc_lv<1> > and_ln786_1_fu_302_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_320_p2;
    sc_signal< sc_lv<10> > select_ln340_2_fu_425_p3;
    sc_signal< sc_lv<10> > select_ln388_1_fu_433_p3;
    sc_signal< sc_lv<1> > xor_ln340_5_fu_363_p2;
    sc_signal< sc_lv<10> > tmp_8_fu_449_p4;
    sc_signal< sc_lv<1> > and_ln786_2_fu_357_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_375_p2;
    sc_signal< sc_lv<10> > select_ln340_4_fu_459_p3;
    sc_signal< sc_lv<10> > select_ln388_2_fu_467_p3;
    sc_signal< sc_lv<18> > zext_ln36_2_fu_498_p1;
    sc_signal< sc_lv<18> > zext_ln36_1_fu_495_p1;
    sc_signal< sc_lv<19> > rhs_V_fu_513_p1;
    sc_signal< sc_lv<19> > lhs_V_fu_510_p1;
    sc_signal< sc_lv<19> > ret_V_1_fu_516_p2;
    sc_signal< sc_lv<18> > zext_ln36_fu_507_p1;
    sc_signal< sc_lv<18> > p_Val2_9_fu_530_p2;
    sc_signal< sc_lv<1> > p_Result_7_fu_535_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_522_p3;
    sc_signal< sc_lv<1> > xor_ln786_3_fu_543_p2;
    sc_signal< sc_lv<1> > xor_ln340_7_fu_561_p2;
    sc_signal< sc_lv<1> > xor_ln340_6_fu_555_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_573_p4;
    sc_signal< sc_lv<1> > underflow_fu_549_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_567_p2;
    sc_signal< sc_lv<10> > select_ln340_6_fu_583_p3;
    sc_signal< sc_lv<10> > select_ln388_3_fu_591_p3;
    sc_signal< sc_logic > grp_fu_153_ce;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to4;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0_1to5;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_pp0_stage1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage2;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln786_1_fu_302_p2();
    void thread_and_ln786_2_fu_357_p2();
    void thread_and_ln786_fu_247_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state10_pp0_stage0_iter3();
    void thread_ap_block_state11_pp0_stage1_iter3();
    void thread_ap_block_state12_pp0_stage2_iter3();
    void thread_ap_block_state13_pp0_stage0_iter4();
    void thread_ap_block_state14_pp0_stage1_iter4();
    void thread_ap_block_state15_pp0_stage2_iter4();
    void thread_ap_block_state16_pp0_stage0_iter5();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage2_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state6_pp0_stage2_iter1();
    void thread_ap_block_state7_pp0_stage0_iter2();
    void thread_ap_block_state8_pp0_stage1_iter2();
    void thread_ap_block_state9_pp0_stage2_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to4();
    void thread_ap_idle_pp0_1to5();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_exp_table4_address0();
    void thread_exp_table4_ce0();
    void thread_grp_fu_153_ce();
    void thread_grp_fu_153_p0();
    void thread_grp_fu_153_p1();
    void thread_icmp_ln1496_1_fu_201_p2();
    void thread_icmp_ln1496_fu_192_p2();
    void thread_invert_table5_address0();
    void thread_invert_table5_ce0();
    void thread_io_acc_block_signal_op131();
    void thread_io_acc_block_signal_op17();
    void thread_lhs_V_fu_510_p1();
    void thread_or_ln340_1_fu_320_p2();
    void thread_or_ln340_2_fu_375_p2();
    void thread_or_ln340_3_fu_567_p2();
    void thread_or_ln340_fu_265_p2();
    void thread_p_Result_7_fu_535_p3();
    void thread_p_Result_s_fu_522_p3();
    void thread_p_Val2_9_fu_530_p2();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_ret_V_1_fu_516_p2();
    void thread_ret_V_fu_501_p2();
    void thread_rhs_V_fu_513_p1();
    void thread_select_ln340_2_fu_425_p3();
    void thread_select_ln340_4_fu_459_p3();
    void thread_select_ln340_6_fu_583_p3();
    void thread_select_ln340_fu_391_p3();
    void thread_select_ln388_1_fu_433_p3();
    void thread_select_ln388_2_fu_467_p3();
    void thread_select_ln388_3_fu_591_p3();
    void thread_select_ln388_fu_399_p3();
    void thread_select_ln65_fu_196_p3();
    void thread_sext_ln241_fu_611_p1();
    void thread_sext_ln703_1_fu_216_p1();
    void thread_sext_ln703_2_fu_271_p1();
    void thread_sext_ln703_3_fu_326_p1();
    void thread_sext_ln703_fu_213_p1();
    void thread_sub_ln1193_1_fu_274_p2();
    void thread_sub_ln1193_2_fu_329_p2();
    void thread_sub_ln1193_fu_219_p2();
    void thread_tmp_10_fu_288_p3();
    void thread_tmp_11_fu_335_p3();
    void thread_tmp_12_fu_343_p3();
    void thread_tmp_5_fu_225_p3();
    void thread_tmp_6_fu_415_p4();
    void thread_tmp_7_fu_233_p3();
    void thread_tmp_8_fu_449_p4();
    void thread_tmp_9_fu_280_p3();
    void thread_tmp_fu_381_p4();
    void thread_tmp_s_fu_573_p4();
    void thread_underflow_fu_549_p2();
    void thread_x_max_V_fu_206_p3();
    void thread_xor_ln340_1_fu_314_p2();
    void thread_xor_ln340_2_fu_369_p2();
    void thread_xor_ln340_3_fu_253_p2();
    void thread_xor_ln340_4_fu_308_p2();
    void thread_xor_ln340_5_fu_363_p2();
    void thread_xor_ln340_6_fu_555_p2();
    void thread_xor_ln340_7_fu_561_p2();
    void thread_xor_ln340_fu_259_p2();
    void thread_xor_ln786_1_fu_296_p2();
    void thread_xor_ln786_2_fu_351_p2();
    void thread_xor_ln786_3_fu_543_p2();
    void thread_xor_ln786_fu_241_p2();
    void thread_y_V_1_fu_441_p3();
    void thread_y_V_2_fu_475_p3();
    void thread_y_V_3_fu_599_p3();
    void thread_y_V_fu_407_p3();
    void thread_zext_ln1118_1_fu_619_p1();
    void thread_zext_ln1118_2_fu_623_p1();
    void thread_zext_ln1118_fu_615_p1();
    void thread_zext_ln225_1_fu_487_p1();
    void thread_zext_ln225_2_fu_491_p1();
    void thread_zext_ln225_fu_483_p1();
    void thread_zext_ln235_fu_607_p1();
    void thread_zext_ln36_1_fu_495_p1();
    void thread_zext_ln36_2_fu_498_p1();
    void thread_zext_ln36_fu_507_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
