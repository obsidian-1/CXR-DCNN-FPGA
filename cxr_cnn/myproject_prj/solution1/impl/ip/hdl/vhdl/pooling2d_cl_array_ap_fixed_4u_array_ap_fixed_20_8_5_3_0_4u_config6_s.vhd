-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (19 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (19 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (19 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (19 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (19 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (19 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (19 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (19 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv14_3E04 : STD_LOGIC_VECTOR (13 downto 0) := "11111000000100";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv20_3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_3_4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_16 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_17 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_18 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_19 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_28 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_29 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_30 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_31 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_20 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_21 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_22 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_23 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_32 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_33 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_34 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal kernel_data_V_3_35 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal line_buffer_Array_V_3_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_3_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_3_0_0_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal line_buffer_Array_V_3_1_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_3_1_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_3_1_0_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal line_buffer_Array_V_3_0_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_3_0_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_3_0_1_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal line_buffer_Array_V_3_1_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_3_1_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_3_1_1_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal line_buffer_Array_V_3_0_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_3_0_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_3_0_2_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal line_buffer_Array_V_3_1_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_3_1_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_3_1_2_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal line_buffer_Array_V_3_0_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_3_0_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_3_0_3_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal line_buffer_Array_V_3_1_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_3_1_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_3_1_3_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln241_reg_2199 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal and_ln191_6_reg_2260 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_6_reg_2260_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_214 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln241_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln241_reg_2199_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln241_fu_242_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln241_reg_2203 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_data_0_V_3_reg_2208 : STD_LOGIC_VECTOR (19 downto 0);
    signal io_acc_block_signal_op27 : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter3 : BOOLEAN;
    signal io_acc_block_signal_op318 : STD_LOGIC;
    signal ap_block_state11_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_data_1_V_3_reg_2214 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_data_2_V_3_reg_2220 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_data_3_V_2_reg_2226 : STD_LOGIC_VECTOR (19 downto 0);
    signal DataOut_V_68_reg_2232 : STD_LOGIC_VECTOR (19 downto 0);
    signal DataOut_V_70_reg_2239 : STD_LOGIC_VECTOR (19 downto 0);
    signal DataOut_V_72_reg_2246 : STD_LOGIC_VECTOR (19 downto 0);
    signal DataOut_V_74_reg_2253 : STD_LOGIC_VECTOR (19 downto 0);
    signal and_ln191_6_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_6_reg_2260_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_6_reg_2260_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_650_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln_reg_2264 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_s_fu_660_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_s_reg_2270 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_141_fu_670_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_141_reg_2276 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_142_fu_680_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_142_reg_2282 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_143_fu_690_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_143_reg_2288 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_144_fu_700_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_144_reg_2294 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_145_fu_709_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_145_reg_2300 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_146_fu_719_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_146_reg_2306 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_147_reg_2312 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_147_reg_2312_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_147_reg_2312_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1496_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_2317 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_120_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_120_reg_2323 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_122_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_122_reg_2329 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_123_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_123_reg_2335 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_148_fu_762_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_148_reg_2341 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_149_fu_772_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_149_reg_2347 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_150_fu_782_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_150_reg_2353 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_151_fu_792_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_151_reg_2359 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_152_fu_802_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_152_reg_2365 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_153_fu_812_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_153_reg_2371 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_154_fu_821_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_154_reg_2377 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_155_fu_831_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_155_reg_2383 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_156_reg_2389 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_156_reg_2389_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_156_reg_2389_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1496_1_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_reg_2394 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_127_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_127_reg_2400 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_129_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_129_reg_2406 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_130_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_130_reg_2412 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_157_fu_874_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_157_reg_2418 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_158_fu_884_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_158_reg_2424 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_159_fu_894_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_159_reg_2430 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_160_fu_904_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_160_reg_2436 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_161_fu_914_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_161_reg_2442 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_162_fu_924_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_162_reg_2448 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_163_fu_933_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_163_reg_2454 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_164_fu_943_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_164_reg_2460 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_165_reg_2466 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_165_reg_2466_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_165_reg_2466_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1496_2_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_2_reg_2471 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_134_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_134_reg_2477 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_136_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_136_reg_2483 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_137_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_137_reg_2489 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_166_fu_986_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_166_reg_2495 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_167_fu_996_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_167_reg_2501 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_168_fu_1006_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_168_reg_2507 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_169_fu_1016_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_169_reg_2513 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_170_fu_1026_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_170_reg_2519 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_171_fu_1036_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_171_reg_2525 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_172_fu_1045_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_172_reg_2531 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_173_fu_1055_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_173_reg_2537 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_174_reg_2543 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_174_reg_2543_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_174_reg_2543_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1496_3_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_141_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_141_reg_2554 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_143_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_143_reg_2560 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_144_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_144_reg_2566 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln212_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln212_reg_2572 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln227_fu_1122_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln227_reg_2576 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln216_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_2581 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln222_fu_1166_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln222_reg_2585 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_161_fu_1206_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_161_reg_2590 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1496_124_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_124_reg_2596 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_171_fu_1256_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_171_reg_2601 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1496_131_fu_1274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_131_reg_2607 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_181_fu_1306_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_181_reg_2612 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1496_138_fu_1324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_138_reg_2618 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_191_fu_1356_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_191_reg_2623 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1496_145_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_145_reg_2629 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_0_V_fu_1385_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_reg_2634 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_reg_2634_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_fu_1388_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_reg_2640 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_reg_2640_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_fu_1391_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_reg_2646 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_reg_2646_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_fu_1394_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_reg_2652 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_reg_2652_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_fu_1397_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_reg_2658 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_reg_2658_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_fu_1400_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_reg_2664 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_reg_2664_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_fu_1403_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_reg_2670 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_reg_2670_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_fu_1406_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_reg_2676 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_reg_2676_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln_fu_1412_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln_reg_2690 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln65_166_fu_1464_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_166_reg_2695 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_s_fu_1475_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_s_reg_2700 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_15_fu_1513_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_15_reg_2705 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_15_reg_2705_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_15_fu_1516_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_15_reg_2711 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_15_reg_2711_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_15_fu_1519_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_15_reg_2717 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_15_reg_2717_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_15_fu_1522_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_15_reg_2723 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_15_reg_2723_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_15_fu_1525_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_15_reg_2729 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_15_reg_2729_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_15_fu_1528_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_15_reg_2735 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_15_reg_2735_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_15_fu_1531_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_15_reg_2741 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_15_reg_2741_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_15_fu_1534_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_15_reg_2747 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_15_reg_2747_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_46_fu_1540_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_46_reg_2761 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln65_176_fu_1592_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_176_reg_2766 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_47_fu_1603_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_47_reg_2771 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_16_fu_1641_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_16_reg_2776 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_16_reg_2776_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_16_fu_1644_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_16_reg_2782 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_16_reg_2782_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_16_fu_1647_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_16_reg_2788 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_16_reg_2788_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_16_fu_1650_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_16_reg_2794 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_16_reg_2794_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_16_fu_1653_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_16_reg_2800 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_16_reg_2800_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_16_fu_1656_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_16_reg_2806 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_16_reg_2806_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_16_fu_1659_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_16_reg_2812 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_16_reg_2812_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_16_fu_1662_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_16_reg_2818 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_16_reg_2818_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_49_fu_1668_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_49_reg_2832 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln65_186_fu_1720_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_186_reg_2837 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_50_fu_1731_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_50_reg_2842 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_17_fu_1769_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_17_reg_2847 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_0_V_17_reg_2847_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_17_fu_1772_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_17_reg_2853 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_1_V_17_reg_2853_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_17_fu_1775_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_17_reg_2859 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_2_V_17_reg_2859_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_17_fu_1778_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_17_reg_2865 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_3_V_17_reg_2865_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_17_fu_1781_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_17_reg_2871 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_4_V_17_reg_2871_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_17_fu_1784_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_17_reg_2877 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_5_V_17_reg_2877_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_17_fu_1787_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_17_reg_2883 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_6_V_17_reg_2883_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_17_fu_1790_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_17_reg_2889 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_7_V_17_reg_2889_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_52_fu_1796_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_52_reg_2903 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln65_196_fu_1848_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_196_reg_2908 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_53_fu_1859_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_53_reg_2913 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln65_167_fu_1910_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_167_reg_2918 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_177_fu_1924_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_177_reg_2923 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_187_fu_1938_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_187_reg_2928 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_197_fu_1952_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_197_reg_2933 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln65_48_fu_1959_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln65_48_reg_2938 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_45_fu_1962_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_45_reg_2943 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln65_51_fu_1984_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln65_51_reg_2948 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_48_fu_1987_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_48_reg_2953 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln65_54_fu_2009_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln65_54_reg_2958 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_51_fu_2012_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_51_reg_2963 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln65_57_fu_2034_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln65_57_reg_2968 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_54_fu_2037_p18 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_54_reg_2973 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_8_V_fu_2059_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_8_V_reg_2978 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln40_fu_2067_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_reg_2983 : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_window_8_V_15_fu_2074_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_8_V_15_reg_2988 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln40_15_fu_2082_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_15_reg_2993 : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_window_8_V_16_fu_2089_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_8_V_16_reg_2998 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln40_16_fu_2097_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_16_reg_3003 : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_window_8_V_17_fu_2104_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_window_8_V_17_reg_3008 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln40_17_fu_2112_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_17_reg_3013 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_fu_2119_p11 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_16_reg_3018 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_17_fu_2133_p11 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_17_reg_3023 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_19_fu_2147_p11 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_19_reg_3028 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_20_fu_2161_p11 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_20_reg_3033 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_flatten_phi_fu_218_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_storemerge_i_i_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_i_i_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln225_fu_1104_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln220_fu_1148_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal tmp_fu_596_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_18_fu_616_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln191_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln191_7_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln191_8_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln191_9_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_5_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln227_fu_1116_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln222_fu_1160_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln65_fu_1183_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_160_fu_1195_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1496_121_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_159_fu_1188_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_fu_1180_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_163_fu_1214_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_165_fu_1219_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_168_fu_1233_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_170_fu_1245_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1496_128_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_169_fu_1238_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_49_fu_1230_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_173_fu_1264_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_175_fu_1269_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_178_fu_1283_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_180_fu_1295_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1496_135_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_179_fu_1288_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_52_fu_1280_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_183_fu_1314_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_185_fu_1319_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_188_fu_1333_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_190_fu_1345_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1496_142_fu_1350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_189_fu_1338_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_55_fu_1330_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_193_fu_1364_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln65_195_fu_1369_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal phi_ln_fu_1412_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln_fu_1412_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln_fu_1412_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln_fu_1412_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_164_fu_1457_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_162_fu_1450_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_s_fu_1475_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_s_fu_1475_p6 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_s_fu_1475_p7 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_s_fu_1475_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_46_fu_1540_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_46_fu_1540_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_46_fu_1540_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_46_fu_1540_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_174_fu_1585_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_172_fu_1578_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_47_fu_1603_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_47_fu_1603_p6 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_47_fu_1603_p7 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_47_fu_1603_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_49_fu_1668_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_49_fu_1668_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_49_fu_1668_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_49_fu_1668_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_184_fu_1713_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_182_fu_1706_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_50_fu_1731_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_50_fu_1731_p6 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_50_fu_1731_p7 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_50_fu_1731_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_52_fu_1796_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_52_fu_1796_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_52_fu_1796_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_52_fu_1796_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_194_fu_1841_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_192_fu_1834_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_53_fu_1859_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_53_fu_1859_p6 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_53_fu_1859_p7 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_ln65_53_fu_1859_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_125_fu_1906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_47_fu_1903_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1496_132_fu_1920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_50_fu_1917_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1496_139_fu_1934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_53_fu_1931_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1496_146_fu_1948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_56_fu_1945_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_45_fu_1962_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_48_fu_1987_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_51_fu_2012_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_54_fu_2037_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_126_fu_2062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_133_fu_2077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_140_fu_2092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_147_fu_2107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_680 : BOOLEAN;
    signal ap_condition_675 : BOOLEAN;
    signal ap_condition_662 : BOOLEAN;
    signal ap_condition_1828 : BOOLEAN;
    signal ap_condition_401 : BOOLEAN;
    signal ap_condition_1833 : BOOLEAN;

    component myproject_axi_mux_164_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        din3 : IN STD_LOGIC_VECTOR (19 downto 0);
        din4 : IN STD_LOGIC_VECTOR (19 downto 0);
        din5 : IN STD_LOGIC_VECTOR (19 downto 0);
        din6 : IN STD_LOGIC_VECTOR (19 downto 0);
        din7 : IN STD_LOGIC_VECTOR (19 downto 0);
        din8 : IN STD_LOGIC_VECTOR (19 downto 0);
        din9 : IN STD_LOGIC_VECTOR (19 downto 0);
        din10 : IN STD_LOGIC_VECTOR (19 downto 0);
        din11 : IN STD_LOGIC_VECTOR (19 downto 0);
        din12 : IN STD_LOGIC_VECTOR (19 downto 0);
        din13 : IN STD_LOGIC_VECTOR (19 downto 0);
        din14 : IN STD_LOGIC_VECTOR (19 downto 0);
        din15 : IN STD_LOGIC_VECTOR (19 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_axi_mux_94_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        din3 : IN STD_LOGIC_VECTOR (19 downto 0);
        din4 : IN STD_LOGIC_VECTOR (19 downto 0);
        din5 : IN STD_LOGIC_VECTOR (19 downto 0);
        din6 : IN STD_LOGIC_VECTOR (19 downto 0);
        din7 : IN STD_LOGIC_VECTOR (19 downto 0);
        din8 : IN STD_LOGIC_VECTOR (19 downto 0);
        din9 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (19 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;



begin
    line_buffer_Array_V_3_0_0_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe
    generic map (
        DataWidth => 20,
        AddressRange => 126,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7D,
        ce0 => line_buffer_Array_V_3_0_0_ce0,
        we0 => line_buffer_Array_V_3_0_0_we0,
        d0 => data_V_data_0_V_dout,
        q0 => line_buffer_Array_V_3_0_0_q0);

    line_buffer_Array_V_3_1_0_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe
    generic map (
        DataWidth => 20,
        AddressRange => 126,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7D,
        ce0 => line_buffer_Array_V_3_1_0_ce0,
        we0 => line_buffer_Array_V_3_1_0_we0,
        d0 => DataOut_V_68_reg_2232,
        q0 => line_buffer_Array_V_3_1_0_q0);

    line_buffer_Array_V_3_0_1_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe
    generic map (
        DataWidth => 20,
        AddressRange => 126,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7D,
        ce0 => line_buffer_Array_V_3_0_1_ce0,
        we0 => line_buffer_Array_V_3_0_1_we0,
        d0 => data_V_data_1_V_dout,
        q0 => line_buffer_Array_V_3_0_1_q0);

    line_buffer_Array_V_3_1_1_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe
    generic map (
        DataWidth => 20,
        AddressRange => 126,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7D,
        ce0 => line_buffer_Array_V_3_1_1_ce0,
        we0 => line_buffer_Array_V_3_1_1_we0,
        d0 => DataOut_V_70_reg_2239,
        q0 => line_buffer_Array_V_3_1_1_q0);

    line_buffer_Array_V_3_0_2_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe
    generic map (
        DataWidth => 20,
        AddressRange => 126,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7D,
        ce0 => line_buffer_Array_V_3_0_2_ce0,
        we0 => line_buffer_Array_V_3_0_2_we0,
        d0 => data_V_data_2_V_dout,
        q0 => line_buffer_Array_V_3_0_2_q0);

    line_buffer_Array_V_3_1_2_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe
    generic map (
        DataWidth => 20,
        AddressRange => 126,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7D,
        ce0 => line_buffer_Array_V_3_1_2_ce0,
        we0 => line_buffer_Array_V_3_1_2_we0,
        d0 => DataOut_V_72_reg_2246,
        q0 => line_buffer_Array_V_3_1_2_q0);

    line_buffer_Array_V_3_0_3_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe
    generic map (
        DataWidth => 20,
        AddressRange => 126,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7D,
        ce0 => line_buffer_Array_V_3_0_3_ce0,
        we0 => line_buffer_Array_V_3_0_3_we0,
        d0 => data_V_data_3_V_dout,
        q0 => line_buffer_Array_V_3_0_3_q0);

    line_buffer_Array_V_3_1_3_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe
    generic map (
        DataWidth => 20,
        AddressRange => 126,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7D,
        ce0 => line_buffer_Array_V_3_1_3_ce0,
        we0 => line_buffer_Array_V_3_1_3_we0,
        d0 => DataOut_V_74_reg_2253,
        q0 => line_buffer_Array_V_3_1_3_q0);

    myproject_axi_mux_164_20_1_1_U19 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => phi_ln_fu_1412_p1,
        din1 => phi_ln_fu_1412_p2,
        din2 => phi_ln_fu_1412_p3,
        din3 => pool_window_3_V_fu_1394_p1,
        din4 => pool_window_3_V_fu_1394_p1,
        din5 => pool_window_3_V_fu_1394_p1,
        din6 => pool_window_3_V_fu_1394_p1,
        din7 => pool_window_3_V_fu_1394_p1,
        din8 => pool_window_3_V_fu_1394_p1,
        din9 => pool_window_3_V_fu_1394_p1,
        din10 => pool_window_3_V_fu_1394_p1,
        din11 => pool_window_3_V_fu_1394_p1,
        din12 => pool_window_3_V_fu_1394_p1,
        din13 => pool_window_3_V_fu_1394_p1,
        din14 => pool_window_3_V_fu_1394_p1,
        din15 => pool_window_3_V_fu_1394_p1,
        din16 => phi_ln_fu_1412_p17,
        dout => phi_ln_fu_1412_p18);

    myproject_axi_mux_164_20_1_1_U20 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_7_V_fu_1406_p1,
        din1 => pool_window_7_V_fu_1406_p1,
        din2 => pool_window_7_V_fu_1406_p1,
        din3 => pool_window_7_V_fu_1406_p1,
        din4 => phi_ln65_s_fu_1475_p5,
        din5 => phi_ln65_s_fu_1475_p6,
        din6 => phi_ln65_s_fu_1475_p7,
        din7 => pool_window_7_V_fu_1406_p1,
        din8 => pool_window_7_V_fu_1406_p1,
        din9 => pool_window_7_V_fu_1406_p1,
        din10 => pool_window_7_V_fu_1406_p1,
        din11 => pool_window_7_V_fu_1406_p1,
        din12 => pool_window_7_V_fu_1406_p1,
        din13 => pool_window_7_V_fu_1406_p1,
        din14 => pool_window_7_V_fu_1406_p1,
        din15 => pool_window_7_V_fu_1406_p1,
        din16 => phi_ln65_s_fu_1475_p17,
        dout => phi_ln65_s_fu_1475_p18);

    myproject_axi_mux_164_20_1_1_U21 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => phi_ln65_46_fu_1540_p1,
        din1 => phi_ln65_46_fu_1540_p2,
        din2 => phi_ln65_46_fu_1540_p3,
        din3 => pool_window_3_V_15_fu_1522_p1,
        din4 => pool_window_3_V_15_fu_1522_p1,
        din5 => pool_window_3_V_15_fu_1522_p1,
        din6 => pool_window_3_V_15_fu_1522_p1,
        din7 => pool_window_3_V_15_fu_1522_p1,
        din8 => pool_window_3_V_15_fu_1522_p1,
        din9 => pool_window_3_V_15_fu_1522_p1,
        din10 => pool_window_3_V_15_fu_1522_p1,
        din11 => pool_window_3_V_15_fu_1522_p1,
        din12 => pool_window_3_V_15_fu_1522_p1,
        din13 => pool_window_3_V_15_fu_1522_p1,
        din14 => pool_window_3_V_15_fu_1522_p1,
        din15 => pool_window_3_V_15_fu_1522_p1,
        din16 => phi_ln65_46_fu_1540_p17,
        dout => phi_ln65_46_fu_1540_p18);

    myproject_axi_mux_164_20_1_1_U22 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_7_V_15_fu_1534_p1,
        din1 => pool_window_7_V_15_fu_1534_p1,
        din2 => pool_window_7_V_15_fu_1534_p1,
        din3 => pool_window_7_V_15_fu_1534_p1,
        din4 => phi_ln65_47_fu_1603_p5,
        din5 => phi_ln65_47_fu_1603_p6,
        din6 => phi_ln65_47_fu_1603_p7,
        din7 => pool_window_7_V_15_fu_1534_p1,
        din8 => pool_window_7_V_15_fu_1534_p1,
        din9 => pool_window_7_V_15_fu_1534_p1,
        din10 => pool_window_7_V_15_fu_1534_p1,
        din11 => pool_window_7_V_15_fu_1534_p1,
        din12 => pool_window_7_V_15_fu_1534_p1,
        din13 => pool_window_7_V_15_fu_1534_p1,
        din14 => pool_window_7_V_15_fu_1534_p1,
        din15 => pool_window_7_V_15_fu_1534_p1,
        din16 => phi_ln65_47_fu_1603_p17,
        dout => phi_ln65_47_fu_1603_p18);

    myproject_axi_mux_164_20_1_1_U23 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => phi_ln65_49_fu_1668_p1,
        din1 => phi_ln65_49_fu_1668_p2,
        din2 => phi_ln65_49_fu_1668_p3,
        din3 => pool_window_3_V_16_fu_1650_p1,
        din4 => pool_window_3_V_16_fu_1650_p1,
        din5 => pool_window_3_V_16_fu_1650_p1,
        din6 => pool_window_3_V_16_fu_1650_p1,
        din7 => pool_window_3_V_16_fu_1650_p1,
        din8 => pool_window_3_V_16_fu_1650_p1,
        din9 => pool_window_3_V_16_fu_1650_p1,
        din10 => pool_window_3_V_16_fu_1650_p1,
        din11 => pool_window_3_V_16_fu_1650_p1,
        din12 => pool_window_3_V_16_fu_1650_p1,
        din13 => pool_window_3_V_16_fu_1650_p1,
        din14 => pool_window_3_V_16_fu_1650_p1,
        din15 => pool_window_3_V_16_fu_1650_p1,
        din16 => phi_ln65_49_fu_1668_p17,
        dout => phi_ln65_49_fu_1668_p18);

    myproject_axi_mux_164_20_1_1_U24 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_7_V_16_fu_1662_p1,
        din1 => pool_window_7_V_16_fu_1662_p1,
        din2 => pool_window_7_V_16_fu_1662_p1,
        din3 => pool_window_7_V_16_fu_1662_p1,
        din4 => phi_ln65_50_fu_1731_p5,
        din5 => phi_ln65_50_fu_1731_p6,
        din6 => phi_ln65_50_fu_1731_p7,
        din7 => pool_window_7_V_16_fu_1662_p1,
        din8 => pool_window_7_V_16_fu_1662_p1,
        din9 => pool_window_7_V_16_fu_1662_p1,
        din10 => pool_window_7_V_16_fu_1662_p1,
        din11 => pool_window_7_V_16_fu_1662_p1,
        din12 => pool_window_7_V_16_fu_1662_p1,
        din13 => pool_window_7_V_16_fu_1662_p1,
        din14 => pool_window_7_V_16_fu_1662_p1,
        din15 => pool_window_7_V_16_fu_1662_p1,
        din16 => phi_ln65_50_fu_1731_p17,
        dout => phi_ln65_50_fu_1731_p18);

    myproject_axi_mux_164_20_1_1_U25 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => phi_ln65_52_fu_1796_p1,
        din1 => phi_ln65_52_fu_1796_p2,
        din2 => phi_ln65_52_fu_1796_p3,
        din3 => pool_window_3_V_17_fu_1778_p1,
        din4 => pool_window_3_V_17_fu_1778_p1,
        din5 => pool_window_3_V_17_fu_1778_p1,
        din6 => pool_window_3_V_17_fu_1778_p1,
        din7 => pool_window_3_V_17_fu_1778_p1,
        din8 => pool_window_3_V_17_fu_1778_p1,
        din9 => pool_window_3_V_17_fu_1778_p1,
        din10 => pool_window_3_V_17_fu_1778_p1,
        din11 => pool_window_3_V_17_fu_1778_p1,
        din12 => pool_window_3_V_17_fu_1778_p1,
        din13 => pool_window_3_V_17_fu_1778_p1,
        din14 => pool_window_3_V_17_fu_1778_p1,
        din15 => pool_window_3_V_17_fu_1778_p1,
        din16 => phi_ln65_52_fu_1796_p17,
        dout => phi_ln65_52_fu_1796_p18);

    myproject_axi_mux_164_20_1_1_U26 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_7_V_17_fu_1790_p1,
        din1 => pool_window_7_V_17_fu_1790_p1,
        din2 => pool_window_7_V_17_fu_1790_p1,
        din3 => pool_window_7_V_17_fu_1790_p1,
        din4 => phi_ln65_53_fu_1859_p5,
        din5 => phi_ln65_53_fu_1859_p6,
        din6 => phi_ln65_53_fu_1859_p7,
        din7 => pool_window_7_V_17_fu_1790_p1,
        din8 => pool_window_7_V_17_fu_1790_p1,
        din9 => pool_window_7_V_17_fu_1790_p1,
        din10 => pool_window_7_V_17_fu_1790_p1,
        din11 => pool_window_7_V_17_fu_1790_p1,
        din12 => pool_window_7_V_17_fu_1790_p1,
        din13 => pool_window_7_V_17_fu_1790_p1,
        din14 => pool_window_7_V_17_fu_1790_p1,
        din15 => pool_window_7_V_17_fu_1790_p1,
        din16 => phi_ln65_53_fu_1859_p17,
        dout => phi_ln65_53_fu_1859_p18);

    myproject_axi_mux_164_20_1_1_U27 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_0_V_reg_2634,
        din1 => pool_window_1_V_reg_2640,
        din2 => pool_window_2_V_reg_2646,
        din3 => pool_window_3_V_reg_2652,
        din4 => pool_window_4_V_reg_2658,
        din5 => pool_window_5_V_reg_2664,
        din6 => pool_window_6_V_reg_2670,
        din7 => pool_window_7_V_reg_2676,
        din8 => pool_window_7_V_reg_2676,
        din9 => pool_window_7_V_reg_2676,
        din10 => pool_window_7_V_reg_2676,
        din11 => pool_window_7_V_reg_2676,
        din12 => pool_window_7_V_reg_2676,
        din13 => pool_window_7_V_reg_2676,
        din14 => pool_window_7_V_reg_2676,
        din15 => pool_window_7_V_reg_2676,
        din16 => phi_ln65_45_fu_1962_p17,
        dout => phi_ln65_45_fu_1962_p18);

    myproject_axi_mux_164_20_1_1_U28 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_0_V_15_reg_2705,
        din1 => pool_window_1_V_15_reg_2711,
        din2 => pool_window_2_V_15_reg_2717,
        din3 => pool_window_3_V_15_reg_2723,
        din4 => pool_window_4_V_15_reg_2729,
        din5 => pool_window_5_V_15_reg_2735,
        din6 => pool_window_6_V_15_reg_2741,
        din7 => pool_window_7_V_15_reg_2747,
        din8 => pool_window_7_V_15_reg_2747,
        din9 => pool_window_7_V_15_reg_2747,
        din10 => pool_window_7_V_15_reg_2747,
        din11 => pool_window_7_V_15_reg_2747,
        din12 => pool_window_7_V_15_reg_2747,
        din13 => pool_window_7_V_15_reg_2747,
        din14 => pool_window_7_V_15_reg_2747,
        din15 => pool_window_7_V_15_reg_2747,
        din16 => phi_ln65_48_fu_1987_p17,
        dout => phi_ln65_48_fu_1987_p18);

    myproject_axi_mux_164_20_1_1_U29 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_0_V_16_reg_2776,
        din1 => pool_window_1_V_16_reg_2782,
        din2 => pool_window_2_V_16_reg_2788,
        din3 => pool_window_3_V_16_reg_2794,
        din4 => pool_window_4_V_16_reg_2800,
        din5 => pool_window_5_V_16_reg_2806,
        din6 => pool_window_6_V_16_reg_2812,
        din7 => pool_window_7_V_16_reg_2818,
        din8 => pool_window_7_V_16_reg_2818,
        din9 => pool_window_7_V_16_reg_2818,
        din10 => pool_window_7_V_16_reg_2818,
        din11 => pool_window_7_V_16_reg_2818,
        din12 => pool_window_7_V_16_reg_2818,
        din13 => pool_window_7_V_16_reg_2818,
        din14 => pool_window_7_V_16_reg_2818,
        din15 => pool_window_7_V_16_reg_2818,
        din16 => phi_ln65_51_fu_2012_p17,
        dout => phi_ln65_51_fu_2012_p18);

    myproject_axi_mux_164_20_1_1_U30 : component myproject_axi_mux_164_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 20,
        din10_WIDTH => 20,
        din11_WIDTH => 20,
        din12_WIDTH => 20,
        din13_WIDTH => 20,
        din14_WIDTH => 20,
        din15_WIDTH => 20,
        din16_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_0_V_17_reg_2847,
        din1 => pool_window_1_V_17_reg_2853,
        din2 => pool_window_2_V_17_reg_2859,
        din3 => pool_window_3_V_17_reg_2865,
        din4 => pool_window_4_V_17_reg_2871,
        din5 => pool_window_5_V_17_reg_2877,
        din6 => pool_window_6_V_17_reg_2883,
        din7 => pool_window_7_V_17_reg_2889,
        din8 => pool_window_7_V_17_reg_2889,
        din9 => pool_window_7_V_17_reg_2889,
        din10 => pool_window_7_V_17_reg_2889,
        din11 => pool_window_7_V_17_reg_2889,
        din12 => pool_window_7_V_17_reg_2889,
        din13 => pool_window_7_V_17_reg_2889,
        din14 => pool_window_7_V_17_reg_2889,
        din15 => pool_window_7_V_17_reg_2889,
        din16 => phi_ln65_54_fu_2037_p17,
        dout => phi_ln65_54_fu_2037_p18);

    myproject_axi_mux_94_20_1_1_U31 : component myproject_axi_mux_94_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_0_V_reg_2634_pp0_iter3_reg,
        din1 => pool_window_1_V_reg_2640_pp0_iter3_reg,
        din2 => pool_window_2_V_reg_2646_pp0_iter3_reg,
        din3 => pool_window_3_V_reg_2652_pp0_iter3_reg,
        din4 => pool_window_4_V_reg_2658_pp0_iter3_reg,
        din5 => pool_window_5_V_reg_2664_pp0_iter3_reg,
        din6 => pool_window_6_V_reg_2670_pp0_iter3_reg,
        din7 => pool_window_7_V_reg_2676_pp0_iter3_reg,
        din8 => pool_window_8_V_reg_2978,
        din9 => select_ln40_reg_2983,
        dout => tmp_16_fu_2119_p11);

    myproject_axi_mux_94_20_1_1_U32 : component myproject_axi_mux_94_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_0_V_15_reg_2705_pp0_iter3_reg,
        din1 => pool_window_1_V_15_reg_2711_pp0_iter3_reg,
        din2 => pool_window_2_V_15_reg_2717_pp0_iter3_reg,
        din3 => pool_window_3_V_15_reg_2723_pp0_iter3_reg,
        din4 => pool_window_4_V_15_reg_2729_pp0_iter3_reg,
        din5 => pool_window_5_V_15_reg_2735_pp0_iter3_reg,
        din6 => pool_window_6_V_15_reg_2741_pp0_iter3_reg,
        din7 => pool_window_7_V_15_reg_2747_pp0_iter3_reg,
        din8 => pool_window_8_V_15_reg_2988,
        din9 => select_ln40_15_reg_2993,
        dout => tmp_17_fu_2133_p11);

    myproject_axi_mux_94_20_1_1_U33 : component myproject_axi_mux_94_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_0_V_16_reg_2776_pp0_iter3_reg,
        din1 => pool_window_1_V_16_reg_2782_pp0_iter3_reg,
        din2 => pool_window_2_V_16_reg_2788_pp0_iter3_reg,
        din3 => pool_window_3_V_16_reg_2794_pp0_iter3_reg,
        din4 => pool_window_4_V_16_reg_2800_pp0_iter3_reg,
        din5 => pool_window_5_V_16_reg_2806_pp0_iter3_reg,
        din6 => pool_window_6_V_16_reg_2812_pp0_iter3_reg,
        din7 => pool_window_7_V_16_reg_2818_pp0_iter3_reg,
        din8 => pool_window_8_V_16_reg_2998,
        din9 => select_ln40_16_reg_3003,
        dout => tmp_19_fu_2147_p11);

    myproject_axi_mux_94_20_1_1_U34 : component myproject_axi_mux_94_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 20,
        din2_WIDTH => 20,
        din3_WIDTH => 20,
        din4_WIDTH => 20,
        din5_WIDTH => 20,
        din6_WIDTH => 20,
        din7_WIDTH => 20,
        din8_WIDTH => 20,
        din9_WIDTH => 4,
        dout_WIDTH => 20)
    port map (
        din0 => pool_window_0_V_17_reg_2847_pp0_iter3_reg,
        din1 => pool_window_1_V_17_reg_2853_pp0_iter3_reg,
        din2 => pool_window_2_V_17_reg_2859_pp0_iter3_reg,
        din3 => pool_window_3_V_17_reg_2865_pp0_iter3_reg,
        din4 => pool_window_4_V_17_reg_2871_pp0_iter3_reg,
        din5 => pool_window_5_V_17_reg_2877_pp0_iter3_reg,
        din6 => pool_window_6_V_17_reg_2883_pp0_iter3_reg,
        din7 => pool_window_7_V_17_reg_2889_pp0_iter3_reg,
        din8 => pool_window_8_V_17_reg_3008,
        din9 => select_ln40_17_reg_3013,
        dout => tmp_20_fu_2161_p11);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln216_fu_1142_p2 = ap_const_lv1_1) and (icmp_ln212_fu_1098_p2 = ap_const_lv1_1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_storemerge_i_i_reg_225 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter1_storemerge_i_i_reg_225 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_225;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_675)) then
                if ((ap_const_boolean_1 = ap_condition_680)) then 
                    ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225 <= select_ln222_reg_2585;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_225;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
                indvar_flatten_reg_214 <= add_ln241_reg_2203;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_214 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_662)) then
                if ((icmp_ln212_fu_1098_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln212_fu_1098_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln225_fu_1104_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1828)) then
                if ((icmp_ln216_fu_1142_p2 = ap_const_lv1_1)) then 
                    pY_2 <= ap_const_lv32_0;
                elsif ((icmp_ln216_fu_1142_p2 = ap_const_lv1_0)) then 
                    pY_2 <= add_ln220_fu_1148_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_1833)) then 
                    sX_2 <= select_ln227_reg_2576;
                elsif ((ap_const_boolean_1 = ap_condition_401)) then 
                    sX_2 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then
                DataOut_V_68_reg_2232 <= line_buffer_Array_V_3_0_0_q0;
                DataOut_V_70_reg_2239 <= line_buffer_Array_V_3_0_1_q0;
                DataOut_V_72_reg_2246 <= line_buffer_Array_V_3_0_2_q0;
                DataOut_V_74_reg_2253 <= line_buffer_Array_V_3_0_3_q0;
                tmp_data_0_V_3_reg_2208 <= data_V_data_0_V_dout;
                tmp_data_1_V_3_reg_2214 <= data_V_data_1_V_dout;
                tmp_data_2_V_3_reg_2220 <= data_V_data_2_V_dout;
                tmp_data_3_V_2_reg_2226 <= data_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln241_reg_2203 <= add_ln241_fu_242_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then
                and_ln191_6_reg_2260 <= and_ln191_6_fu_644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln191_6_reg_2260_pp0_iter2_reg <= and_ln191_6_reg_2260;
                and_ln191_6_reg_2260_pp0_iter3_reg <= and_ln191_6_reg_2260_pp0_iter2_reg;
                and_ln191_6_reg_2260_pp0_iter4_reg <= and_ln191_6_reg_2260_pp0_iter3_reg;
                icmp_ln212_reg_2572 <= icmp_ln212_fu_1098_p2;
                icmp_ln241_reg_2199 <= icmp_ln241_fu_236_p2;
                icmp_ln241_reg_2199_pp0_iter1_reg <= icmp_ln241_reg_2199;
                pool_window_0_V_15_reg_2705_pp0_iter3_reg <= pool_window_0_V_15_reg_2705;
                pool_window_0_V_16_reg_2776_pp0_iter3_reg <= pool_window_0_V_16_reg_2776;
                pool_window_0_V_17_reg_2847_pp0_iter3_reg <= pool_window_0_V_17_reg_2847;
                pool_window_0_V_reg_2634_pp0_iter3_reg <= pool_window_0_V_reg_2634;
                pool_window_1_V_15_reg_2711_pp0_iter3_reg <= pool_window_1_V_15_reg_2711;
                pool_window_1_V_16_reg_2782_pp0_iter3_reg <= pool_window_1_V_16_reg_2782;
                pool_window_1_V_17_reg_2853_pp0_iter3_reg <= pool_window_1_V_17_reg_2853;
                pool_window_1_V_reg_2640_pp0_iter3_reg <= pool_window_1_V_reg_2640;
                pool_window_2_V_15_reg_2717_pp0_iter3_reg <= pool_window_2_V_15_reg_2717;
                pool_window_2_V_16_reg_2788_pp0_iter3_reg <= pool_window_2_V_16_reg_2788;
                pool_window_2_V_17_reg_2859_pp0_iter3_reg <= pool_window_2_V_17_reg_2859;
                pool_window_2_V_reg_2646_pp0_iter3_reg <= pool_window_2_V_reg_2646;
                pool_window_3_V_15_reg_2723_pp0_iter3_reg <= pool_window_3_V_15_reg_2723;
                pool_window_3_V_16_reg_2794_pp0_iter3_reg <= pool_window_3_V_16_reg_2794;
                pool_window_3_V_17_reg_2865_pp0_iter3_reg <= pool_window_3_V_17_reg_2865;
                pool_window_3_V_reg_2652_pp0_iter3_reg <= pool_window_3_V_reg_2652;
                pool_window_4_V_15_reg_2729_pp0_iter3_reg <= pool_window_4_V_15_reg_2729;
                pool_window_4_V_16_reg_2800_pp0_iter3_reg <= pool_window_4_V_16_reg_2800;
                pool_window_4_V_17_reg_2871_pp0_iter3_reg <= pool_window_4_V_17_reg_2871;
                pool_window_4_V_reg_2658_pp0_iter3_reg <= pool_window_4_V_reg_2658;
                pool_window_5_V_15_reg_2735_pp0_iter3_reg <= pool_window_5_V_15_reg_2735;
                pool_window_5_V_16_reg_2806_pp0_iter3_reg <= pool_window_5_V_16_reg_2806;
                pool_window_5_V_17_reg_2877_pp0_iter3_reg <= pool_window_5_V_17_reg_2877;
                pool_window_5_V_reg_2664_pp0_iter3_reg <= pool_window_5_V_reg_2664;
                pool_window_6_V_15_reg_2741_pp0_iter3_reg <= pool_window_6_V_15_reg_2741;
                pool_window_6_V_16_reg_2812_pp0_iter3_reg <= pool_window_6_V_16_reg_2812;
                pool_window_6_V_17_reg_2883_pp0_iter3_reg <= pool_window_6_V_17_reg_2883;
                pool_window_6_V_reg_2670_pp0_iter3_reg <= pool_window_6_V_reg_2670;
                pool_window_7_V_15_reg_2747_pp0_iter3_reg <= pool_window_7_V_15_reg_2747;
                pool_window_7_V_16_reg_2818_pp0_iter3_reg <= pool_window_7_V_16_reg_2818;
                pool_window_7_V_17_reg_2889_pp0_iter3_reg <= pool_window_7_V_17_reg_2889;
                pool_window_7_V_reg_2676_pp0_iter3_reg <= pool_window_7_V_reg_2676;
                trunc_ln708_147_reg_2312_pp0_iter2_reg <= trunc_ln708_147_reg_2312;
                trunc_ln708_147_reg_2312_pp0_iter3_reg <= trunc_ln708_147_reg_2312_pp0_iter2_reg;
                trunc_ln708_156_reg_2389_pp0_iter2_reg <= trunc_ln708_156_reg_2389;
                trunc_ln708_156_reg_2389_pp0_iter3_reg <= trunc_ln708_156_reg_2389_pp0_iter2_reg;
                trunc_ln708_165_reg_2466_pp0_iter2_reg <= trunc_ln708_165_reg_2466;
                trunc_ln708_165_reg_2466_pp0_iter3_reg <= trunc_ln708_165_reg_2466_pp0_iter2_reg;
                trunc_ln708_174_reg_2543_pp0_iter2_reg <= trunc_ln708_174_reg_2543;
                trunc_ln708_174_reg_2543_pp0_iter3_reg <= trunc_ln708_174_reg_2543_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln191_6_fu_644_p2))) then
                icmp_ln1496_120_reg_2323 <= icmp_ln1496_120_fu_744_p2;
                icmp_ln1496_122_reg_2329 <= icmp_ln1496_122_fu_750_p2;
                icmp_ln1496_123_reg_2335 <= icmp_ln1496_123_fu_756_p2;
                icmp_ln1496_127_reg_2400 <= icmp_ln1496_127_fu_856_p2;
                icmp_ln1496_129_reg_2406 <= icmp_ln1496_129_fu_862_p2;
                icmp_ln1496_130_reg_2412 <= icmp_ln1496_130_fu_868_p2;
                icmp_ln1496_134_reg_2477 <= icmp_ln1496_134_fu_968_p2;
                icmp_ln1496_136_reg_2483 <= icmp_ln1496_136_fu_974_p2;
                icmp_ln1496_137_reg_2489 <= icmp_ln1496_137_fu_980_p2;
                icmp_ln1496_141_reg_2554 <= icmp_ln1496_141_fu_1080_p2;
                icmp_ln1496_143_reg_2560 <= icmp_ln1496_143_fu_1086_p2;
                icmp_ln1496_144_reg_2566 <= icmp_ln1496_144_fu_1092_p2;
                icmp_ln1496_1_reg_2394 <= icmp_ln1496_1_fu_850_p2;
                icmp_ln1496_2_reg_2471 <= icmp_ln1496_2_fu_962_p2;
                icmp_ln1496_3_reg_2548 <= icmp_ln1496_3_fu_1074_p2;
                icmp_ln1496_reg_2317 <= icmp_ln1496_fu_738_p2;
                trunc_ln708_141_reg_2276 <= line_buffer_Array_V_3_1_0_q0(19 downto 3);
                trunc_ln708_142_reg_2282 <= kernel_data_V_3_16(19 downto 3);
                trunc_ln708_143_reg_2288 <= kernel_data_V_3_20(19 downto 3);
                trunc_ln708_144_reg_2294 <= DataOut_V_68_reg_2232(19 downto 3);
                trunc_ln708_145_reg_2300 <= kernel_data_V_3_28(19 downto 3);
                trunc_ln708_146_reg_2306 <= kernel_data_V_3_32(19 downto 3);
                trunc_ln708_147_reg_2312 <= tmp_data_0_V_3_reg_2208(19 downto 3);
                trunc_ln708_148_reg_2341 <= kernel_data_V_3_5(19 downto 3);
                trunc_ln708_149_reg_2347 <= kernel_data_V_3_9(19 downto 3);
                trunc_ln708_150_reg_2353 <= line_buffer_Array_V_3_1_1_q0(19 downto 3);
                trunc_ln708_151_reg_2359 <= kernel_data_V_3_17(19 downto 3);
                trunc_ln708_152_reg_2365 <= kernel_data_V_3_21(19 downto 3);
                trunc_ln708_153_reg_2371 <= DataOut_V_70_reg_2239(19 downto 3);
                trunc_ln708_154_reg_2377 <= kernel_data_V_3_29(19 downto 3);
                trunc_ln708_155_reg_2383 <= kernel_data_V_3_33(19 downto 3);
                trunc_ln708_156_reg_2389 <= tmp_data_1_V_3_reg_2214(19 downto 3);
                trunc_ln708_157_reg_2418 <= kernel_data_V_3_6(19 downto 3);
                trunc_ln708_158_reg_2424 <= kernel_data_V_3_10(19 downto 3);
                trunc_ln708_159_reg_2430 <= line_buffer_Array_V_3_1_2_q0(19 downto 3);
                trunc_ln708_160_reg_2436 <= kernel_data_V_3_18(19 downto 3);
                trunc_ln708_161_reg_2442 <= kernel_data_V_3_22(19 downto 3);
                trunc_ln708_162_reg_2448 <= DataOut_V_72_reg_2246(19 downto 3);
                trunc_ln708_163_reg_2454 <= kernel_data_V_3_30(19 downto 3);
                trunc_ln708_164_reg_2460 <= kernel_data_V_3_34(19 downto 3);
                trunc_ln708_165_reg_2466 <= tmp_data_2_V_3_reg_2220(19 downto 3);
                trunc_ln708_166_reg_2495 <= kernel_data_V_3_7(19 downto 3);
                trunc_ln708_167_reg_2501 <= kernel_data_V_3_11(19 downto 3);
                trunc_ln708_168_reg_2507 <= line_buffer_Array_V_3_1_3_q0(19 downto 3);
                trunc_ln708_169_reg_2513 <= kernel_data_V_3_19(19 downto 3);
                trunc_ln708_170_reg_2519 <= kernel_data_V_3_23(19 downto 3);
                trunc_ln708_171_reg_2525 <= DataOut_V_74_reg_2253(19 downto 3);
                trunc_ln708_172_reg_2531 <= kernel_data_V_3_31(19 downto 3);
                trunc_ln708_173_reg_2537 <= kernel_data_V_3_35(19 downto 3);
                trunc_ln708_174_reg_2543 <= tmp_data_3_V_2_reg_2226(19 downto 3);
                trunc_ln708_s_reg_2270 <= kernel_data_V_3_8(19 downto 3);
                trunc_ln_reg_2264 <= kernel_data_V_3_4(19 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260))) then
                icmp_ln1496_124_reg_2596 <= icmp_ln1496_124_fu_1224_p2;
                icmp_ln1496_131_reg_2607 <= icmp_ln1496_131_fu_1274_p2;
                icmp_ln1496_138_reg_2618 <= icmp_ln1496_138_fu_1324_p2;
                icmp_ln1496_145_reg_2629 <= icmp_ln1496_145_fu_1374_p2;
                select_ln65_161_reg_2590 <= select_ln65_161_fu_1206_p3;
                select_ln65_171_reg_2601 <= select_ln65_171_fu_1256_p3;
                select_ln65_181_reg_2612 <= select_ln65_181_fu_1306_p3;
                select_ln65_191_reg_2623 <= select_ln65_191_fu_1356_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln212_fu_1098_p2 = ap_const_lv1_1))) then
                icmp_ln216_reg_2581 <= icmp_ln216_fu_1142_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then
                kernel_data_V_3_10 <= line_buffer_Array_V_3_1_2_q0;
                kernel_data_V_3_11 <= line_buffer_Array_V_3_1_3_q0;
                kernel_data_V_3_16 <= kernel_data_V_3_20;
                kernel_data_V_3_17 <= kernel_data_V_3_21;
                kernel_data_V_3_18 <= kernel_data_V_3_22;
                kernel_data_V_3_19 <= kernel_data_V_3_23;
                kernel_data_V_3_20 <= DataOut_V_68_reg_2232;
                kernel_data_V_3_21 <= DataOut_V_70_reg_2239;
                kernel_data_V_3_22 <= DataOut_V_72_reg_2246;
                kernel_data_V_3_23 <= DataOut_V_74_reg_2253;
                kernel_data_V_3_28 <= kernel_data_V_3_32;
                kernel_data_V_3_29 <= kernel_data_V_3_33;
                kernel_data_V_3_30 <= kernel_data_V_3_34;
                kernel_data_V_3_31 <= kernel_data_V_3_35;
                kernel_data_V_3_32 <= tmp_data_0_V_3_reg_2208;
                kernel_data_V_3_33 <= tmp_data_1_V_3_reg_2214;
                kernel_data_V_3_34 <= tmp_data_2_V_3_reg_2220;
                kernel_data_V_3_35 <= tmp_data_3_V_2_reg_2226;
                kernel_data_V_3_4 <= kernel_data_V_3_8;
                kernel_data_V_3_5 <= kernel_data_V_3_9;
                kernel_data_V_3_6 <= kernel_data_V_3_10;
                kernel_data_V_3_7 <= kernel_data_V_3_11;
                kernel_data_V_3_8 <= line_buffer_Array_V_3_1_0_q0;
                kernel_data_V_3_9 <= line_buffer_Array_V_3_1_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter2_reg))) then
                phi_ln65_45_reg_2943 <= phi_ln65_45_fu_1962_p18;
                phi_ln65_48_reg_2953 <= phi_ln65_48_fu_1987_p18;
                phi_ln65_51_reg_2963 <= phi_ln65_51_fu_2012_p18;
                phi_ln65_54_reg_2973 <= phi_ln65_54_fu_2037_p18;
                    zext_ln65_48_reg_2938(2 downto 0) <= zext_ln65_48_fu_1959_p1(2 downto 0);
                    zext_ln65_51_reg_2948(2 downto 0) <= zext_ln65_51_fu_1984_p1(2 downto 0);
                    zext_ln65_54_reg_2958(2 downto 0) <= zext_ln65_54_fu_2009_p1(2 downto 0);
                    zext_ln65_57_reg_2968(2 downto 0) <= zext_ln65_57_fu_2034_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln191_6_reg_2260))) then
                phi_ln65_46_reg_2761 <= phi_ln65_46_fu_1540_p18;
                phi_ln65_47_reg_2771 <= phi_ln65_47_fu_1603_p18;
                phi_ln65_49_reg_2832 <= phi_ln65_49_fu_1668_p18;
                phi_ln65_50_reg_2842 <= phi_ln65_50_fu_1731_p18;
                phi_ln65_52_reg_2903 <= phi_ln65_52_fu_1796_p18;
                phi_ln65_53_reg_2913 <= phi_ln65_53_fu_1859_p18;
                phi_ln65_s_reg_2700 <= phi_ln65_s_fu_1475_p18;
                phi_ln_reg_2690 <= phi_ln_fu_1412_p18;
                pool_window_0_V_15_reg_2705 <= pool_window_0_V_15_fu_1513_p1;
                pool_window_0_V_16_reg_2776 <= pool_window_0_V_16_fu_1641_p1;
                pool_window_0_V_17_reg_2847 <= pool_window_0_V_17_fu_1769_p1;
                pool_window_0_V_reg_2634 <= pool_window_0_V_fu_1385_p1;
                pool_window_1_V_15_reg_2711 <= pool_window_1_V_15_fu_1516_p1;
                pool_window_1_V_16_reg_2782 <= pool_window_1_V_16_fu_1644_p1;
                pool_window_1_V_17_reg_2853 <= pool_window_1_V_17_fu_1772_p1;
                pool_window_1_V_reg_2640 <= pool_window_1_V_fu_1388_p1;
                pool_window_2_V_15_reg_2717 <= pool_window_2_V_15_fu_1519_p1;
                pool_window_2_V_16_reg_2788 <= pool_window_2_V_16_fu_1647_p1;
                pool_window_2_V_17_reg_2859 <= pool_window_2_V_17_fu_1775_p1;
                pool_window_2_V_reg_2646 <= pool_window_2_V_fu_1391_p1;
                pool_window_3_V_15_reg_2723 <= pool_window_3_V_15_fu_1522_p1;
                pool_window_3_V_16_reg_2794 <= pool_window_3_V_16_fu_1650_p1;
                pool_window_3_V_17_reg_2865 <= pool_window_3_V_17_fu_1778_p1;
                pool_window_3_V_reg_2652 <= pool_window_3_V_fu_1394_p1;
                pool_window_4_V_15_reg_2729 <= pool_window_4_V_15_fu_1525_p1;
                pool_window_4_V_16_reg_2800 <= pool_window_4_V_16_fu_1653_p1;
                pool_window_4_V_17_reg_2871 <= pool_window_4_V_17_fu_1781_p1;
                pool_window_4_V_reg_2658 <= pool_window_4_V_fu_1397_p1;
                pool_window_5_V_15_reg_2735 <= pool_window_5_V_15_fu_1528_p1;
                pool_window_5_V_16_reg_2806 <= pool_window_5_V_16_fu_1656_p1;
                pool_window_5_V_17_reg_2877 <= pool_window_5_V_17_fu_1784_p1;
                pool_window_5_V_reg_2664 <= pool_window_5_V_fu_1400_p1;
                pool_window_6_V_15_reg_2741 <= pool_window_6_V_15_fu_1531_p1;
                pool_window_6_V_16_reg_2812 <= pool_window_6_V_16_fu_1659_p1;
                pool_window_6_V_17_reg_2883 <= pool_window_6_V_17_fu_1787_p1;
                pool_window_6_V_reg_2670 <= pool_window_6_V_fu_1403_p1;
                pool_window_7_V_15_reg_2747 <= pool_window_7_V_15_fu_1534_p1;
                pool_window_7_V_16_reg_2818 <= pool_window_7_V_16_fu_1662_p1;
                pool_window_7_V_17_reg_2889 <= pool_window_7_V_17_fu_1790_p1;
                pool_window_7_V_reg_2676 <= pool_window_7_V_fu_1406_p1;
                    select_ln65_166_reg_2695(1 downto 0) <= select_ln65_166_fu_1464_p3(1 downto 0);
                    select_ln65_176_reg_2766(1 downto 0) <= select_ln65_176_fu_1592_p3(1 downto 0);
                    select_ln65_186_reg_2837(1 downto 0) <= select_ln65_186_fu_1720_p3(1 downto 0);
                    select_ln65_196_reg_2908(1 downto 0) <= select_ln65_196_fu_1848_p3(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter3_reg))) then
                pool_window_8_V_15_reg_2988 <= pool_window_8_V_15_fu_2074_p1;
                pool_window_8_V_16_reg_2998 <= pool_window_8_V_16_fu_2089_p1;
                pool_window_8_V_17_reg_3008 <= pool_window_8_V_17_fu_2104_p1;
                pool_window_8_V_reg_2978 <= pool_window_8_V_fu_2059_p1;
                select_ln40_15_reg_2993 <= select_ln40_15_fu_2082_p3;
                select_ln40_16_reg_3003 <= select_ln40_16_fu_2097_p3;
                select_ln40_17_reg_3013 <= select_ln40_17_fu_2112_p3;
                select_ln40_reg_2983 <= select_ln40_fu_2067_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln212_reg_2572 = ap_const_lv1_1))) then
                sY_2 <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln212_fu_1098_p2 = ap_const_lv1_1) and (icmp_ln216_fu_1142_p2 = ap_const_lv1_0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then
                select_ln222_reg_2585 <= select_ln222_fu_1166_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln212_fu_1098_p2 = ap_const_lv1_0))) then
                select_ln227_reg_2576 <= select_ln227_fu_1122_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter2_reg))) then
                select_ln65_167_reg_2918 <= select_ln65_167_fu_1910_p3;
                select_ln65_177_reg_2923 <= select_ln65_177_fu_1924_p3;
                select_ln65_187_reg_2928 <= select_ln65_187_fu_1938_p3;
                select_ln65_197_reg_2933 <= select_ln65_197_fu_1952_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter3_reg))) then
                tmp_16_reg_3018 <= tmp_16_fu_2119_p11;
                tmp_17_reg_3023 <= tmp_17_fu_2133_p11;
                tmp_19_reg_3028 <= tmp_19_fu_2147_p11;
                tmp_20_reg_3033 <= tmp_20_fu_2161_p11;
            end if;
        end if;
    end process;
    select_ln65_166_reg_2695(2) <= '1';
    select_ln65_176_reg_2766(2) <= '1';
    select_ln65_186_reg_2837(2) <= '1';
    select_ln65_196_reg_2908(2) <= '1';
    zext_ln65_48_reg_2938(3) <= '0';
    zext_ln65_51_reg_2948(3) <= '0';
    zext_ln65_54_reg_2958(3) <= '0';
    zext_ln65_57_reg_2968(3) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, icmp_ln241_fu_236_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_fu_236_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_fu_236_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln220_fu_1148_p2 <= std_logic_vector(unsigned(pY_2) + unsigned(ap_const_lv32_1));
    add_ln222_fu_1160_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_2_load) + unsigned(ap_const_lv32_1));
    add_ln225_fu_1104_p2 <= std_logic_vector(unsigned(pX_2) + unsigned(ap_const_lv32_1));
    add_ln227_fu_1116_p2 <= std_logic_vector(unsigned(sX_2) + unsigned(ap_const_lv32_1));
    add_ln241_fu_242_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_218_p4) + unsigned(ap_const_lv14_1));
    and_ln191_5_fu_638_p2 <= (icmp_ln191_9_fu_626_p2 and icmp_ln191_8_fu_606_p2);
    and_ln191_6_fu_644_p2 <= (and_ln191_fu_632_p2 and and_ln191_5_fu_638_p2);
    and_ln191_fu_632_p2 <= (icmp_ln191_fu_576_p2 and icmp_ln191_7_fu_586_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg, io_acc_block_signal_op27, io_acc_block_signal_op318)
    begin
                ap_block_pp0_stage1_01001 <= (((io_acc_block_signal_op318 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg)) or ((io_acc_block_signal_op27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_reg_2199 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg, io_acc_block_signal_op27, io_acc_block_signal_op318)
    begin
                ap_block_pp0_stage1_11001 <= (((io_acc_block_signal_op318 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg)) or ((io_acc_block_signal_op27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_reg_2199 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg, io_acc_block_signal_op27, io_acc_block_signal_op318)
    begin
                ap_block_pp0_stage1_subdone <= (((io_acc_block_signal_op318 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg)) or ((io_acc_block_signal_op27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln241_reg_2199 = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage1_iter4_assign_proc : process(and_ln191_6_reg_2260_pp0_iter4_reg, io_acc_block_signal_op318)
    begin
                ap_block_state11_pp0_stage1_iter4 <= ((io_acc_block_signal_op318 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(icmp_ln241_reg_2199, io_acc_block_signal_op27)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((io_acc_block_signal_op27 = ap_const_logic_0) and (icmp_ln241_reg_2199 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1828_assign_proc : process(icmp_ln241_reg_2199, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln212_fu_1098_p2, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1828 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln212_fu_1098_p2 = ap_const_lv1_1) and (icmp_ln241_reg_2199 = ap_const_lv1_0));
    end process;


    ap_condition_1833_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln212_reg_2572)
    begin
                ap_condition_1833 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln212_reg_2572 = ap_const_lv1_0));
    end process;


    ap_condition_401_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln212_fu_1098_p2)
    begin
                ap_condition_401 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln212_fu_1098_p2 = ap_const_lv1_1));
    end process;


    ap_condition_662_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_662 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_675_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_675 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_680_assign_proc : process(icmp_ln241_reg_2199_pp0_iter1_reg, icmp_ln212_reg_2572, icmp_ln216_reg_2581)
    begin
                ap_condition_680 <= ((icmp_ln212_reg_2572 = ap_const_lv1_1) and (icmp_ln216_reg_2581 = ap_const_lv1_0) and (icmp_ln241_reg_2199_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln241_fu_236_p2)
    begin
        if ((icmp_ln241_fu_236_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_218_p4_assign_proc : process(icmp_ln241_reg_2199, indvar_flatten_reg_214, ap_CS_fsm_pp0_stage0, add_ln241_reg_2203, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_218_p4 <= add_ln241_reg_2203;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_218_p4 <= indvar_flatten_reg_214;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_i_i_reg_225 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_sig_allocacmp_sY_2_load_assign_proc : process(sY_2, ap_CS_fsm_pp0_stage0, icmp_ln212_reg_2572, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln212_reg_2572 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_sY_2_load <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225;
        else 
            ap_sig_allocacmp_sY_2_load <= sY_2;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln241_reg_2199)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln241_reg_2199)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln241_reg_2199)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln241_reg_2199)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1496_120_fu_744_p2 <= "1" when (signed(trunc_ln708_141_fu_670_p4) < signed(trunc_ln708_142_fu_680_p4)) else "0";
    icmp_ln1496_121_fu_1200_p2 <= "1" when (signed(select_ln65_fu_1183_p3) < signed(select_ln65_160_fu_1195_p3)) else "0";
    icmp_ln1496_122_fu_750_p2 <= "1" when (signed(trunc_ln708_143_fu_690_p4) < signed(trunc_ln708_144_fu_700_p4)) else "0";
    icmp_ln1496_123_fu_756_p2 <= "1" when (signed(trunc_ln708_145_fu_709_p4) < signed(trunc_ln708_146_fu_719_p4)) else "0";
    icmp_ln1496_124_fu_1224_p2 <= "1" when (signed(select_ln65_163_fu_1214_p3) < signed(select_ln65_165_fu_1219_p3)) else "0";
    icmp_ln1496_125_fu_1906_p2 <= "1" when (signed(phi_ln_reg_2690) < signed(phi_ln65_s_reg_2700)) else "0";
    icmp_ln1496_126_fu_2062_p2 <= "1" when (signed(phi_ln65_45_reg_2943) < signed(pool_window_8_V_fu_2059_p1)) else "0";
    icmp_ln1496_127_fu_856_p2 <= "1" when (signed(trunc_ln708_150_fu_782_p4) < signed(trunc_ln708_151_fu_792_p4)) else "0";
    icmp_ln1496_128_fu_1250_p2 <= "1" when (signed(select_ln65_168_fu_1233_p3) < signed(select_ln65_170_fu_1245_p3)) else "0";
    icmp_ln1496_129_fu_862_p2 <= "1" when (signed(trunc_ln708_152_fu_802_p4) < signed(trunc_ln708_153_fu_812_p4)) else "0";
    icmp_ln1496_130_fu_868_p2 <= "1" when (signed(trunc_ln708_154_fu_821_p4) < signed(trunc_ln708_155_fu_831_p4)) else "0";
    icmp_ln1496_131_fu_1274_p2 <= "1" when (signed(select_ln65_173_fu_1264_p3) < signed(select_ln65_175_fu_1269_p3)) else "0";
    icmp_ln1496_132_fu_1920_p2 <= "1" when (signed(phi_ln65_46_reg_2761) < signed(phi_ln65_47_reg_2771)) else "0";
    icmp_ln1496_133_fu_2077_p2 <= "1" when (signed(phi_ln65_48_reg_2953) < signed(pool_window_8_V_15_fu_2074_p1)) else "0";
    icmp_ln1496_134_fu_968_p2 <= "1" when (signed(trunc_ln708_159_fu_894_p4) < signed(trunc_ln708_160_fu_904_p4)) else "0";
    icmp_ln1496_135_fu_1300_p2 <= "1" when (signed(select_ln65_178_fu_1283_p3) < signed(select_ln65_180_fu_1295_p3)) else "0";
    icmp_ln1496_136_fu_974_p2 <= "1" when (signed(trunc_ln708_161_fu_914_p4) < signed(trunc_ln708_162_fu_924_p4)) else "0";
    icmp_ln1496_137_fu_980_p2 <= "1" when (signed(trunc_ln708_163_fu_933_p4) < signed(trunc_ln708_164_fu_943_p4)) else "0";
    icmp_ln1496_138_fu_1324_p2 <= "1" when (signed(select_ln65_183_fu_1314_p3) < signed(select_ln65_185_fu_1319_p3)) else "0";
    icmp_ln1496_139_fu_1934_p2 <= "1" when (signed(phi_ln65_49_reg_2832) < signed(phi_ln65_50_reg_2842)) else "0";
    icmp_ln1496_140_fu_2092_p2 <= "1" when (signed(phi_ln65_51_reg_2963) < signed(pool_window_8_V_16_fu_2089_p1)) else "0";
    icmp_ln1496_141_fu_1080_p2 <= "1" when (signed(trunc_ln708_168_fu_1006_p4) < signed(trunc_ln708_169_fu_1016_p4)) else "0";
    icmp_ln1496_142_fu_1350_p2 <= "1" when (signed(select_ln65_188_fu_1333_p3) < signed(select_ln65_190_fu_1345_p3)) else "0";
    icmp_ln1496_143_fu_1086_p2 <= "1" when (signed(trunc_ln708_170_fu_1026_p4) < signed(trunc_ln708_171_fu_1036_p4)) else "0";
    icmp_ln1496_144_fu_1092_p2 <= "1" when (signed(trunc_ln708_172_fu_1045_p4) < signed(trunc_ln708_173_fu_1055_p4)) else "0";
    icmp_ln1496_145_fu_1374_p2 <= "1" when (signed(select_ln65_193_fu_1364_p3) < signed(select_ln65_195_fu_1369_p3)) else "0";
    icmp_ln1496_146_fu_1948_p2 <= "1" when (signed(phi_ln65_52_reg_2903) < signed(phi_ln65_53_reg_2913)) else "0";
    icmp_ln1496_147_fu_2107_p2 <= "1" when (signed(phi_ln65_54_reg_2973) < signed(pool_window_8_V_17_fu_2104_p1)) else "0";
    icmp_ln1496_1_fu_850_p2 <= "1" when (signed(trunc_ln708_148_fu_762_p4) < signed(trunc_ln708_149_fu_772_p4)) else "0";
    icmp_ln1496_2_fu_962_p2 <= "1" when (signed(trunc_ln708_157_fu_874_p4) < signed(trunc_ln708_158_fu_884_p4)) else "0";
    icmp_ln1496_3_fu_1074_p2 <= "1" when (signed(trunc_ln708_166_fu_986_p4) < signed(trunc_ln708_167_fu_996_p4)) else "0";
    icmp_ln1496_fu_738_p2 <= "1" when (signed(trunc_ln_fu_650_p4) < signed(trunc_ln708_s_fu_660_p4)) else "0";
    icmp_ln191_7_fu_586_p2 <= "1" when (ap_sig_allocacmp_sY_2_load = ap_const_lv32_2) else "0";
    icmp_ln191_8_fu_606_p2 <= "1" when (signed(tmp_fu_596_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln191_9_fu_626_p2 <= "1" when (signed(tmp_18_fu_616_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln191_fu_576_p2 <= "1" when (sX_2 = ap_const_lv32_2) else "0";
    icmp_ln212_fu_1098_p2 <= "1" when (pX_2 = ap_const_lv32_7D) else "0";
    icmp_ln216_fu_1142_p2 <= "1" when (pY_2 = ap_const_lv32_7D) else "0";
    icmp_ln241_fu_236_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_218_p4 = ap_const_lv14_3E04) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op27 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    io_acc_block_signal_op318 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);

    line_buffer_Array_V_3_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_0_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_0_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_0_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_0_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_0_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_0_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_0_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_0_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_0_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_0_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln241_reg_2199, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_0_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_1_0_ce0_assign_proc : process(icmp_ln241_reg_2199, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_1_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_1_0_we0_assign_proc : process(icmp_ln241_reg_2199, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_1_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_1_1_ce0_assign_proc : process(icmp_ln241_reg_2199, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_1_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_1_1_we0_assign_proc : process(icmp_ln241_reg_2199, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_1_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_1_2_ce0_assign_proc : process(icmp_ln241_reg_2199, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_1_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_1_2_we0_assign_proc : process(icmp_ln241_reg_2199, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_1_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_1_3_ce0_assign_proc : process(icmp_ln241_reg_2199, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_1_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_3_1_3_we0_assign_proc : process(icmp_ln241_reg_2199, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln241_reg_2199 = ap_const_lv1_0))) then 
            line_buffer_Array_V_3_1_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_3_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_ln65_45_fu_1962_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_167_reg_2918),4));
        phi_ln65_46_fu_1540_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_148_reg_2341),20));

    phi_ln65_46_fu_1540_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_171_reg_2601),4));
        phi_ln65_46_fu_1540_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_149_reg_2347),20));

        phi_ln65_46_fu_1540_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_150_reg_2353),20));

    phi_ln65_47_fu_1603_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_176_fu_1592_p3),4));
        phi_ln65_47_fu_1603_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_152_reg_2365),20));

        phi_ln65_47_fu_1603_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_153_reg_2371),20));

        phi_ln65_47_fu_1603_p7 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_154_reg_2377),20));

    phi_ln65_48_fu_1987_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_177_reg_2923),4));
        phi_ln65_49_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_157_reg_2418),20));

    phi_ln65_49_fu_1668_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_181_reg_2612),4));
        phi_ln65_49_fu_1668_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_158_reg_2424),20));

        phi_ln65_49_fu_1668_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_159_reg_2430),20));

    phi_ln65_50_fu_1731_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_186_fu_1720_p3),4));
        phi_ln65_50_fu_1731_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_161_reg_2442),20));

        phi_ln65_50_fu_1731_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_162_reg_2448),20));

        phi_ln65_50_fu_1731_p7 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_163_reg_2454),20));

    phi_ln65_51_fu_2012_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_187_reg_2928),4));
        phi_ln65_52_fu_1796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_166_reg_2495),20));

    phi_ln65_52_fu_1796_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_191_reg_2623),4));
        phi_ln65_52_fu_1796_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_167_reg_2501),20));

        phi_ln65_52_fu_1796_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_168_reg_2507),20));

    phi_ln65_53_fu_1859_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_196_fu_1848_p3),4));
        phi_ln65_53_fu_1859_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_170_reg_2519),20));

        phi_ln65_53_fu_1859_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_171_reg_2525),20));

        phi_ln65_53_fu_1859_p7 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_172_reg_2531),20));

    phi_ln65_54_fu_2037_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_197_reg_2933),4));
    phi_ln65_s_fu_1475_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_166_fu_1464_p3),4));
        phi_ln65_s_fu_1475_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_143_reg_2288),20));

        phi_ln65_s_fu_1475_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_144_reg_2294),20));

        phi_ln65_s_fu_1475_p7 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_145_reg_2300),20));

        phi_ln_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_2264),20));

    phi_ln_fu_1412_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_161_reg_2590),4));
        phi_ln_fu_1412_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_s_reg_2270),20));

        phi_ln_fu_1412_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_141_reg_2276),20));

        pool_window_0_V_15_fu_1513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_148_reg_2341),20));

        pool_window_0_V_16_fu_1641_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_157_reg_2418),20));

        pool_window_0_V_17_fu_1769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_166_reg_2495),20));

        pool_window_0_V_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_2264),20));

        pool_window_1_V_15_fu_1516_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_149_reg_2347),20));

        pool_window_1_V_16_fu_1644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_158_reg_2424),20));

        pool_window_1_V_17_fu_1772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_167_reg_2501),20));

        pool_window_1_V_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_s_reg_2270),20));

        pool_window_2_V_15_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_150_reg_2353),20));

        pool_window_2_V_16_fu_1647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_159_reg_2430),20));

        pool_window_2_V_17_fu_1775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_168_reg_2507),20));

        pool_window_2_V_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_141_reg_2276),20));

        pool_window_3_V_15_fu_1522_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_151_reg_2359),20));

        pool_window_3_V_16_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_160_reg_2436),20));

        pool_window_3_V_17_fu_1778_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_169_reg_2513),20));

        pool_window_3_V_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_142_reg_2282),20));

        pool_window_4_V_15_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_152_reg_2365),20));

        pool_window_4_V_16_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_161_reg_2442),20));

        pool_window_4_V_17_fu_1781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_170_reg_2519),20));

        pool_window_4_V_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_143_reg_2288),20));

        pool_window_5_V_15_fu_1528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_153_reg_2371),20));

        pool_window_5_V_16_fu_1656_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_162_reg_2448),20));

        pool_window_5_V_17_fu_1784_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_171_reg_2525),20));

        pool_window_5_V_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_144_reg_2294),20));

        pool_window_6_V_15_fu_1531_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_154_reg_2377),20));

        pool_window_6_V_16_fu_1659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_163_reg_2454),20));

        pool_window_6_V_17_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_172_reg_2531),20));

        pool_window_6_V_fu_1403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_145_reg_2300),20));

        pool_window_7_V_15_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_155_reg_2383),20));

        pool_window_7_V_16_fu_1662_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_164_reg_2460),20));

        pool_window_7_V_17_fu_1790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_173_reg_2537),20));

        pool_window_7_V_fu_1406_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_146_reg_2306),20));

        pool_window_8_V_15_fu_2074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_156_reg_2389_pp0_iter3_reg),20));

        pool_window_8_V_16_fu_2089_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_165_reg_2466_pp0_iter3_reg),20));

        pool_window_8_V_17_fu_2104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_174_reg_2543_pp0_iter3_reg),20));

        pool_window_8_V_fu_2059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_147_reg_2312_pp0_iter3_reg),20));


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= std_logic_vector(shift_left(unsigned(tmp_16_reg_3018),to_integer(unsigned('0' & ap_const_lv20_3(20-1 downto 0)))));

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= std_logic_vector(shift_left(unsigned(tmp_17_reg_3023),to_integer(unsigned('0' & ap_const_lv20_3(20-1 downto 0)))));

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= std_logic_vector(shift_left(unsigned(tmp_19_reg_3028),to_integer(unsigned('0' & ap_const_lv20_3(20-1 downto 0)))));

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= std_logic_vector(shift_left(unsigned(tmp_20_reg_3033),to_integer(unsigned('0' & ap_const_lv20_3(20-1 downto 0)))));

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, and_ln191_6_reg_2260_pp0_iter4_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln191_6_reg_2260_pp0_iter4_reg))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln222_fu_1166_p3 <= 
        ap_const_lv32_0 when (icmp_ln191_7_fu_586_p2(0) = '1') else 
        add_ln222_fu_1160_p2;
    select_ln227_fu_1122_p3 <= 
        ap_const_lv32_0 when (icmp_ln191_fu_576_p2(0) = '1') else 
        add_ln227_fu_1116_p2;
    select_ln40_15_fu_2082_p3 <= 
        ap_const_lv4_8 when (icmp_ln1496_133_fu_2077_p2(0) = '1') else 
        zext_ln65_51_reg_2948;
    select_ln40_16_fu_2097_p3 <= 
        ap_const_lv4_8 when (icmp_ln1496_140_fu_2092_p2(0) = '1') else 
        zext_ln65_54_reg_2958;
    select_ln40_17_fu_2112_p3 <= 
        ap_const_lv4_8 when (icmp_ln1496_147_fu_2107_p2(0) = '1') else 
        zext_ln65_57_reg_2968;
    select_ln40_fu_2067_p3 <= 
        ap_const_lv4_8 when (icmp_ln1496_126_fu_2062_p2(0) = '1') else 
        zext_ln65_48_reg_2938;
    select_ln65_159_fu_1188_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_120_reg_2323(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_160_fu_1195_p3 <= 
        trunc_ln708_142_reg_2282 when (icmp_ln1496_120_reg_2323(0) = '1') else 
        trunc_ln708_141_reg_2276;
    select_ln65_161_fu_1206_p3 <= 
        select_ln65_159_fu_1188_p3 when (icmp_ln1496_121_fu_1200_p2(0) = '1') else 
        zext_ln65_fu_1180_p1;
    select_ln65_162_fu_1450_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_122_reg_2329(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_163_fu_1214_p3 <= 
        trunc_ln708_144_reg_2294 when (icmp_ln1496_122_reg_2329(0) = '1') else 
        trunc_ln708_143_reg_2288;
    select_ln65_164_fu_1457_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_123_reg_2335(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_165_fu_1219_p3 <= 
        trunc_ln708_146_reg_2306 when (icmp_ln1496_123_reg_2335(0) = '1') else 
        trunc_ln708_145_reg_2300;
    select_ln65_166_fu_1464_p3 <= 
        select_ln65_164_fu_1457_p3 when (icmp_ln1496_124_reg_2596(0) = '1') else 
        select_ln65_162_fu_1450_p3;
    select_ln65_167_fu_1910_p3 <= 
        select_ln65_166_reg_2695 when (icmp_ln1496_125_fu_1906_p2(0) = '1') else 
        zext_ln65_47_fu_1903_p1;
    select_ln65_168_fu_1233_p3 <= 
        trunc_ln708_149_reg_2347 when (icmp_ln1496_1_reg_2394(0) = '1') else 
        trunc_ln708_148_reg_2341;
    select_ln65_169_fu_1238_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_127_reg_2400(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_170_fu_1245_p3 <= 
        trunc_ln708_151_reg_2359 when (icmp_ln1496_127_reg_2400(0) = '1') else 
        trunc_ln708_150_reg_2353;
    select_ln65_171_fu_1256_p3 <= 
        select_ln65_169_fu_1238_p3 when (icmp_ln1496_128_fu_1250_p2(0) = '1') else 
        zext_ln65_49_fu_1230_p1;
    select_ln65_172_fu_1578_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_129_reg_2406(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_173_fu_1264_p3 <= 
        trunc_ln708_153_reg_2371 when (icmp_ln1496_129_reg_2406(0) = '1') else 
        trunc_ln708_152_reg_2365;
    select_ln65_174_fu_1585_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_130_reg_2412(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_175_fu_1269_p3 <= 
        trunc_ln708_155_reg_2383 when (icmp_ln1496_130_reg_2412(0) = '1') else 
        trunc_ln708_154_reg_2377;
    select_ln65_176_fu_1592_p3 <= 
        select_ln65_174_fu_1585_p3 when (icmp_ln1496_131_reg_2607(0) = '1') else 
        select_ln65_172_fu_1578_p3;
    select_ln65_177_fu_1924_p3 <= 
        select_ln65_176_reg_2766 when (icmp_ln1496_132_fu_1920_p2(0) = '1') else 
        zext_ln65_50_fu_1917_p1;
    select_ln65_178_fu_1283_p3 <= 
        trunc_ln708_158_reg_2424 when (icmp_ln1496_2_reg_2471(0) = '1') else 
        trunc_ln708_157_reg_2418;
    select_ln65_179_fu_1288_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_134_reg_2477(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_180_fu_1295_p3 <= 
        trunc_ln708_160_reg_2436 when (icmp_ln1496_134_reg_2477(0) = '1') else 
        trunc_ln708_159_reg_2430;
    select_ln65_181_fu_1306_p3 <= 
        select_ln65_179_fu_1288_p3 when (icmp_ln1496_135_fu_1300_p2(0) = '1') else 
        zext_ln65_52_fu_1280_p1;
    select_ln65_182_fu_1706_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_136_reg_2483(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_183_fu_1314_p3 <= 
        trunc_ln708_162_reg_2448 when (icmp_ln1496_136_reg_2483(0) = '1') else 
        trunc_ln708_161_reg_2442;
    select_ln65_184_fu_1713_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_137_reg_2489(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_185_fu_1319_p3 <= 
        trunc_ln708_164_reg_2460 when (icmp_ln1496_137_reg_2489(0) = '1') else 
        trunc_ln708_163_reg_2454;
    select_ln65_186_fu_1720_p3 <= 
        select_ln65_184_fu_1713_p3 when (icmp_ln1496_138_reg_2618(0) = '1') else 
        select_ln65_182_fu_1706_p3;
    select_ln65_187_fu_1938_p3 <= 
        select_ln65_186_reg_2837 when (icmp_ln1496_139_fu_1934_p2(0) = '1') else 
        zext_ln65_53_fu_1931_p1;
    select_ln65_188_fu_1333_p3 <= 
        trunc_ln708_167_reg_2501 when (icmp_ln1496_3_reg_2548(0) = '1') else 
        trunc_ln708_166_reg_2495;
    select_ln65_189_fu_1338_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_141_reg_2554(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_190_fu_1345_p3 <= 
        trunc_ln708_169_reg_2513 when (icmp_ln1496_141_reg_2554(0) = '1') else 
        trunc_ln708_168_reg_2507;
    select_ln65_191_fu_1356_p3 <= 
        select_ln65_189_fu_1338_p3 when (icmp_ln1496_142_fu_1350_p2(0) = '1') else 
        zext_ln65_55_fu_1330_p1;
    select_ln65_192_fu_1834_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_143_reg_2560(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_193_fu_1364_p3 <= 
        trunc_ln708_171_reg_2525 when (icmp_ln1496_143_reg_2560(0) = '1') else 
        trunc_ln708_170_reg_2519;
    select_ln65_194_fu_1841_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_144_reg_2566(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_195_fu_1369_p3 <= 
        trunc_ln708_173_reg_2537 when (icmp_ln1496_144_reg_2566(0) = '1') else 
        trunc_ln708_172_reg_2531;
    select_ln65_196_fu_1848_p3 <= 
        select_ln65_194_fu_1841_p3 when (icmp_ln1496_145_reg_2629(0) = '1') else 
        select_ln65_192_fu_1834_p3;
    select_ln65_197_fu_1952_p3 <= 
        select_ln65_196_reg_2908 when (icmp_ln1496_146_fu_1948_p2(0) = '1') else 
        zext_ln65_56_fu_1945_p1;
    select_ln65_fu_1183_p3 <= 
        trunc_ln708_s_reg_2270 when (icmp_ln1496_reg_2317(0) = '1') else 
        trunc_ln_reg_2264;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_18_fu_616_p4 <= pX_2(31 downto 1);
    tmp_fu_596_p4 <= pY_2(31 downto 1);
    trunc_ln708_141_fu_670_p4 <= line_buffer_Array_V_3_1_0_q0(19 downto 3);
    trunc_ln708_142_fu_680_p4 <= kernel_data_V_3_16(19 downto 3);
    trunc_ln708_143_fu_690_p4 <= kernel_data_V_3_20(19 downto 3);
    trunc_ln708_144_fu_700_p4 <= DataOut_V_68_reg_2232(19 downto 3);
    trunc_ln708_145_fu_709_p4 <= kernel_data_V_3_28(19 downto 3);
    trunc_ln708_146_fu_719_p4 <= kernel_data_V_3_32(19 downto 3);
    trunc_ln708_148_fu_762_p4 <= kernel_data_V_3_5(19 downto 3);
    trunc_ln708_149_fu_772_p4 <= kernel_data_V_3_9(19 downto 3);
    trunc_ln708_150_fu_782_p4 <= line_buffer_Array_V_3_1_1_q0(19 downto 3);
    trunc_ln708_151_fu_792_p4 <= kernel_data_V_3_17(19 downto 3);
    trunc_ln708_152_fu_802_p4 <= kernel_data_V_3_21(19 downto 3);
    trunc_ln708_153_fu_812_p4 <= DataOut_V_70_reg_2239(19 downto 3);
    trunc_ln708_154_fu_821_p4 <= kernel_data_V_3_29(19 downto 3);
    trunc_ln708_155_fu_831_p4 <= kernel_data_V_3_33(19 downto 3);
    trunc_ln708_157_fu_874_p4 <= kernel_data_V_3_6(19 downto 3);
    trunc_ln708_158_fu_884_p4 <= kernel_data_V_3_10(19 downto 3);
    trunc_ln708_159_fu_894_p4 <= line_buffer_Array_V_3_1_2_q0(19 downto 3);
    trunc_ln708_160_fu_904_p4 <= kernel_data_V_3_18(19 downto 3);
    trunc_ln708_161_fu_914_p4 <= kernel_data_V_3_22(19 downto 3);
    trunc_ln708_162_fu_924_p4 <= DataOut_V_72_reg_2246(19 downto 3);
    trunc_ln708_163_fu_933_p4 <= kernel_data_V_3_30(19 downto 3);
    trunc_ln708_164_fu_943_p4 <= kernel_data_V_3_34(19 downto 3);
    trunc_ln708_166_fu_986_p4 <= kernel_data_V_3_7(19 downto 3);
    trunc_ln708_167_fu_996_p4 <= kernel_data_V_3_11(19 downto 3);
    trunc_ln708_168_fu_1006_p4 <= line_buffer_Array_V_3_1_3_q0(19 downto 3);
    trunc_ln708_169_fu_1016_p4 <= kernel_data_V_3_19(19 downto 3);
    trunc_ln708_170_fu_1026_p4 <= kernel_data_V_3_23(19 downto 3);
    trunc_ln708_171_fu_1036_p4 <= DataOut_V_74_reg_2253(19 downto 3);
    trunc_ln708_172_fu_1045_p4 <= kernel_data_V_3_31(19 downto 3);
    trunc_ln708_173_fu_1055_p4 <= kernel_data_V_3_35(19 downto 3);
    trunc_ln708_s_fu_660_p4 <= kernel_data_V_3_8(19 downto 3);
    trunc_ln_fu_650_p4 <= kernel_data_V_3_4(19 downto 3);
    zext_ln65_47_fu_1903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_161_reg_2590),3));
    zext_ln65_48_fu_1959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_167_reg_2918),4));
    zext_ln65_49_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_1_reg_2394),2));
    zext_ln65_50_fu_1917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_171_reg_2601),3));
    zext_ln65_51_fu_1984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_177_reg_2923),4));
    zext_ln65_52_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_2_reg_2471),2));
    zext_ln65_53_fu_1931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_181_reg_2612),3));
    zext_ln65_54_fu_2009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_187_reg_2928),4));
    zext_ln65_55_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_3_reg_2548),2));
    zext_ln65_56_fu_1945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_191_reg_2623),3));
    zext_ln65_57_fu_2034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_197_reg_2933),4));
    zext_ln65_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_reg_2317),2));
end behav;
