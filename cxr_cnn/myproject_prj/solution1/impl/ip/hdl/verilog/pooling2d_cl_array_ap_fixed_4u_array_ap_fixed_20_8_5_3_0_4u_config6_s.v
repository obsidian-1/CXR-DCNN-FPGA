// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state12 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [19:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [19:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [19:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [19:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
output  [19:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [19:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [19:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [19:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX_2;
reg   [31:0] sX_2;
reg   [31:0] pY_2;
reg   [31:0] sY_2;
reg   [19:0] kernel_data_V_3_4;
reg   [19:0] kernel_data_V_3_5;
reg   [19:0] kernel_data_V_3_6;
reg   [19:0] kernel_data_V_3_7;
reg   [19:0] kernel_data_V_3_16;
reg   [19:0] kernel_data_V_3_17;
reg   [19:0] kernel_data_V_3_18;
reg   [19:0] kernel_data_V_3_19;
reg   [19:0] kernel_data_V_3_28;
reg   [19:0] kernel_data_V_3_29;
reg   [19:0] kernel_data_V_3_30;
reg   [19:0] kernel_data_V_3_31;
reg   [19:0] kernel_data_V_3_8;
reg   [19:0] kernel_data_V_3_9;
reg   [19:0] kernel_data_V_3_10;
reg   [19:0] kernel_data_V_3_11;
reg   [19:0] kernel_data_V_3_20;
reg   [19:0] kernel_data_V_3_21;
reg   [19:0] kernel_data_V_3_22;
reg   [19:0] kernel_data_V_3_23;
reg   [19:0] kernel_data_V_3_32;
reg   [19:0] kernel_data_V_3_33;
reg   [19:0] kernel_data_V_3_34;
reg   [19:0] kernel_data_V_3_35;
reg    line_buffer_Array_V_3_0_0_ce0;
reg    line_buffer_Array_V_3_0_0_we0;
wire   [19:0] line_buffer_Array_V_3_0_0_q0;
reg    line_buffer_Array_V_3_1_0_ce0;
reg    line_buffer_Array_V_3_1_0_we0;
wire   [19:0] line_buffer_Array_V_3_1_0_q0;
reg    line_buffer_Array_V_3_0_1_ce0;
reg    line_buffer_Array_V_3_0_1_we0;
wire   [19:0] line_buffer_Array_V_3_0_1_q0;
reg    line_buffer_Array_V_3_1_1_ce0;
reg    line_buffer_Array_V_3_1_1_we0;
wire   [19:0] line_buffer_Array_V_3_1_1_q0;
reg    line_buffer_Array_V_3_0_2_ce0;
reg    line_buffer_Array_V_3_0_2_we0;
wire   [19:0] line_buffer_Array_V_3_0_2_q0;
reg    line_buffer_Array_V_3_1_2_ce0;
reg    line_buffer_Array_V_3_1_2_we0;
wire   [19:0] line_buffer_Array_V_3_1_2_q0;
reg    line_buffer_Array_V_3_0_3_ce0;
reg    line_buffer_Array_V_3_0_3_we0;
wire   [19:0] line_buffer_Array_V_3_0_3_q0;
reg    line_buffer_Array_V_3_1_3_ce0;
reg    line_buffer_Array_V_3_1_3_we0;
wire   [19:0] line_buffer_Array_V_3_1_3_q0;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln241_reg_2199;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] and_ln191_6_reg_2260;
reg   [0:0] and_ln191_6_reg_2260_pp0_iter4_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg   [13:0] indvar_flatten_reg_214;
wire   [0:0] icmp_ln241_fu_236_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln241_reg_2199_pp0_iter1_reg;
wire   [13:0] add_ln241_fu_242_p2;
reg   [13:0] add_ln241_reg_2203;
reg   [19:0] tmp_data_0_V_3_reg_2208;
wire    io_acc_block_signal_op27;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
wire    ap_block_state9_pp0_stage1_iter3;
wire    io_acc_block_signal_op318;
reg    ap_block_state11_pp0_stage1_iter4;
reg    ap_block_pp0_stage1_11001;
reg   [19:0] tmp_data_1_V_3_reg_2214;
reg   [19:0] tmp_data_2_V_3_reg_2220;
reg   [19:0] tmp_data_3_V_2_reg_2226;
reg   [19:0] DataOut_V_68_reg_2232;
reg   [19:0] DataOut_V_70_reg_2239;
reg   [19:0] DataOut_V_72_reg_2246;
reg   [19:0] DataOut_V_74_reg_2253;
wire   [0:0] and_ln191_6_fu_644_p2;
reg   [0:0] and_ln191_6_reg_2260_pp0_iter2_reg;
reg   [0:0] and_ln191_6_reg_2260_pp0_iter3_reg;
wire  signed [16:0] trunc_ln_fu_650_p4;
reg  signed [16:0] trunc_ln_reg_2264;
wire  signed [16:0] trunc_ln708_s_fu_660_p4;
reg  signed [16:0] trunc_ln708_s_reg_2270;
wire  signed [16:0] trunc_ln708_141_fu_670_p4;
reg  signed [16:0] trunc_ln708_141_reg_2276;
wire  signed [16:0] trunc_ln708_142_fu_680_p4;
reg  signed [16:0] trunc_ln708_142_reg_2282;
wire  signed [16:0] trunc_ln708_143_fu_690_p4;
reg  signed [16:0] trunc_ln708_143_reg_2288;
wire  signed [16:0] trunc_ln708_144_fu_700_p4;
reg  signed [16:0] trunc_ln708_144_reg_2294;
wire  signed [16:0] trunc_ln708_145_fu_709_p4;
reg  signed [16:0] trunc_ln708_145_reg_2300;
wire  signed [16:0] trunc_ln708_146_fu_719_p4;
reg  signed [16:0] trunc_ln708_146_reg_2306;
reg   [16:0] trunc_ln708_147_reg_2312;
reg   [16:0] trunc_ln708_147_reg_2312_pp0_iter2_reg;
reg   [16:0] trunc_ln708_147_reg_2312_pp0_iter3_reg;
wire   [0:0] icmp_ln1496_fu_738_p2;
reg   [0:0] icmp_ln1496_reg_2317;
wire   [0:0] icmp_ln1496_120_fu_744_p2;
reg   [0:0] icmp_ln1496_120_reg_2323;
wire   [0:0] icmp_ln1496_122_fu_750_p2;
reg   [0:0] icmp_ln1496_122_reg_2329;
wire   [0:0] icmp_ln1496_123_fu_756_p2;
reg   [0:0] icmp_ln1496_123_reg_2335;
wire  signed [16:0] trunc_ln708_148_fu_762_p4;
reg  signed [16:0] trunc_ln708_148_reg_2341;
wire  signed [16:0] trunc_ln708_149_fu_772_p4;
reg  signed [16:0] trunc_ln708_149_reg_2347;
wire  signed [16:0] trunc_ln708_150_fu_782_p4;
reg  signed [16:0] trunc_ln708_150_reg_2353;
wire  signed [16:0] trunc_ln708_151_fu_792_p4;
reg  signed [16:0] trunc_ln708_151_reg_2359;
wire  signed [16:0] trunc_ln708_152_fu_802_p4;
reg  signed [16:0] trunc_ln708_152_reg_2365;
wire  signed [16:0] trunc_ln708_153_fu_812_p4;
reg  signed [16:0] trunc_ln708_153_reg_2371;
wire  signed [16:0] trunc_ln708_154_fu_821_p4;
reg  signed [16:0] trunc_ln708_154_reg_2377;
wire  signed [16:0] trunc_ln708_155_fu_831_p4;
reg  signed [16:0] trunc_ln708_155_reg_2383;
reg   [16:0] trunc_ln708_156_reg_2389;
reg   [16:0] trunc_ln708_156_reg_2389_pp0_iter2_reg;
reg   [16:0] trunc_ln708_156_reg_2389_pp0_iter3_reg;
wire   [0:0] icmp_ln1496_1_fu_850_p2;
reg   [0:0] icmp_ln1496_1_reg_2394;
wire   [0:0] icmp_ln1496_127_fu_856_p2;
reg   [0:0] icmp_ln1496_127_reg_2400;
wire   [0:0] icmp_ln1496_129_fu_862_p2;
reg   [0:0] icmp_ln1496_129_reg_2406;
wire   [0:0] icmp_ln1496_130_fu_868_p2;
reg   [0:0] icmp_ln1496_130_reg_2412;
wire  signed [16:0] trunc_ln708_157_fu_874_p4;
reg  signed [16:0] trunc_ln708_157_reg_2418;
wire  signed [16:0] trunc_ln708_158_fu_884_p4;
reg  signed [16:0] trunc_ln708_158_reg_2424;
wire  signed [16:0] trunc_ln708_159_fu_894_p4;
reg  signed [16:0] trunc_ln708_159_reg_2430;
wire  signed [16:0] trunc_ln708_160_fu_904_p4;
reg  signed [16:0] trunc_ln708_160_reg_2436;
wire  signed [16:0] trunc_ln708_161_fu_914_p4;
reg  signed [16:0] trunc_ln708_161_reg_2442;
wire  signed [16:0] trunc_ln708_162_fu_924_p4;
reg  signed [16:0] trunc_ln708_162_reg_2448;
wire  signed [16:0] trunc_ln708_163_fu_933_p4;
reg  signed [16:0] trunc_ln708_163_reg_2454;
wire  signed [16:0] trunc_ln708_164_fu_943_p4;
reg  signed [16:0] trunc_ln708_164_reg_2460;
reg   [16:0] trunc_ln708_165_reg_2466;
reg   [16:0] trunc_ln708_165_reg_2466_pp0_iter2_reg;
reg   [16:0] trunc_ln708_165_reg_2466_pp0_iter3_reg;
wire   [0:0] icmp_ln1496_2_fu_962_p2;
reg   [0:0] icmp_ln1496_2_reg_2471;
wire   [0:0] icmp_ln1496_134_fu_968_p2;
reg   [0:0] icmp_ln1496_134_reg_2477;
wire   [0:0] icmp_ln1496_136_fu_974_p2;
reg   [0:0] icmp_ln1496_136_reg_2483;
wire   [0:0] icmp_ln1496_137_fu_980_p2;
reg   [0:0] icmp_ln1496_137_reg_2489;
wire  signed [16:0] trunc_ln708_166_fu_986_p4;
reg  signed [16:0] trunc_ln708_166_reg_2495;
wire  signed [16:0] trunc_ln708_167_fu_996_p4;
reg  signed [16:0] trunc_ln708_167_reg_2501;
wire  signed [16:0] trunc_ln708_168_fu_1006_p4;
reg  signed [16:0] trunc_ln708_168_reg_2507;
wire  signed [16:0] trunc_ln708_169_fu_1016_p4;
reg  signed [16:0] trunc_ln708_169_reg_2513;
wire  signed [16:0] trunc_ln708_170_fu_1026_p4;
reg  signed [16:0] trunc_ln708_170_reg_2519;
wire  signed [16:0] trunc_ln708_171_fu_1036_p4;
reg  signed [16:0] trunc_ln708_171_reg_2525;
wire  signed [16:0] trunc_ln708_172_fu_1045_p4;
reg  signed [16:0] trunc_ln708_172_reg_2531;
wire  signed [16:0] trunc_ln708_173_fu_1055_p4;
reg  signed [16:0] trunc_ln708_173_reg_2537;
reg   [16:0] trunc_ln708_174_reg_2543;
reg   [16:0] trunc_ln708_174_reg_2543_pp0_iter2_reg;
reg   [16:0] trunc_ln708_174_reg_2543_pp0_iter3_reg;
wire   [0:0] icmp_ln1496_3_fu_1074_p2;
reg   [0:0] icmp_ln1496_3_reg_2548;
wire   [0:0] icmp_ln1496_141_fu_1080_p2;
reg   [0:0] icmp_ln1496_141_reg_2554;
wire   [0:0] icmp_ln1496_143_fu_1086_p2;
reg   [0:0] icmp_ln1496_143_reg_2560;
wire   [0:0] icmp_ln1496_144_fu_1092_p2;
reg   [0:0] icmp_ln1496_144_reg_2566;
wire   [0:0] icmp_ln212_fu_1098_p2;
reg   [0:0] icmp_ln212_reg_2572;
wire   [31:0] select_ln227_fu_1122_p3;
reg   [31:0] select_ln227_reg_2576;
wire   [0:0] icmp_ln216_fu_1142_p2;
reg   [0:0] icmp_ln216_reg_2581;
wire   [31:0] select_ln222_fu_1166_p3;
reg   [31:0] select_ln222_reg_2585;
wire   [1:0] select_ln65_161_fu_1206_p3;
reg   [1:0] select_ln65_161_reg_2590;
wire   [0:0] icmp_ln1496_124_fu_1224_p2;
reg   [0:0] icmp_ln1496_124_reg_2596;
wire   [1:0] select_ln65_171_fu_1256_p3;
reg   [1:0] select_ln65_171_reg_2601;
wire   [0:0] icmp_ln1496_131_fu_1274_p2;
reg   [0:0] icmp_ln1496_131_reg_2607;
wire   [1:0] select_ln65_181_fu_1306_p3;
reg   [1:0] select_ln65_181_reg_2612;
wire   [0:0] icmp_ln1496_138_fu_1324_p2;
reg   [0:0] icmp_ln1496_138_reg_2618;
wire   [1:0] select_ln65_191_fu_1356_p3;
reg   [1:0] select_ln65_191_reg_2623;
wire   [0:0] icmp_ln1496_145_fu_1374_p2;
reg   [0:0] icmp_ln1496_145_reg_2629;
wire  signed [19:0] pool_window_0_V_fu_1385_p1;
reg  signed [19:0] pool_window_0_V_reg_2634;
reg  signed [19:0] pool_window_0_V_reg_2634_pp0_iter3_reg;
wire  signed [19:0] pool_window_1_V_fu_1388_p1;
reg  signed [19:0] pool_window_1_V_reg_2640;
reg  signed [19:0] pool_window_1_V_reg_2640_pp0_iter3_reg;
wire  signed [19:0] pool_window_2_V_fu_1391_p1;
reg  signed [19:0] pool_window_2_V_reg_2646;
reg  signed [19:0] pool_window_2_V_reg_2646_pp0_iter3_reg;
wire  signed [19:0] pool_window_3_V_fu_1394_p1;
reg  signed [19:0] pool_window_3_V_reg_2652;
reg  signed [19:0] pool_window_3_V_reg_2652_pp0_iter3_reg;
wire  signed [19:0] pool_window_4_V_fu_1397_p1;
reg  signed [19:0] pool_window_4_V_reg_2658;
reg  signed [19:0] pool_window_4_V_reg_2658_pp0_iter3_reg;
wire  signed [19:0] pool_window_5_V_fu_1400_p1;
reg  signed [19:0] pool_window_5_V_reg_2664;
reg  signed [19:0] pool_window_5_V_reg_2664_pp0_iter3_reg;
wire  signed [19:0] pool_window_6_V_fu_1403_p1;
reg  signed [19:0] pool_window_6_V_reg_2670;
reg  signed [19:0] pool_window_6_V_reg_2670_pp0_iter3_reg;
wire  signed [19:0] pool_window_7_V_fu_1406_p1;
reg  signed [19:0] pool_window_7_V_reg_2676;
reg  signed [19:0] pool_window_7_V_reg_2676_pp0_iter3_reg;
wire   [19:0] phi_ln_fu_1412_p18;
reg   [19:0] phi_ln_reg_2690;
wire   [2:0] select_ln65_166_fu_1464_p3;
reg   [2:0] select_ln65_166_reg_2695;
wire   [19:0] phi_ln65_s_fu_1475_p18;
reg   [19:0] phi_ln65_s_reg_2700;
wire  signed [19:0] pool_window_0_V_15_fu_1513_p1;
reg  signed [19:0] pool_window_0_V_15_reg_2705;
reg  signed [19:0] pool_window_0_V_15_reg_2705_pp0_iter3_reg;
wire  signed [19:0] pool_window_1_V_15_fu_1516_p1;
reg  signed [19:0] pool_window_1_V_15_reg_2711;
reg  signed [19:0] pool_window_1_V_15_reg_2711_pp0_iter3_reg;
wire  signed [19:0] pool_window_2_V_15_fu_1519_p1;
reg  signed [19:0] pool_window_2_V_15_reg_2717;
reg  signed [19:0] pool_window_2_V_15_reg_2717_pp0_iter3_reg;
wire  signed [19:0] pool_window_3_V_15_fu_1522_p1;
reg  signed [19:0] pool_window_3_V_15_reg_2723;
reg  signed [19:0] pool_window_3_V_15_reg_2723_pp0_iter3_reg;
wire  signed [19:0] pool_window_4_V_15_fu_1525_p1;
reg  signed [19:0] pool_window_4_V_15_reg_2729;
reg  signed [19:0] pool_window_4_V_15_reg_2729_pp0_iter3_reg;
wire  signed [19:0] pool_window_5_V_15_fu_1528_p1;
reg  signed [19:0] pool_window_5_V_15_reg_2735;
reg  signed [19:0] pool_window_5_V_15_reg_2735_pp0_iter3_reg;
wire  signed [19:0] pool_window_6_V_15_fu_1531_p1;
reg  signed [19:0] pool_window_6_V_15_reg_2741;
reg  signed [19:0] pool_window_6_V_15_reg_2741_pp0_iter3_reg;
wire  signed [19:0] pool_window_7_V_15_fu_1534_p1;
reg  signed [19:0] pool_window_7_V_15_reg_2747;
reg  signed [19:0] pool_window_7_V_15_reg_2747_pp0_iter3_reg;
wire   [19:0] phi_ln65_46_fu_1540_p18;
reg   [19:0] phi_ln65_46_reg_2761;
wire   [2:0] select_ln65_176_fu_1592_p3;
reg   [2:0] select_ln65_176_reg_2766;
wire   [19:0] phi_ln65_47_fu_1603_p18;
reg   [19:0] phi_ln65_47_reg_2771;
wire  signed [19:0] pool_window_0_V_16_fu_1641_p1;
reg  signed [19:0] pool_window_0_V_16_reg_2776;
reg  signed [19:0] pool_window_0_V_16_reg_2776_pp0_iter3_reg;
wire  signed [19:0] pool_window_1_V_16_fu_1644_p1;
reg  signed [19:0] pool_window_1_V_16_reg_2782;
reg  signed [19:0] pool_window_1_V_16_reg_2782_pp0_iter3_reg;
wire  signed [19:0] pool_window_2_V_16_fu_1647_p1;
reg  signed [19:0] pool_window_2_V_16_reg_2788;
reg  signed [19:0] pool_window_2_V_16_reg_2788_pp0_iter3_reg;
wire  signed [19:0] pool_window_3_V_16_fu_1650_p1;
reg  signed [19:0] pool_window_3_V_16_reg_2794;
reg  signed [19:0] pool_window_3_V_16_reg_2794_pp0_iter3_reg;
wire  signed [19:0] pool_window_4_V_16_fu_1653_p1;
reg  signed [19:0] pool_window_4_V_16_reg_2800;
reg  signed [19:0] pool_window_4_V_16_reg_2800_pp0_iter3_reg;
wire  signed [19:0] pool_window_5_V_16_fu_1656_p1;
reg  signed [19:0] pool_window_5_V_16_reg_2806;
reg  signed [19:0] pool_window_5_V_16_reg_2806_pp0_iter3_reg;
wire  signed [19:0] pool_window_6_V_16_fu_1659_p1;
reg  signed [19:0] pool_window_6_V_16_reg_2812;
reg  signed [19:0] pool_window_6_V_16_reg_2812_pp0_iter3_reg;
wire  signed [19:0] pool_window_7_V_16_fu_1662_p1;
reg  signed [19:0] pool_window_7_V_16_reg_2818;
reg  signed [19:0] pool_window_7_V_16_reg_2818_pp0_iter3_reg;
wire   [19:0] phi_ln65_49_fu_1668_p18;
reg   [19:0] phi_ln65_49_reg_2832;
wire   [2:0] select_ln65_186_fu_1720_p3;
reg   [2:0] select_ln65_186_reg_2837;
wire   [19:0] phi_ln65_50_fu_1731_p18;
reg   [19:0] phi_ln65_50_reg_2842;
wire  signed [19:0] pool_window_0_V_17_fu_1769_p1;
reg  signed [19:0] pool_window_0_V_17_reg_2847;
reg  signed [19:0] pool_window_0_V_17_reg_2847_pp0_iter3_reg;
wire  signed [19:0] pool_window_1_V_17_fu_1772_p1;
reg  signed [19:0] pool_window_1_V_17_reg_2853;
reg  signed [19:0] pool_window_1_V_17_reg_2853_pp0_iter3_reg;
wire  signed [19:0] pool_window_2_V_17_fu_1775_p1;
reg  signed [19:0] pool_window_2_V_17_reg_2859;
reg  signed [19:0] pool_window_2_V_17_reg_2859_pp0_iter3_reg;
wire  signed [19:0] pool_window_3_V_17_fu_1778_p1;
reg  signed [19:0] pool_window_3_V_17_reg_2865;
reg  signed [19:0] pool_window_3_V_17_reg_2865_pp0_iter3_reg;
wire  signed [19:0] pool_window_4_V_17_fu_1781_p1;
reg  signed [19:0] pool_window_4_V_17_reg_2871;
reg  signed [19:0] pool_window_4_V_17_reg_2871_pp0_iter3_reg;
wire  signed [19:0] pool_window_5_V_17_fu_1784_p1;
reg  signed [19:0] pool_window_5_V_17_reg_2877;
reg  signed [19:0] pool_window_5_V_17_reg_2877_pp0_iter3_reg;
wire  signed [19:0] pool_window_6_V_17_fu_1787_p1;
reg  signed [19:0] pool_window_6_V_17_reg_2883;
reg  signed [19:0] pool_window_6_V_17_reg_2883_pp0_iter3_reg;
wire  signed [19:0] pool_window_7_V_17_fu_1790_p1;
reg  signed [19:0] pool_window_7_V_17_reg_2889;
reg  signed [19:0] pool_window_7_V_17_reg_2889_pp0_iter3_reg;
wire   [19:0] phi_ln65_52_fu_1796_p18;
reg   [19:0] phi_ln65_52_reg_2903;
wire   [2:0] select_ln65_196_fu_1848_p3;
reg   [2:0] select_ln65_196_reg_2908;
wire   [19:0] phi_ln65_53_fu_1859_p18;
reg   [19:0] phi_ln65_53_reg_2913;
wire   [2:0] select_ln65_167_fu_1910_p3;
reg   [2:0] select_ln65_167_reg_2918;
wire   [2:0] select_ln65_177_fu_1924_p3;
reg   [2:0] select_ln65_177_reg_2923;
wire   [2:0] select_ln65_187_fu_1938_p3;
reg   [2:0] select_ln65_187_reg_2928;
wire   [2:0] select_ln65_197_fu_1952_p3;
reg   [2:0] select_ln65_197_reg_2933;
wire   [3:0] zext_ln65_48_fu_1959_p1;
reg   [3:0] zext_ln65_48_reg_2938;
wire   [19:0] phi_ln65_45_fu_1962_p18;
reg   [19:0] phi_ln65_45_reg_2943;
wire   [3:0] zext_ln65_51_fu_1984_p1;
reg   [3:0] zext_ln65_51_reg_2948;
wire   [19:0] phi_ln65_48_fu_1987_p18;
reg   [19:0] phi_ln65_48_reg_2953;
wire   [3:0] zext_ln65_54_fu_2009_p1;
reg   [3:0] zext_ln65_54_reg_2958;
wire   [19:0] phi_ln65_51_fu_2012_p18;
reg   [19:0] phi_ln65_51_reg_2963;
wire   [3:0] zext_ln65_57_fu_2034_p1;
reg   [3:0] zext_ln65_57_reg_2968;
wire   [19:0] phi_ln65_54_fu_2037_p18;
reg   [19:0] phi_ln65_54_reg_2973;
wire  signed [19:0] pool_window_8_V_fu_2059_p1;
reg  signed [19:0] pool_window_8_V_reg_2978;
wire   [3:0] select_ln40_fu_2067_p3;
reg   [3:0] select_ln40_reg_2983;
wire  signed [19:0] pool_window_8_V_15_fu_2074_p1;
reg  signed [19:0] pool_window_8_V_15_reg_2988;
wire   [3:0] select_ln40_15_fu_2082_p3;
reg   [3:0] select_ln40_15_reg_2993;
wire  signed [19:0] pool_window_8_V_16_fu_2089_p1;
reg  signed [19:0] pool_window_8_V_16_reg_2998;
wire   [3:0] select_ln40_16_fu_2097_p3;
reg   [3:0] select_ln40_16_reg_3003;
wire  signed [19:0] pool_window_8_V_17_fu_2104_p1;
reg  signed [19:0] pool_window_8_V_17_reg_3008;
wire   [3:0] select_ln40_17_fu_2112_p3;
reg   [3:0] select_ln40_17_reg_3013;
wire   [19:0] tmp_16_fu_2119_p11;
reg   [19:0] tmp_16_reg_3018;
wire   [19:0] tmp_17_fu_2133_p11;
reg   [19:0] tmp_17_reg_3023;
wire   [19:0] tmp_19_fu_2147_p11;
reg   [19:0] tmp_19_reg_3028;
wire   [19:0] tmp_20_fu_2161_p11;
reg   [19:0] tmp_20_reg_3033;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg   [13:0] ap_phi_mux_indvar_flatten_phi_fu_218_p4;
wire    ap_block_pp0_stage0;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_225;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_225;
reg   [31:0] ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225;
wire   [31:0] add_ln225_fu_1104_p2;
wire   [31:0] add_ln220_fu_1148_p2;
reg   [31:0] ap_sig_allocacmp_sY_2_load;
reg    ap_block_pp0_stage1_01001;
wire   [30:0] tmp_fu_596_p4;
wire   [30:0] tmp_18_fu_616_p4;
wire   [0:0] icmp_ln191_fu_576_p2;
wire   [0:0] icmp_ln191_7_fu_586_p2;
wire   [0:0] icmp_ln191_8_fu_606_p2;
wire   [0:0] icmp_ln191_9_fu_626_p2;
wire   [0:0] and_ln191_5_fu_638_p2;
wire   [0:0] and_ln191_fu_632_p2;
wire   [31:0] add_ln227_fu_1116_p2;
wire   [31:0] add_ln222_fu_1160_p2;
wire   [16:0] select_ln65_fu_1183_p3;
wire   [16:0] select_ln65_160_fu_1195_p3;
wire   [0:0] icmp_ln1496_121_fu_1200_p2;
wire   [1:0] select_ln65_159_fu_1188_p3;
wire   [1:0] zext_ln65_fu_1180_p1;
wire   [16:0] select_ln65_163_fu_1214_p3;
wire   [16:0] select_ln65_165_fu_1219_p3;
wire   [16:0] select_ln65_168_fu_1233_p3;
wire   [16:0] select_ln65_170_fu_1245_p3;
wire   [0:0] icmp_ln1496_128_fu_1250_p2;
wire   [1:0] select_ln65_169_fu_1238_p3;
wire   [1:0] zext_ln65_49_fu_1230_p1;
wire   [16:0] select_ln65_173_fu_1264_p3;
wire   [16:0] select_ln65_175_fu_1269_p3;
wire   [16:0] select_ln65_178_fu_1283_p3;
wire   [16:0] select_ln65_180_fu_1295_p3;
wire   [0:0] icmp_ln1496_135_fu_1300_p2;
wire   [1:0] select_ln65_179_fu_1288_p3;
wire   [1:0] zext_ln65_52_fu_1280_p1;
wire   [16:0] select_ln65_183_fu_1314_p3;
wire   [16:0] select_ln65_185_fu_1319_p3;
wire   [16:0] select_ln65_188_fu_1333_p3;
wire   [16:0] select_ln65_190_fu_1345_p3;
wire   [0:0] icmp_ln1496_142_fu_1350_p2;
wire   [1:0] select_ln65_189_fu_1338_p3;
wire   [1:0] zext_ln65_55_fu_1330_p1;
wire   [16:0] select_ln65_193_fu_1364_p3;
wire   [16:0] select_ln65_195_fu_1369_p3;
wire  signed [19:0] phi_ln_fu_1412_p1;
wire  signed [19:0] phi_ln_fu_1412_p2;
wire  signed [19:0] phi_ln_fu_1412_p3;
wire   [3:0] phi_ln_fu_1412_p17;
wire   [2:0] select_ln65_164_fu_1457_p3;
wire   [2:0] select_ln65_162_fu_1450_p3;
wire  signed [19:0] phi_ln65_s_fu_1475_p5;
wire  signed [19:0] phi_ln65_s_fu_1475_p6;
wire  signed [19:0] phi_ln65_s_fu_1475_p7;
wire   [3:0] phi_ln65_s_fu_1475_p17;
wire  signed [19:0] phi_ln65_46_fu_1540_p1;
wire  signed [19:0] phi_ln65_46_fu_1540_p2;
wire  signed [19:0] phi_ln65_46_fu_1540_p3;
wire   [3:0] phi_ln65_46_fu_1540_p17;
wire   [2:0] select_ln65_174_fu_1585_p3;
wire   [2:0] select_ln65_172_fu_1578_p3;
wire  signed [19:0] phi_ln65_47_fu_1603_p5;
wire  signed [19:0] phi_ln65_47_fu_1603_p6;
wire  signed [19:0] phi_ln65_47_fu_1603_p7;
wire   [3:0] phi_ln65_47_fu_1603_p17;
wire  signed [19:0] phi_ln65_49_fu_1668_p1;
wire  signed [19:0] phi_ln65_49_fu_1668_p2;
wire  signed [19:0] phi_ln65_49_fu_1668_p3;
wire   [3:0] phi_ln65_49_fu_1668_p17;
wire   [2:0] select_ln65_184_fu_1713_p3;
wire   [2:0] select_ln65_182_fu_1706_p3;
wire  signed [19:0] phi_ln65_50_fu_1731_p5;
wire  signed [19:0] phi_ln65_50_fu_1731_p6;
wire  signed [19:0] phi_ln65_50_fu_1731_p7;
wire   [3:0] phi_ln65_50_fu_1731_p17;
wire  signed [19:0] phi_ln65_52_fu_1796_p1;
wire  signed [19:0] phi_ln65_52_fu_1796_p2;
wire  signed [19:0] phi_ln65_52_fu_1796_p3;
wire   [3:0] phi_ln65_52_fu_1796_p17;
wire   [2:0] select_ln65_194_fu_1841_p3;
wire   [2:0] select_ln65_192_fu_1834_p3;
wire  signed [19:0] phi_ln65_53_fu_1859_p5;
wire  signed [19:0] phi_ln65_53_fu_1859_p6;
wire  signed [19:0] phi_ln65_53_fu_1859_p7;
wire   [3:0] phi_ln65_53_fu_1859_p17;
wire   [0:0] icmp_ln1496_125_fu_1906_p2;
wire   [2:0] zext_ln65_47_fu_1903_p1;
wire   [0:0] icmp_ln1496_132_fu_1920_p2;
wire   [2:0] zext_ln65_50_fu_1917_p1;
wire   [0:0] icmp_ln1496_139_fu_1934_p2;
wire   [2:0] zext_ln65_53_fu_1931_p1;
wire   [0:0] icmp_ln1496_146_fu_1948_p2;
wire   [2:0] zext_ln65_56_fu_1945_p1;
wire   [3:0] phi_ln65_45_fu_1962_p17;
wire   [3:0] phi_ln65_48_fu_1987_p17;
wire   [3:0] phi_ln65_51_fu_2012_p17;
wire   [3:0] phi_ln65_54_fu_2037_p17;
wire   [0:0] icmp_ln1496_126_fu_2062_p2;
wire   [0:0] icmp_ln1496_133_fu_2077_p2;
wire   [0:0] icmp_ln1496_140_fu_2092_p2;
wire   [0:0] icmp_ln1496_147_fu_2107_p2;
wire    ap_CS_fsm_state12;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_680;
reg    ap_condition_675;
reg    ap_condition_662;
reg    ap_condition_1828;
reg    ap_condition_401;
reg    ap_condition_1833;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 pX_2 = 32'd0;
#0 sX_2 = 32'd0;
#0 pY_2 = 32'd0;
#0 sY_2 = 32'd0;
#0 kernel_data_V_3_4 = 20'd0;
#0 kernel_data_V_3_5 = 20'd0;
#0 kernel_data_V_3_6 = 20'd0;
#0 kernel_data_V_3_7 = 20'd0;
#0 kernel_data_V_3_16 = 20'd0;
#0 kernel_data_V_3_17 = 20'd0;
#0 kernel_data_V_3_18 = 20'd0;
#0 kernel_data_V_3_19 = 20'd0;
#0 kernel_data_V_3_28 = 20'd0;
#0 kernel_data_V_3_29 = 20'd0;
#0 kernel_data_V_3_30 = 20'd0;
#0 kernel_data_V_3_31 = 20'd0;
#0 kernel_data_V_3_8 = 20'd0;
#0 kernel_data_V_3_9 = 20'd0;
#0 kernel_data_V_3_10 = 20'd0;
#0 kernel_data_V_3_11 = 20'd0;
#0 kernel_data_V_3_20 = 20'd0;
#0 kernel_data_V_3_21 = 20'd0;
#0 kernel_data_V_3_22 = 20'd0;
#0 kernel_data_V_3_23 = 20'd0;
#0 kernel_data_V_3_32 = 20'd0;
#0 kernel_data_V_3_33 = 20'd0;
#0 kernel_data_V_3_34 = 20'd0;
#0 kernel_data_V_3_35 = 20'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe #(
    .DataWidth( 20 ),
    .AddressRange( 126 ),
    .AddressWidth( 7 ))
line_buffer_Array_V_3_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd125),
    .ce0(line_buffer_Array_V_3_0_0_ce0),
    .we0(line_buffer_Array_V_3_0_0_we0),
    .d0(data_V_data_0_V_dout),
    .q0(line_buffer_Array_V_3_0_0_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe #(
    .DataWidth( 20 ),
    .AddressRange( 126 ),
    .AddressWidth( 7 ))
line_buffer_Array_V_3_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd125),
    .ce0(line_buffer_Array_V_3_1_0_ce0),
    .we0(line_buffer_Array_V_3_1_0_we0),
    .d0(DataOut_V_68_reg_2232),
    .q0(line_buffer_Array_V_3_1_0_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe #(
    .DataWidth( 20 ),
    .AddressRange( 126 ),
    .AddressWidth( 7 ))
line_buffer_Array_V_3_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd125),
    .ce0(line_buffer_Array_V_3_0_1_ce0),
    .we0(line_buffer_Array_V_3_0_1_we0),
    .d0(data_V_data_1_V_dout),
    .q0(line_buffer_Array_V_3_0_1_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe #(
    .DataWidth( 20 ),
    .AddressRange( 126 ),
    .AddressWidth( 7 ))
line_buffer_Array_V_3_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd125),
    .ce0(line_buffer_Array_V_3_1_1_ce0),
    .we0(line_buffer_Array_V_3_1_1_we0),
    .d0(DataOut_V_70_reg_2239),
    .q0(line_buffer_Array_V_3_1_1_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe #(
    .DataWidth( 20 ),
    .AddressRange( 126 ),
    .AddressWidth( 7 ))
line_buffer_Array_V_3_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd125),
    .ce0(line_buffer_Array_V_3_0_2_ce0),
    .we0(line_buffer_Array_V_3_0_2_we0),
    .d0(data_V_data_2_V_dout),
    .q0(line_buffer_Array_V_3_0_2_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe #(
    .DataWidth( 20 ),
    .AddressRange( 126 ),
    .AddressWidth( 7 ))
line_buffer_Array_V_3_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd125),
    .ce0(line_buffer_Array_V_3_1_2_ce0),
    .we0(line_buffer_Array_V_3_1_2_we0),
    .d0(DataOut_V_72_reg_2246),
    .q0(line_buffer_Array_V_3_1_2_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe #(
    .DataWidth( 20 ),
    .AddressRange( 126 ),
    .AddressWidth( 7 ))
line_buffer_Array_V_3_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd125),
    .ce0(line_buffer_Array_V_3_0_3_ce0),
    .we0(line_buffer_Array_V_3_0_3_we0),
    .d0(data_V_data_3_V_dout),
    .q0(line_buffer_Array_V_3_0_3_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s_line_budEe #(
    .DataWidth( 20 ),
    .AddressRange( 126 ),
    .AddressWidth( 7 ))
line_buffer_Array_V_3_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd125),
    .ce0(line_buffer_Array_V_3_1_3_ce0),
    .we0(line_buffer_Array_V_3_1_3_we0),
    .d0(DataOut_V_74_reg_2253),
    .q0(line_buffer_Array_V_3_1_3_q0)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U19(
    .din0(phi_ln_fu_1412_p1),
    .din1(phi_ln_fu_1412_p2),
    .din2(phi_ln_fu_1412_p3),
    .din3(pool_window_3_V_fu_1394_p1),
    .din4(pool_window_3_V_fu_1394_p1),
    .din5(pool_window_3_V_fu_1394_p1),
    .din6(pool_window_3_V_fu_1394_p1),
    .din7(pool_window_3_V_fu_1394_p1),
    .din8(pool_window_3_V_fu_1394_p1),
    .din9(pool_window_3_V_fu_1394_p1),
    .din10(pool_window_3_V_fu_1394_p1),
    .din11(pool_window_3_V_fu_1394_p1),
    .din12(pool_window_3_V_fu_1394_p1),
    .din13(pool_window_3_V_fu_1394_p1),
    .din14(pool_window_3_V_fu_1394_p1),
    .din15(pool_window_3_V_fu_1394_p1),
    .din16(phi_ln_fu_1412_p17),
    .dout(phi_ln_fu_1412_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U20(
    .din0(pool_window_7_V_fu_1406_p1),
    .din1(pool_window_7_V_fu_1406_p1),
    .din2(pool_window_7_V_fu_1406_p1),
    .din3(pool_window_7_V_fu_1406_p1),
    .din4(phi_ln65_s_fu_1475_p5),
    .din5(phi_ln65_s_fu_1475_p6),
    .din6(phi_ln65_s_fu_1475_p7),
    .din7(pool_window_7_V_fu_1406_p1),
    .din8(pool_window_7_V_fu_1406_p1),
    .din9(pool_window_7_V_fu_1406_p1),
    .din10(pool_window_7_V_fu_1406_p1),
    .din11(pool_window_7_V_fu_1406_p1),
    .din12(pool_window_7_V_fu_1406_p1),
    .din13(pool_window_7_V_fu_1406_p1),
    .din14(pool_window_7_V_fu_1406_p1),
    .din15(pool_window_7_V_fu_1406_p1),
    .din16(phi_ln65_s_fu_1475_p17),
    .dout(phi_ln65_s_fu_1475_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U21(
    .din0(phi_ln65_46_fu_1540_p1),
    .din1(phi_ln65_46_fu_1540_p2),
    .din2(phi_ln65_46_fu_1540_p3),
    .din3(pool_window_3_V_15_fu_1522_p1),
    .din4(pool_window_3_V_15_fu_1522_p1),
    .din5(pool_window_3_V_15_fu_1522_p1),
    .din6(pool_window_3_V_15_fu_1522_p1),
    .din7(pool_window_3_V_15_fu_1522_p1),
    .din8(pool_window_3_V_15_fu_1522_p1),
    .din9(pool_window_3_V_15_fu_1522_p1),
    .din10(pool_window_3_V_15_fu_1522_p1),
    .din11(pool_window_3_V_15_fu_1522_p1),
    .din12(pool_window_3_V_15_fu_1522_p1),
    .din13(pool_window_3_V_15_fu_1522_p1),
    .din14(pool_window_3_V_15_fu_1522_p1),
    .din15(pool_window_3_V_15_fu_1522_p1),
    .din16(phi_ln65_46_fu_1540_p17),
    .dout(phi_ln65_46_fu_1540_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U22(
    .din0(pool_window_7_V_15_fu_1534_p1),
    .din1(pool_window_7_V_15_fu_1534_p1),
    .din2(pool_window_7_V_15_fu_1534_p1),
    .din3(pool_window_7_V_15_fu_1534_p1),
    .din4(phi_ln65_47_fu_1603_p5),
    .din5(phi_ln65_47_fu_1603_p6),
    .din6(phi_ln65_47_fu_1603_p7),
    .din7(pool_window_7_V_15_fu_1534_p1),
    .din8(pool_window_7_V_15_fu_1534_p1),
    .din9(pool_window_7_V_15_fu_1534_p1),
    .din10(pool_window_7_V_15_fu_1534_p1),
    .din11(pool_window_7_V_15_fu_1534_p1),
    .din12(pool_window_7_V_15_fu_1534_p1),
    .din13(pool_window_7_V_15_fu_1534_p1),
    .din14(pool_window_7_V_15_fu_1534_p1),
    .din15(pool_window_7_V_15_fu_1534_p1),
    .din16(phi_ln65_47_fu_1603_p17),
    .dout(phi_ln65_47_fu_1603_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U23(
    .din0(phi_ln65_49_fu_1668_p1),
    .din1(phi_ln65_49_fu_1668_p2),
    .din2(phi_ln65_49_fu_1668_p3),
    .din3(pool_window_3_V_16_fu_1650_p1),
    .din4(pool_window_3_V_16_fu_1650_p1),
    .din5(pool_window_3_V_16_fu_1650_p1),
    .din6(pool_window_3_V_16_fu_1650_p1),
    .din7(pool_window_3_V_16_fu_1650_p1),
    .din8(pool_window_3_V_16_fu_1650_p1),
    .din9(pool_window_3_V_16_fu_1650_p1),
    .din10(pool_window_3_V_16_fu_1650_p1),
    .din11(pool_window_3_V_16_fu_1650_p1),
    .din12(pool_window_3_V_16_fu_1650_p1),
    .din13(pool_window_3_V_16_fu_1650_p1),
    .din14(pool_window_3_V_16_fu_1650_p1),
    .din15(pool_window_3_V_16_fu_1650_p1),
    .din16(phi_ln65_49_fu_1668_p17),
    .dout(phi_ln65_49_fu_1668_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U24(
    .din0(pool_window_7_V_16_fu_1662_p1),
    .din1(pool_window_7_V_16_fu_1662_p1),
    .din2(pool_window_7_V_16_fu_1662_p1),
    .din3(pool_window_7_V_16_fu_1662_p1),
    .din4(phi_ln65_50_fu_1731_p5),
    .din5(phi_ln65_50_fu_1731_p6),
    .din6(phi_ln65_50_fu_1731_p7),
    .din7(pool_window_7_V_16_fu_1662_p1),
    .din8(pool_window_7_V_16_fu_1662_p1),
    .din9(pool_window_7_V_16_fu_1662_p1),
    .din10(pool_window_7_V_16_fu_1662_p1),
    .din11(pool_window_7_V_16_fu_1662_p1),
    .din12(pool_window_7_V_16_fu_1662_p1),
    .din13(pool_window_7_V_16_fu_1662_p1),
    .din14(pool_window_7_V_16_fu_1662_p1),
    .din15(pool_window_7_V_16_fu_1662_p1),
    .din16(phi_ln65_50_fu_1731_p17),
    .dout(phi_ln65_50_fu_1731_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U25(
    .din0(phi_ln65_52_fu_1796_p1),
    .din1(phi_ln65_52_fu_1796_p2),
    .din2(phi_ln65_52_fu_1796_p3),
    .din3(pool_window_3_V_17_fu_1778_p1),
    .din4(pool_window_3_V_17_fu_1778_p1),
    .din5(pool_window_3_V_17_fu_1778_p1),
    .din6(pool_window_3_V_17_fu_1778_p1),
    .din7(pool_window_3_V_17_fu_1778_p1),
    .din8(pool_window_3_V_17_fu_1778_p1),
    .din9(pool_window_3_V_17_fu_1778_p1),
    .din10(pool_window_3_V_17_fu_1778_p1),
    .din11(pool_window_3_V_17_fu_1778_p1),
    .din12(pool_window_3_V_17_fu_1778_p1),
    .din13(pool_window_3_V_17_fu_1778_p1),
    .din14(pool_window_3_V_17_fu_1778_p1),
    .din15(pool_window_3_V_17_fu_1778_p1),
    .din16(phi_ln65_52_fu_1796_p17),
    .dout(phi_ln65_52_fu_1796_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U26(
    .din0(pool_window_7_V_17_fu_1790_p1),
    .din1(pool_window_7_V_17_fu_1790_p1),
    .din2(pool_window_7_V_17_fu_1790_p1),
    .din3(pool_window_7_V_17_fu_1790_p1),
    .din4(phi_ln65_53_fu_1859_p5),
    .din5(phi_ln65_53_fu_1859_p6),
    .din6(phi_ln65_53_fu_1859_p7),
    .din7(pool_window_7_V_17_fu_1790_p1),
    .din8(pool_window_7_V_17_fu_1790_p1),
    .din9(pool_window_7_V_17_fu_1790_p1),
    .din10(pool_window_7_V_17_fu_1790_p1),
    .din11(pool_window_7_V_17_fu_1790_p1),
    .din12(pool_window_7_V_17_fu_1790_p1),
    .din13(pool_window_7_V_17_fu_1790_p1),
    .din14(pool_window_7_V_17_fu_1790_p1),
    .din15(pool_window_7_V_17_fu_1790_p1),
    .din16(phi_ln65_53_fu_1859_p17),
    .dout(phi_ln65_53_fu_1859_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U27(
    .din0(pool_window_0_V_reg_2634),
    .din1(pool_window_1_V_reg_2640),
    .din2(pool_window_2_V_reg_2646),
    .din3(pool_window_3_V_reg_2652),
    .din4(pool_window_4_V_reg_2658),
    .din5(pool_window_5_V_reg_2664),
    .din6(pool_window_6_V_reg_2670),
    .din7(pool_window_7_V_reg_2676),
    .din8(pool_window_7_V_reg_2676),
    .din9(pool_window_7_V_reg_2676),
    .din10(pool_window_7_V_reg_2676),
    .din11(pool_window_7_V_reg_2676),
    .din12(pool_window_7_V_reg_2676),
    .din13(pool_window_7_V_reg_2676),
    .din14(pool_window_7_V_reg_2676),
    .din15(pool_window_7_V_reg_2676),
    .din16(phi_ln65_45_fu_1962_p17),
    .dout(phi_ln65_45_fu_1962_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U28(
    .din0(pool_window_0_V_15_reg_2705),
    .din1(pool_window_1_V_15_reg_2711),
    .din2(pool_window_2_V_15_reg_2717),
    .din3(pool_window_3_V_15_reg_2723),
    .din4(pool_window_4_V_15_reg_2729),
    .din5(pool_window_5_V_15_reg_2735),
    .din6(pool_window_6_V_15_reg_2741),
    .din7(pool_window_7_V_15_reg_2747),
    .din8(pool_window_7_V_15_reg_2747),
    .din9(pool_window_7_V_15_reg_2747),
    .din10(pool_window_7_V_15_reg_2747),
    .din11(pool_window_7_V_15_reg_2747),
    .din12(pool_window_7_V_15_reg_2747),
    .din13(pool_window_7_V_15_reg_2747),
    .din14(pool_window_7_V_15_reg_2747),
    .din15(pool_window_7_V_15_reg_2747),
    .din16(phi_ln65_48_fu_1987_p17),
    .dout(phi_ln65_48_fu_1987_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U29(
    .din0(pool_window_0_V_16_reg_2776),
    .din1(pool_window_1_V_16_reg_2782),
    .din2(pool_window_2_V_16_reg_2788),
    .din3(pool_window_3_V_16_reg_2794),
    .din4(pool_window_4_V_16_reg_2800),
    .din5(pool_window_5_V_16_reg_2806),
    .din6(pool_window_6_V_16_reg_2812),
    .din7(pool_window_7_V_16_reg_2818),
    .din8(pool_window_7_V_16_reg_2818),
    .din9(pool_window_7_V_16_reg_2818),
    .din10(pool_window_7_V_16_reg_2818),
    .din11(pool_window_7_V_16_reg_2818),
    .din12(pool_window_7_V_16_reg_2818),
    .din13(pool_window_7_V_16_reg_2818),
    .din14(pool_window_7_V_16_reg_2818),
    .din15(pool_window_7_V_16_reg_2818),
    .din16(phi_ln65_51_fu_2012_p17),
    .dout(phi_ln65_51_fu_2012_p18)
);

myproject_axi_mux_164_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 20 ),
    .din10_WIDTH( 20 ),
    .din11_WIDTH( 20 ),
    .din12_WIDTH( 20 ),
    .din13_WIDTH( 20 ),
    .din14_WIDTH( 20 ),
    .din15_WIDTH( 20 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_164_20_1_1_U30(
    .din0(pool_window_0_V_17_reg_2847),
    .din1(pool_window_1_V_17_reg_2853),
    .din2(pool_window_2_V_17_reg_2859),
    .din3(pool_window_3_V_17_reg_2865),
    .din4(pool_window_4_V_17_reg_2871),
    .din5(pool_window_5_V_17_reg_2877),
    .din6(pool_window_6_V_17_reg_2883),
    .din7(pool_window_7_V_17_reg_2889),
    .din8(pool_window_7_V_17_reg_2889),
    .din9(pool_window_7_V_17_reg_2889),
    .din10(pool_window_7_V_17_reg_2889),
    .din11(pool_window_7_V_17_reg_2889),
    .din12(pool_window_7_V_17_reg_2889),
    .din13(pool_window_7_V_17_reg_2889),
    .din14(pool_window_7_V_17_reg_2889),
    .din15(pool_window_7_V_17_reg_2889),
    .din16(phi_ln65_54_fu_2037_p17),
    .dout(phi_ln65_54_fu_2037_p18)
);

myproject_axi_mux_94_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_94_20_1_1_U31(
    .din0(pool_window_0_V_reg_2634_pp0_iter3_reg),
    .din1(pool_window_1_V_reg_2640_pp0_iter3_reg),
    .din2(pool_window_2_V_reg_2646_pp0_iter3_reg),
    .din3(pool_window_3_V_reg_2652_pp0_iter3_reg),
    .din4(pool_window_4_V_reg_2658_pp0_iter3_reg),
    .din5(pool_window_5_V_reg_2664_pp0_iter3_reg),
    .din6(pool_window_6_V_reg_2670_pp0_iter3_reg),
    .din7(pool_window_7_V_reg_2676_pp0_iter3_reg),
    .din8(pool_window_8_V_reg_2978),
    .din9(select_ln40_reg_2983),
    .dout(tmp_16_fu_2119_p11)
);

myproject_axi_mux_94_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_94_20_1_1_U32(
    .din0(pool_window_0_V_15_reg_2705_pp0_iter3_reg),
    .din1(pool_window_1_V_15_reg_2711_pp0_iter3_reg),
    .din2(pool_window_2_V_15_reg_2717_pp0_iter3_reg),
    .din3(pool_window_3_V_15_reg_2723_pp0_iter3_reg),
    .din4(pool_window_4_V_15_reg_2729_pp0_iter3_reg),
    .din5(pool_window_5_V_15_reg_2735_pp0_iter3_reg),
    .din6(pool_window_6_V_15_reg_2741_pp0_iter3_reg),
    .din7(pool_window_7_V_15_reg_2747_pp0_iter3_reg),
    .din8(pool_window_8_V_15_reg_2988),
    .din9(select_ln40_15_reg_2993),
    .dout(tmp_17_fu_2133_p11)
);

myproject_axi_mux_94_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_94_20_1_1_U33(
    .din0(pool_window_0_V_16_reg_2776_pp0_iter3_reg),
    .din1(pool_window_1_V_16_reg_2782_pp0_iter3_reg),
    .din2(pool_window_2_V_16_reg_2788_pp0_iter3_reg),
    .din3(pool_window_3_V_16_reg_2794_pp0_iter3_reg),
    .din4(pool_window_4_V_16_reg_2800_pp0_iter3_reg),
    .din5(pool_window_5_V_16_reg_2806_pp0_iter3_reg),
    .din6(pool_window_6_V_16_reg_2812_pp0_iter3_reg),
    .din7(pool_window_7_V_16_reg_2818_pp0_iter3_reg),
    .din8(pool_window_8_V_16_reg_2998),
    .din9(select_ln40_16_reg_3003),
    .dout(tmp_19_fu_2147_p11)
);

myproject_axi_mux_94_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 20 ),
    .din5_WIDTH( 20 ),
    .din6_WIDTH( 20 ),
    .din7_WIDTH( 20 ),
    .din8_WIDTH( 20 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 20 ))
myproject_axi_mux_94_20_1_1_U34(
    .din0(pool_window_0_V_17_reg_2847_pp0_iter3_reg),
    .din1(pool_window_1_V_17_reg_2853_pp0_iter3_reg),
    .din2(pool_window_2_V_17_reg_2859_pp0_iter3_reg),
    .din3(pool_window_3_V_17_reg_2865_pp0_iter3_reg),
    .din4(pool_window_4_V_17_reg_2871_pp0_iter3_reg),
    .din5(pool_window_5_V_17_reg_2877_pp0_iter3_reg),
    .din6(pool_window_6_V_17_reg_2883_pp0_iter3_reg),
    .din7(pool_window_7_V_17_reg_2889_pp0_iter3_reg),
    .din8(pool_window_8_V_17_reg_3008),
    .din9(select_ln40_17_reg_3013),
    .dout(tmp_20_fu_2161_p11)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln216_fu_1142_p2 == 1'd1) & (icmp_ln212_fu_1098_p2 == 1'd1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_225 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_225 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_675)) begin
        if ((1'b1 == ap_condition_680)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225 <= select_ln222_reg_2585;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_225;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        indvar_flatten_reg_214 <= add_ln241_reg_2203;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_214 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_662)) begin
        if ((icmp_ln212_fu_1098_p2 == 1'd1)) begin
            pX_2 <= 32'd0;
        end else if ((icmp_ln212_fu_1098_p2 == 1'd0)) begin
            pX_2 <= add_ln225_fu_1104_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1828)) begin
        if ((icmp_ln216_fu_1142_p2 == 1'd1)) begin
            pY_2 <= 32'd0;
        end else if ((icmp_ln216_fu_1142_p2 == 1'd0)) begin
            pY_2 <= add_ln220_fu_1148_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_1833)) begin
            sX_2 <= select_ln227_reg_2576;
        end else if ((1'b1 == ap_condition_401)) begin
            sX_2 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        DataOut_V_68_reg_2232 <= line_buffer_Array_V_3_0_0_q0;
        DataOut_V_70_reg_2239 <= line_buffer_Array_V_3_0_1_q0;
        DataOut_V_72_reg_2246 <= line_buffer_Array_V_3_0_2_q0;
        DataOut_V_74_reg_2253 <= line_buffer_Array_V_3_0_3_q0;
        tmp_data_0_V_3_reg_2208 <= data_V_data_0_V_dout;
        tmp_data_1_V_3_reg_2214 <= data_V_data_1_V_dout;
        tmp_data_2_V_3_reg_2220 <= data_V_data_2_V_dout;
        tmp_data_3_V_2_reg_2226 <= data_V_data_3_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln241_reg_2203 <= add_ln241_fu_242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        and_ln191_6_reg_2260 <= and_ln191_6_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln191_6_reg_2260_pp0_iter2_reg <= and_ln191_6_reg_2260;
        and_ln191_6_reg_2260_pp0_iter3_reg <= and_ln191_6_reg_2260_pp0_iter2_reg;
        and_ln191_6_reg_2260_pp0_iter4_reg <= and_ln191_6_reg_2260_pp0_iter3_reg;
        icmp_ln212_reg_2572 <= icmp_ln212_fu_1098_p2;
        icmp_ln241_reg_2199 <= icmp_ln241_fu_236_p2;
        icmp_ln241_reg_2199_pp0_iter1_reg <= icmp_ln241_reg_2199;
        pool_window_0_V_15_reg_2705_pp0_iter3_reg <= pool_window_0_V_15_reg_2705;
        pool_window_0_V_16_reg_2776_pp0_iter3_reg <= pool_window_0_V_16_reg_2776;
        pool_window_0_V_17_reg_2847_pp0_iter3_reg <= pool_window_0_V_17_reg_2847;
        pool_window_0_V_reg_2634_pp0_iter3_reg <= pool_window_0_V_reg_2634;
        pool_window_1_V_15_reg_2711_pp0_iter3_reg <= pool_window_1_V_15_reg_2711;
        pool_window_1_V_16_reg_2782_pp0_iter3_reg <= pool_window_1_V_16_reg_2782;
        pool_window_1_V_17_reg_2853_pp0_iter3_reg <= pool_window_1_V_17_reg_2853;
        pool_window_1_V_reg_2640_pp0_iter3_reg <= pool_window_1_V_reg_2640;
        pool_window_2_V_15_reg_2717_pp0_iter3_reg <= pool_window_2_V_15_reg_2717;
        pool_window_2_V_16_reg_2788_pp0_iter3_reg <= pool_window_2_V_16_reg_2788;
        pool_window_2_V_17_reg_2859_pp0_iter3_reg <= pool_window_2_V_17_reg_2859;
        pool_window_2_V_reg_2646_pp0_iter3_reg <= pool_window_2_V_reg_2646;
        pool_window_3_V_15_reg_2723_pp0_iter3_reg <= pool_window_3_V_15_reg_2723;
        pool_window_3_V_16_reg_2794_pp0_iter3_reg <= pool_window_3_V_16_reg_2794;
        pool_window_3_V_17_reg_2865_pp0_iter3_reg <= pool_window_3_V_17_reg_2865;
        pool_window_3_V_reg_2652_pp0_iter3_reg <= pool_window_3_V_reg_2652;
        pool_window_4_V_15_reg_2729_pp0_iter3_reg <= pool_window_4_V_15_reg_2729;
        pool_window_4_V_16_reg_2800_pp0_iter3_reg <= pool_window_4_V_16_reg_2800;
        pool_window_4_V_17_reg_2871_pp0_iter3_reg <= pool_window_4_V_17_reg_2871;
        pool_window_4_V_reg_2658_pp0_iter3_reg <= pool_window_4_V_reg_2658;
        pool_window_5_V_15_reg_2735_pp0_iter3_reg <= pool_window_5_V_15_reg_2735;
        pool_window_5_V_16_reg_2806_pp0_iter3_reg <= pool_window_5_V_16_reg_2806;
        pool_window_5_V_17_reg_2877_pp0_iter3_reg <= pool_window_5_V_17_reg_2877;
        pool_window_5_V_reg_2664_pp0_iter3_reg <= pool_window_5_V_reg_2664;
        pool_window_6_V_15_reg_2741_pp0_iter3_reg <= pool_window_6_V_15_reg_2741;
        pool_window_6_V_16_reg_2812_pp0_iter3_reg <= pool_window_6_V_16_reg_2812;
        pool_window_6_V_17_reg_2883_pp0_iter3_reg <= pool_window_6_V_17_reg_2883;
        pool_window_6_V_reg_2670_pp0_iter3_reg <= pool_window_6_V_reg_2670;
        pool_window_7_V_15_reg_2747_pp0_iter3_reg <= pool_window_7_V_15_reg_2747;
        pool_window_7_V_16_reg_2818_pp0_iter3_reg <= pool_window_7_V_16_reg_2818;
        pool_window_7_V_17_reg_2889_pp0_iter3_reg <= pool_window_7_V_17_reg_2889;
        pool_window_7_V_reg_2676_pp0_iter3_reg <= pool_window_7_V_reg_2676;
        trunc_ln708_147_reg_2312_pp0_iter2_reg <= trunc_ln708_147_reg_2312;
        trunc_ln708_147_reg_2312_pp0_iter3_reg <= trunc_ln708_147_reg_2312_pp0_iter2_reg;
        trunc_ln708_156_reg_2389_pp0_iter2_reg <= trunc_ln708_156_reg_2389;
        trunc_ln708_156_reg_2389_pp0_iter3_reg <= trunc_ln708_156_reg_2389_pp0_iter2_reg;
        trunc_ln708_165_reg_2466_pp0_iter2_reg <= trunc_ln708_165_reg_2466;
        trunc_ln708_165_reg_2466_pp0_iter3_reg <= trunc_ln708_165_reg_2466_pp0_iter2_reg;
        trunc_ln708_174_reg_2543_pp0_iter2_reg <= trunc_ln708_174_reg_2543;
        trunc_ln708_174_reg_2543_pp0_iter3_reg <= trunc_ln708_174_reg_2543_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln191_6_fu_644_p2))) begin
        icmp_ln1496_120_reg_2323 <= icmp_ln1496_120_fu_744_p2;
        icmp_ln1496_122_reg_2329 <= icmp_ln1496_122_fu_750_p2;
        icmp_ln1496_123_reg_2335 <= icmp_ln1496_123_fu_756_p2;
        icmp_ln1496_127_reg_2400 <= icmp_ln1496_127_fu_856_p2;
        icmp_ln1496_129_reg_2406 <= icmp_ln1496_129_fu_862_p2;
        icmp_ln1496_130_reg_2412 <= icmp_ln1496_130_fu_868_p2;
        icmp_ln1496_134_reg_2477 <= icmp_ln1496_134_fu_968_p2;
        icmp_ln1496_136_reg_2483 <= icmp_ln1496_136_fu_974_p2;
        icmp_ln1496_137_reg_2489 <= icmp_ln1496_137_fu_980_p2;
        icmp_ln1496_141_reg_2554 <= icmp_ln1496_141_fu_1080_p2;
        icmp_ln1496_143_reg_2560 <= icmp_ln1496_143_fu_1086_p2;
        icmp_ln1496_144_reg_2566 <= icmp_ln1496_144_fu_1092_p2;
        icmp_ln1496_1_reg_2394 <= icmp_ln1496_1_fu_850_p2;
        icmp_ln1496_2_reg_2471 <= icmp_ln1496_2_fu_962_p2;
        icmp_ln1496_3_reg_2548 <= icmp_ln1496_3_fu_1074_p2;
        icmp_ln1496_reg_2317 <= icmp_ln1496_fu_738_p2;
        trunc_ln708_141_reg_2276 <= {{line_buffer_Array_V_3_1_0_q0[19:3]}};
        trunc_ln708_142_reg_2282 <= {{kernel_data_V_3_16[19:3]}};
        trunc_ln708_143_reg_2288 <= {{kernel_data_V_3_20[19:3]}};
        trunc_ln708_144_reg_2294 <= {{DataOut_V_68_reg_2232[19:3]}};
        trunc_ln708_145_reg_2300 <= {{kernel_data_V_3_28[19:3]}};
        trunc_ln708_146_reg_2306 <= {{kernel_data_V_3_32[19:3]}};
        trunc_ln708_147_reg_2312 <= {{tmp_data_0_V_3_reg_2208[19:3]}};
        trunc_ln708_148_reg_2341 <= {{kernel_data_V_3_5[19:3]}};
        trunc_ln708_149_reg_2347 <= {{kernel_data_V_3_9[19:3]}};
        trunc_ln708_150_reg_2353 <= {{line_buffer_Array_V_3_1_1_q0[19:3]}};
        trunc_ln708_151_reg_2359 <= {{kernel_data_V_3_17[19:3]}};
        trunc_ln708_152_reg_2365 <= {{kernel_data_V_3_21[19:3]}};
        trunc_ln708_153_reg_2371 <= {{DataOut_V_70_reg_2239[19:3]}};
        trunc_ln708_154_reg_2377 <= {{kernel_data_V_3_29[19:3]}};
        trunc_ln708_155_reg_2383 <= {{kernel_data_V_3_33[19:3]}};
        trunc_ln708_156_reg_2389 <= {{tmp_data_1_V_3_reg_2214[19:3]}};
        trunc_ln708_157_reg_2418 <= {{kernel_data_V_3_6[19:3]}};
        trunc_ln708_158_reg_2424 <= {{kernel_data_V_3_10[19:3]}};
        trunc_ln708_159_reg_2430 <= {{line_buffer_Array_V_3_1_2_q0[19:3]}};
        trunc_ln708_160_reg_2436 <= {{kernel_data_V_3_18[19:3]}};
        trunc_ln708_161_reg_2442 <= {{kernel_data_V_3_22[19:3]}};
        trunc_ln708_162_reg_2448 <= {{DataOut_V_72_reg_2246[19:3]}};
        trunc_ln708_163_reg_2454 <= {{kernel_data_V_3_30[19:3]}};
        trunc_ln708_164_reg_2460 <= {{kernel_data_V_3_34[19:3]}};
        trunc_ln708_165_reg_2466 <= {{tmp_data_2_V_3_reg_2220[19:3]}};
        trunc_ln708_166_reg_2495 <= {{kernel_data_V_3_7[19:3]}};
        trunc_ln708_167_reg_2501 <= {{kernel_data_V_3_11[19:3]}};
        trunc_ln708_168_reg_2507 <= {{line_buffer_Array_V_3_1_3_q0[19:3]}};
        trunc_ln708_169_reg_2513 <= {{kernel_data_V_3_19[19:3]}};
        trunc_ln708_170_reg_2519 <= {{kernel_data_V_3_23[19:3]}};
        trunc_ln708_171_reg_2525 <= {{DataOut_V_74_reg_2253[19:3]}};
        trunc_ln708_172_reg_2531 <= {{kernel_data_V_3_31[19:3]}};
        trunc_ln708_173_reg_2537 <= {{kernel_data_V_3_35[19:3]}};
        trunc_ln708_174_reg_2543 <= {{tmp_data_3_V_2_reg_2226[19:3]}};
        trunc_ln708_s_reg_2270 <= {{kernel_data_V_3_8[19:3]}};
        trunc_ln_reg_2264 <= {{kernel_data_V_3_4[19:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260))) begin
        icmp_ln1496_124_reg_2596 <= icmp_ln1496_124_fu_1224_p2;
        icmp_ln1496_131_reg_2607 <= icmp_ln1496_131_fu_1274_p2;
        icmp_ln1496_138_reg_2618 <= icmp_ln1496_138_fu_1324_p2;
        icmp_ln1496_145_reg_2629 <= icmp_ln1496_145_fu_1374_p2;
        select_ln65_161_reg_2590 <= select_ln65_161_fu_1206_p3;
        select_ln65_171_reg_2601 <= select_ln65_171_fu_1256_p3;
        select_ln65_181_reg_2612 <= select_ln65_181_fu_1306_p3;
        select_ln65_191_reg_2623 <= select_ln65_191_fu_1356_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_fu_1098_p2 == 1'd1))) begin
        icmp_ln216_reg_2581 <= icmp_ln216_fu_1142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        kernel_data_V_3_10 <= line_buffer_Array_V_3_1_2_q0;
        kernel_data_V_3_11 <= line_buffer_Array_V_3_1_3_q0;
        kernel_data_V_3_16 <= kernel_data_V_3_20;
        kernel_data_V_3_17 <= kernel_data_V_3_21;
        kernel_data_V_3_18 <= kernel_data_V_3_22;
        kernel_data_V_3_19 <= kernel_data_V_3_23;
        kernel_data_V_3_20 <= DataOut_V_68_reg_2232;
        kernel_data_V_3_21 <= DataOut_V_70_reg_2239;
        kernel_data_V_3_22 <= DataOut_V_72_reg_2246;
        kernel_data_V_3_23 <= DataOut_V_74_reg_2253;
        kernel_data_V_3_28 <= kernel_data_V_3_32;
        kernel_data_V_3_29 <= kernel_data_V_3_33;
        kernel_data_V_3_30 <= kernel_data_V_3_34;
        kernel_data_V_3_31 <= kernel_data_V_3_35;
        kernel_data_V_3_32 <= tmp_data_0_V_3_reg_2208;
        kernel_data_V_3_33 <= tmp_data_1_V_3_reg_2214;
        kernel_data_V_3_34 <= tmp_data_2_V_3_reg_2220;
        kernel_data_V_3_35 <= tmp_data_3_V_2_reg_2226;
        kernel_data_V_3_4 <= kernel_data_V_3_8;
        kernel_data_V_3_5 <= kernel_data_V_3_9;
        kernel_data_V_3_6 <= kernel_data_V_3_10;
        kernel_data_V_3_7 <= kernel_data_V_3_11;
        kernel_data_V_3_8 <= line_buffer_Array_V_3_1_0_q0;
        kernel_data_V_3_9 <= line_buffer_Array_V_3_1_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln191_6_reg_2260_pp0_iter2_reg))) begin
        phi_ln65_45_reg_2943 <= phi_ln65_45_fu_1962_p18;
        phi_ln65_48_reg_2953 <= phi_ln65_48_fu_1987_p18;
        phi_ln65_51_reg_2963 <= phi_ln65_51_fu_2012_p18;
        phi_ln65_54_reg_2973 <= phi_ln65_54_fu_2037_p18;
        zext_ln65_48_reg_2938[2 : 0] <= zext_ln65_48_fu_1959_p1[2 : 0];
        zext_ln65_51_reg_2948[2 : 0] <= zext_ln65_51_fu_1984_p1[2 : 0];
        zext_ln65_54_reg_2958[2 : 0] <= zext_ln65_54_fu_2009_p1[2 : 0];
        zext_ln65_57_reg_2968[2 : 0] <= zext_ln65_57_fu_2034_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln191_6_reg_2260))) begin
        phi_ln65_46_reg_2761 <= phi_ln65_46_fu_1540_p18;
        phi_ln65_47_reg_2771 <= phi_ln65_47_fu_1603_p18;
        phi_ln65_49_reg_2832 <= phi_ln65_49_fu_1668_p18;
        phi_ln65_50_reg_2842 <= phi_ln65_50_fu_1731_p18;
        phi_ln65_52_reg_2903 <= phi_ln65_52_fu_1796_p18;
        phi_ln65_53_reg_2913 <= phi_ln65_53_fu_1859_p18;
        phi_ln65_s_reg_2700 <= phi_ln65_s_fu_1475_p18;
        phi_ln_reg_2690 <= phi_ln_fu_1412_p18;
        pool_window_0_V_15_reg_2705 <= pool_window_0_V_15_fu_1513_p1;
        pool_window_0_V_16_reg_2776 <= pool_window_0_V_16_fu_1641_p1;
        pool_window_0_V_17_reg_2847 <= pool_window_0_V_17_fu_1769_p1;
        pool_window_0_V_reg_2634 <= pool_window_0_V_fu_1385_p1;
        pool_window_1_V_15_reg_2711 <= pool_window_1_V_15_fu_1516_p1;
        pool_window_1_V_16_reg_2782 <= pool_window_1_V_16_fu_1644_p1;
        pool_window_1_V_17_reg_2853 <= pool_window_1_V_17_fu_1772_p1;
        pool_window_1_V_reg_2640 <= pool_window_1_V_fu_1388_p1;
        pool_window_2_V_15_reg_2717 <= pool_window_2_V_15_fu_1519_p1;
        pool_window_2_V_16_reg_2788 <= pool_window_2_V_16_fu_1647_p1;
        pool_window_2_V_17_reg_2859 <= pool_window_2_V_17_fu_1775_p1;
        pool_window_2_V_reg_2646 <= pool_window_2_V_fu_1391_p1;
        pool_window_3_V_15_reg_2723 <= pool_window_3_V_15_fu_1522_p1;
        pool_window_3_V_16_reg_2794 <= pool_window_3_V_16_fu_1650_p1;
        pool_window_3_V_17_reg_2865 <= pool_window_3_V_17_fu_1778_p1;
        pool_window_3_V_reg_2652 <= pool_window_3_V_fu_1394_p1;
        pool_window_4_V_15_reg_2729 <= pool_window_4_V_15_fu_1525_p1;
        pool_window_4_V_16_reg_2800 <= pool_window_4_V_16_fu_1653_p1;
        pool_window_4_V_17_reg_2871 <= pool_window_4_V_17_fu_1781_p1;
        pool_window_4_V_reg_2658 <= pool_window_4_V_fu_1397_p1;
        pool_window_5_V_15_reg_2735 <= pool_window_5_V_15_fu_1528_p1;
        pool_window_5_V_16_reg_2806 <= pool_window_5_V_16_fu_1656_p1;
        pool_window_5_V_17_reg_2877 <= pool_window_5_V_17_fu_1784_p1;
        pool_window_5_V_reg_2664 <= pool_window_5_V_fu_1400_p1;
        pool_window_6_V_15_reg_2741 <= pool_window_6_V_15_fu_1531_p1;
        pool_window_6_V_16_reg_2812 <= pool_window_6_V_16_fu_1659_p1;
        pool_window_6_V_17_reg_2883 <= pool_window_6_V_17_fu_1787_p1;
        pool_window_6_V_reg_2670 <= pool_window_6_V_fu_1403_p1;
        pool_window_7_V_15_reg_2747 <= pool_window_7_V_15_fu_1534_p1;
        pool_window_7_V_16_reg_2818 <= pool_window_7_V_16_fu_1662_p1;
        pool_window_7_V_17_reg_2889 <= pool_window_7_V_17_fu_1790_p1;
        pool_window_7_V_reg_2676 <= pool_window_7_V_fu_1406_p1;
        select_ln65_166_reg_2695[1 : 0] <= select_ln65_166_fu_1464_p3[1 : 0];
        select_ln65_176_reg_2766[1 : 0] <= select_ln65_176_fu_1592_p3[1 : 0];
        select_ln65_186_reg_2837[1 : 0] <= select_ln65_186_fu_1720_p3[1 : 0];
        select_ln65_196_reg_2908[1 : 0] <= select_ln65_196_fu_1848_p3[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter3_reg))) begin
        pool_window_8_V_15_reg_2988 <= pool_window_8_V_15_fu_2074_p1;
        pool_window_8_V_16_reg_2998 <= pool_window_8_V_16_fu_2089_p1;
        pool_window_8_V_17_reg_3008 <= pool_window_8_V_17_fu_2104_p1;
        pool_window_8_V_reg_2978 <= pool_window_8_V_fu_2059_p1;
        select_ln40_15_reg_2993 <= select_ln40_15_fu_2082_p3;
        select_ln40_16_reg_3003 <= select_ln40_16_fu_2097_p3;
        select_ln40_17_reg_3013 <= select_ln40_17_fu_2112_p3;
        select_ln40_reg_2983 <= select_ln40_fu_2067_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_2572 == 1'd1))) begin
        sY_2 <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_fu_1098_p2 == 1'd1) & (icmp_ln216_fu_1142_p2 == 1'd0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        select_ln222_reg_2585 <= select_ln222_fu_1166_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_fu_1098_p2 == 1'd0))) begin
        select_ln227_reg_2576 <= select_ln227_fu_1122_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter2_reg))) begin
        select_ln65_167_reg_2918 <= select_ln65_167_fu_1910_p3;
        select_ln65_177_reg_2923 <= select_ln65_177_fu_1924_p3;
        select_ln65_187_reg_2928 <= select_ln65_187_fu_1938_p3;
        select_ln65_197_reg_2933 <= select_ln65_197_fu_1952_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln191_6_reg_2260_pp0_iter3_reg))) begin
        tmp_16_reg_3018 <= tmp_16_fu_2119_p11;
        tmp_17_reg_3023 <= tmp_17_fu_2133_p11;
        tmp_19_reg_3028 <= tmp_19_fu_2147_p11;
        tmp_20_reg_3033 <= tmp_20_fu_2161_p11;
    end
end

always @ (*) begin
    if ((icmp_ln241_fu_236_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_218_p4 = add_ln241_reg_2203;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_218_p4 = indvar_flatten_reg_214;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_reg_2572 == 1'd1))) begin
        ap_sig_allocacmp_sY_2_load = ap_phi_reg_pp0_iter2_storemerge_i_i_reg_225;
    end else begin
        ap_sig_allocacmp_sY_2_load = sY_2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_0_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_0_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_0_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_0_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_0_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_0_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_0_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_0_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_1_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_1_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_1_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_1_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_1_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_1_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_1_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln241_reg_2199 == 1'd0))) begin
        line_buffer_Array_V_3_1_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage1))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage1))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln241_fu_236_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln241_fu_236_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln220_fu_1148_p2 = (pY_2 + 32'd1);

assign add_ln222_fu_1160_p2 = (ap_sig_allocacmp_sY_2_load + 32'd1);

assign add_ln225_fu_1104_p2 = (pX_2 + 32'd1);

assign add_ln227_fu_1116_p2 = (sX_2 + 32'd1);

assign add_ln241_fu_242_p2 = (ap_phi_mux_indvar_flatten_phi_fu_218_p4 + 14'd1);

assign and_ln191_5_fu_638_p2 = (icmp_ln191_9_fu_626_p2 & icmp_ln191_8_fu_606_p2);

assign and_ln191_6_fu_644_p2 = (and_ln191_fu_632_p2 & and_ln191_5_fu_638_p2);

assign and_ln191_fu_632_p2 = (icmp_ln191_fu_576_p2 & icmp_ln191_7_fu_586_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((io_acc_block_signal_op318 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg)) | ((io_acc_block_signal_op27 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln241_reg_2199 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((io_acc_block_signal_op318 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg)) | ((io_acc_block_signal_op27 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln241_reg_2199 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((io_acc_block_signal_op318 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg)) | ((io_acc_block_signal_op27 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln241_reg_2199 == 1'd0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage1_iter4 = ((io_acc_block_signal_op318 == 1'b0) & (1'd1 == and_ln191_6_reg_2260_pp0_iter4_reg));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((io_acc_block_signal_op27 == 1'b0) & (icmp_ln241_reg_2199 == 1'd0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1828 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_fu_1098_p2 == 1'd1) & (icmp_ln241_reg_2199 == 1'd0));
end

always @ (*) begin
    ap_condition_1833 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln212_reg_2572 == 1'd0));
end

always @ (*) begin
    ap_condition_401 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln212_fu_1098_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_662 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_675 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_680 = ((icmp_ln212_reg_2572 == 1'd1) & (icmp_ln216_reg_2581 == 1'd0) & (icmp_ln241_reg_2199_pp0_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_225 = 'bx;

assign ap_ready = internal_ap_ready;

assign icmp_ln1496_120_fu_744_p2 = (($signed(trunc_ln708_141_fu_670_p4) < $signed(trunc_ln708_142_fu_680_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_121_fu_1200_p2 = (($signed(select_ln65_fu_1183_p3) < $signed(select_ln65_160_fu_1195_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_122_fu_750_p2 = (($signed(trunc_ln708_143_fu_690_p4) < $signed(trunc_ln708_144_fu_700_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_123_fu_756_p2 = (($signed(trunc_ln708_145_fu_709_p4) < $signed(trunc_ln708_146_fu_719_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_124_fu_1224_p2 = (($signed(select_ln65_163_fu_1214_p3) < $signed(select_ln65_165_fu_1219_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_125_fu_1906_p2 = (($signed(phi_ln_reg_2690) < $signed(phi_ln65_s_reg_2700)) ? 1'b1 : 1'b0);

assign icmp_ln1496_126_fu_2062_p2 = (($signed(phi_ln65_45_reg_2943) < $signed(pool_window_8_V_fu_2059_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_127_fu_856_p2 = (($signed(trunc_ln708_150_fu_782_p4) < $signed(trunc_ln708_151_fu_792_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_128_fu_1250_p2 = (($signed(select_ln65_168_fu_1233_p3) < $signed(select_ln65_170_fu_1245_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_129_fu_862_p2 = (($signed(trunc_ln708_152_fu_802_p4) < $signed(trunc_ln708_153_fu_812_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_130_fu_868_p2 = (($signed(trunc_ln708_154_fu_821_p4) < $signed(trunc_ln708_155_fu_831_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_131_fu_1274_p2 = (($signed(select_ln65_173_fu_1264_p3) < $signed(select_ln65_175_fu_1269_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_132_fu_1920_p2 = (($signed(phi_ln65_46_reg_2761) < $signed(phi_ln65_47_reg_2771)) ? 1'b1 : 1'b0);

assign icmp_ln1496_133_fu_2077_p2 = (($signed(phi_ln65_48_reg_2953) < $signed(pool_window_8_V_15_fu_2074_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_134_fu_968_p2 = (($signed(trunc_ln708_159_fu_894_p4) < $signed(trunc_ln708_160_fu_904_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_135_fu_1300_p2 = (($signed(select_ln65_178_fu_1283_p3) < $signed(select_ln65_180_fu_1295_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_136_fu_974_p2 = (($signed(trunc_ln708_161_fu_914_p4) < $signed(trunc_ln708_162_fu_924_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_137_fu_980_p2 = (($signed(trunc_ln708_163_fu_933_p4) < $signed(trunc_ln708_164_fu_943_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_138_fu_1324_p2 = (($signed(select_ln65_183_fu_1314_p3) < $signed(select_ln65_185_fu_1319_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_139_fu_1934_p2 = (($signed(phi_ln65_49_reg_2832) < $signed(phi_ln65_50_reg_2842)) ? 1'b1 : 1'b0);

assign icmp_ln1496_140_fu_2092_p2 = (($signed(phi_ln65_51_reg_2963) < $signed(pool_window_8_V_16_fu_2089_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_141_fu_1080_p2 = (($signed(trunc_ln708_168_fu_1006_p4) < $signed(trunc_ln708_169_fu_1016_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_142_fu_1350_p2 = (($signed(select_ln65_188_fu_1333_p3) < $signed(select_ln65_190_fu_1345_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_143_fu_1086_p2 = (($signed(trunc_ln708_170_fu_1026_p4) < $signed(trunc_ln708_171_fu_1036_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_144_fu_1092_p2 = (($signed(trunc_ln708_172_fu_1045_p4) < $signed(trunc_ln708_173_fu_1055_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_145_fu_1374_p2 = (($signed(select_ln65_193_fu_1364_p3) < $signed(select_ln65_195_fu_1369_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_146_fu_1948_p2 = (($signed(phi_ln65_52_reg_2903) < $signed(phi_ln65_53_reg_2913)) ? 1'b1 : 1'b0);

assign icmp_ln1496_147_fu_2107_p2 = (($signed(phi_ln65_54_reg_2973) < $signed(pool_window_8_V_17_fu_2104_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_1_fu_850_p2 = (($signed(trunc_ln708_148_fu_762_p4) < $signed(trunc_ln708_149_fu_772_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_962_p2 = (($signed(trunc_ln708_157_fu_874_p4) < $signed(trunc_ln708_158_fu_884_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_1074_p2 = (($signed(trunc_ln708_166_fu_986_p4) < $signed(trunc_ln708_167_fu_996_p4)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_738_p2 = (($signed(trunc_ln_fu_650_p4) < $signed(trunc_ln708_s_fu_660_p4)) ? 1'b1 : 1'b0);

assign icmp_ln191_7_fu_586_p2 = ((ap_sig_allocacmp_sY_2_load == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln191_8_fu_606_p2 = (($signed(tmp_fu_596_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln191_9_fu_626_p2 = (($signed(tmp_18_fu_616_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_576_p2 = ((sX_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln212_fu_1098_p2 = ((pX_2 == 32'd125) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_1142_p2 = ((pY_2 == 32'd125) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_236_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_218_p4 == 14'd15876) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op27 = (data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign io_acc_block_signal_op318 = (res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign phi_ln65_45_fu_1962_p17 = select_ln65_167_reg_2918;

assign phi_ln65_46_fu_1540_p1 = trunc_ln708_148_reg_2341;

assign phi_ln65_46_fu_1540_p17 = select_ln65_171_reg_2601;

assign phi_ln65_46_fu_1540_p2 = trunc_ln708_149_reg_2347;

assign phi_ln65_46_fu_1540_p3 = trunc_ln708_150_reg_2353;

assign phi_ln65_47_fu_1603_p17 = select_ln65_176_fu_1592_p3;

assign phi_ln65_47_fu_1603_p5 = trunc_ln708_152_reg_2365;

assign phi_ln65_47_fu_1603_p6 = trunc_ln708_153_reg_2371;

assign phi_ln65_47_fu_1603_p7 = trunc_ln708_154_reg_2377;

assign phi_ln65_48_fu_1987_p17 = select_ln65_177_reg_2923;

assign phi_ln65_49_fu_1668_p1 = trunc_ln708_157_reg_2418;

assign phi_ln65_49_fu_1668_p17 = select_ln65_181_reg_2612;

assign phi_ln65_49_fu_1668_p2 = trunc_ln708_158_reg_2424;

assign phi_ln65_49_fu_1668_p3 = trunc_ln708_159_reg_2430;

assign phi_ln65_50_fu_1731_p17 = select_ln65_186_fu_1720_p3;

assign phi_ln65_50_fu_1731_p5 = trunc_ln708_161_reg_2442;

assign phi_ln65_50_fu_1731_p6 = trunc_ln708_162_reg_2448;

assign phi_ln65_50_fu_1731_p7 = trunc_ln708_163_reg_2454;

assign phi_ln65_51_fu_2012_p17 = select_ln65_187_reg_2928;

assign phi_ln65_52_fu_1796_p1 = trunc_ln708_166_reg_2495;

assign phi_ln65_52_fu_1796_p17 = select_ln65_191_reg_2623;

assign phi_ln65_52_fu_1796_p2 = trunc_ln708_167_reg_2501;

assign phi_ln65_52_fu_1796_p3 = trunc_ln708_168_reg_2507;

assign phi_ln65_53_fu_1859_p17 = select_ln65_196_fu_1848_p3;

assign phi_ln65_53_fu_1859_p5 = trunc_ln708_170_reg_2519;

assign phi_ln65_53_fu_1859_p6 = trunc_ln708_171_reg_2525;

assign phi_ln65_53_fu_1859_p7 = trunc_ln708_172_reg_2531;

assign phi_ln65_54_fu_2037_p17 = select_ln65_197_reg_2933;

assign phi_ln65_s_fu_1475_p17 = select_ln65_166_fu_1464_p3;

assign phi_ln65_s_fu_1475_p5 = trunc_ln708_143_reg_2288;

assign phi_ln65_s_fu_1475_p6 = trunc_ln708_144_reg_2294;

assign phi_ln65_s_fu_1475_p7 = trunc_ln708_145_reg_2300;

assign phi_ln_fu_1412_p1 = trunc_ln_reg_2264;

assign phi_ln_fu_1412_p17 = select_ln65_161_reg_2590;

assign phi_ln_fu_1412_p2 = trunc_ln708_s_reg_2270;

assign phi_ln_fu_1412_p3 = trunc_ln708_141_reg_2276;

assign pool_window_0_V_15_fu_1513_p1 = trunc_ln708_148_reg_2341;

assign pool_window_0_V_16_fu_1641_p1 = trunc_ln708_157_reg_2418;

assign pool_window_0_V_17_fu_1769_p1 = trunc_ln708_166_reg_2495;

assign pool_window_0_V_fu_1385_p1 = trunc_ln_reg_2264;

assign pool_window_1_V_15_fu_1516_p1 = trunc_ln708_149_reg_2347;

assign pool_window_1_V_16_fu_1644_p1 = trunc_ln708_158_reg_2424;

assign pool_window_1_V_17_fu_1772_p1 = trunc_ln708_167_reg_2501;

assign pool_window_1_V_fu_1388_p1 = trunc_ln708_s_reg_2270;

assign pool_window_2_V_15_fu_1519_p1 = trunc_ln708_150_reg_2353;

assign pool_window_2_V_16_fu_1647_p1 = trunc_ln708_159_reg_2430;

assign pool_window_2_V_17_fu_1775_p1 = trunc_ln708_168_reg_2507;

assign pool_window_2_V_fu_1391_p1 = trunc_ln708_141_reg_2276;

assign pool_window_3_V_15_fu_1522_p1 = trunc_ln708_151_reg_2359;

assign pool_window_3_V_16_fu_1650_p1 = trunc_ln708_160_reg_2436;

assign pool_window_3_V_17_fu_1778_p1 = trunc_ln708_169_reg_2513;

assign pool_window_3_V_fu_1394_p1 = trunc_ln708_142_reg_2282;

assign pool_window_4_V_15_fu_1525_p1 = trunc_ln708_152_reg_2365;

assign pool_window_4_V_16_fu_1653_p1 = trunc_ln708_161_reg_2442;

assign pool_window_4_V_17_fu_1781_p1 = trunc_ln708_170_reg_2519;

assign pool_window_4_V_fu_1397_p1 = trunc_ln708_143_reg_2288;

assign pool_window_5_V_15_fu_1528_p1 = trunc_ln708_153_reg_2371;

assign pool_window_5_V_16_fu_1656_p1 = trunc_ln708_162_reg_2448;

assign pool_window_5_V_17_fu_1784_p1 = trunc_ln708_171_reg_2525;

assign pool_window_5_V_fu_1400_p1 = trunc_ln708_144_reg_2294;

assign pool_window_6_V_15_fu_1531_p1 = trunc_ln708_154_reg_2377;

assign pool_window_6_V_16_fu_1659_p1 = trunc_ln708_163_reg_2454;

assign pool_window_6_V_17_fu_1787_p1 = trunc_ln708_172_reg_2531;

assign pool_window_6_V_fu_1403_p1 = trunc_ln708_145_reg_2300;

assign pool_window_7_V_15_fu_1534_p1 = trunc_ln708_155_reg_2383;

assign pool_window_7_V_16_fu_1662_p1 = trunc_ln708_164_reg_2460;

assign pool_window_7_V_17_fu_1790_p1 = trunc_ln708_173_reg_2537;

assign pool_window_7_V_fu_1406_p1 = trunc_ln708_146_reg_2306;

assign pool_window_8_V_15_fu_2074_p1 = $signed(trunc_ln708_156_reg_2389_pp0_iter3_reg);

assign pool_window_8_V_16_fu_2089_p1 = $signed(trunc_ln708_165_reg_2466_pp0_iter3_reg);

assign pool_window_8_V_17_fu_2104_p1 = $signed(trunc_ln708_174_reg_2543_pp0_iter3_reg);

assign pool_window_8_V_fu_2059_p1 = $signed(trunc_ln708_147_reg_2312_pp0_iter3_reg);

assign res_V_data_0_V_din = tmp_16_reg_3018 << 20'd3;

assign res_V_data_1_V_din = tmp_17_reg_3023 << 20'd3;

assign res_V_data_2_V_din = tmp_19_reg_3028 << 20'd3;

assign res_V_data_3_V_din = tmp_20_reg_3033 << 20'd3;

assign select_ln222_fu_1166_p3 = ((icmp_ln191_7_fu_586_p2[0:0] === 1'b1) ? 32'd0 : add_ln222_fu_1160_p2);

assign select_ln227_fu_1122_p3 = ((icmp_ln191_fu_576_p2[0:0] === 1'b1) ? 32'd0 : add_ln227_fu_1116_p2);

assign select_ln40_15_fu_2082_p3 = ((icmp_ln1496_133_fu_2077_p2[0:0] === 1'b1) ? 4'd8 : zext_ln65_51_reg_2948);

assign select_ln40_16_fu_2097_p3 = ((icmp_ln1496_140_fu_2092_p2[0:0] === 1'b1) ? 4'd8 : zext_ln65_54_reg_2958);

assign select_ln40_17_fu_2112_p3 = ((icmp_ln1496_147_fu_2107_p2[0:0] === 1'b1) ? 4'd8 : zext_ln65_57_reg_2968);

assign select_ln40_fu_2067_p3 = ((icmp_ln1496_126_fu_2062_p2[0:0] === 1'b1) ? 4'd8 : zext_ln65_48_reg_2938);

assign select_ln65_159_fu_1188_p3 = ((icmp_ln1496_120_reg_2323[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_160_fu_1195_p3 = ((icmp_ln1496_120_reg_2323[0:0] === 1'b1) ? trunc_ln708_142_reg_2282 : trunc_ln708_141_reg_2276);

assign select_ln65_161_fu_1206_p3 = ((icmp_ln1496_121_fu_1200_p2[0:0] === 1'b1) ? select_ln65_159_fu_1188_p3 : zext_ln65_fu_1180_p1);

assign select_ln65_162_fu_1450_p3 = ((icmp_ln1496_122_reg_2329[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_163_fu_1214_p3 = ((icmp_ln1496_122_reg_2329[0:0] === 1'b1) ? trunc_ln708_144_reg_2294 : trunc_ln708_143_reg_2288);

assign select_ln65_164_fu_1457_p3 = ((icmp_ln1496_123_reg_2335[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_165_fu_1219_p3 = ((icmp_ln1496_123_reg_2335[0:0] === 1'b1) ? trunc_ln708_146_reg_2306 : trunc_ln708_145_reg_2300);

assign select_ln65_166_fu_1464_p3 = ((icmp_ln1496_124_reg_2596[0:0] === 1'b1) ? select_ln65_164_fu_1457_p3 : select_ln65_162_fu_1450_p3);

assign select_ln65_167_fu_1910_p3 = ((icmp_ln1496_125_fu_1906_p2[0:0] === 1'b1) ? select_ln65_166_reg_2695 : zext_ln65_47_fu_1903_p1);

assign select_ln65_168_fu_1233_p3 = ((icmp_ln1496_1_reg_2394[0:0] === 1'b1) ? trunc_ln708_149_reg_2347 : trunc_ln708_148_reg_2341);

assign select_ln65_169_fu_1238_p3 = ((icmp_ln1496_127_reg_2400[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_170_fu_1245_p3 = ((icmp_ln1496_127_reg_2400[0:0] === 1'b1) ? trunc_ln708_151_reg_2359 : trunc_ln708_150_reg_2353);

assign select_ln65_171_fu_1256_p3 = ((icmp_ln1496_128_fu_1250_p2[0:0] === 1'b1) ? select_ln65_169_fu_1238_p3 : zext_ln65_49_fu_1230_p1);

assign select_ln65_172_fu_1578_p3 = ((icmp_ln1496_129_reg_2406[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_173_fu_1264_p3 = ((icmp_ln1496_129_reg_2406[0:0] === 1'b1) ? trunc_ln708_153_reg_2371 : trunc_ln708_152_reg_2365);

assign select_ln65_174_fu_1585_p3 = ((icmp_ln1496_130_reg_2412[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_175_fu_1269_p3 = ((icmp_ln1496_130_reg_2412[0:0] === 1'b1) ? trunc_ln708_155_reg_2383 : trunc_ln708_154_reg_2377);

assign select_ln65_176_fu_1592_p3 = ((icmp_ln1496_131_reg_2607[0:0] === 1'b1) ? select_ln65_174_fu_1585_p3 : select_ln65_172_fu_1578_p3);

assign select_ln65_177_fu_1924_p3 = ((icmp_ln1496_132_fu_1920_p2[0:0] === 1'b1) ? select_ln65_176_reg_2766 : zext_ln65_50_fu_1917_p1);

assign select_ln65_178_fu_1283_p3 = ((icmp_ln1496_2_reg_2471[0:0] === 1'b1) ? trunc_ln708_158_reg_2424 : trunc_ln708_157_reg_2418);

assign select_ln65_179_fu_1288_p3 = ((icmp_ln1496_134_reg_2477[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_180_fu_1295_p3 = ((icmp_ln1496_134_reg_2477[0:0] === 1'b1) ? trunc_ln708_160_reg_2436 : trunc_ln708_159_reg_2430);

assign select_ln65_181_fu_1306_p3 = ((icmp_ln1496_135_fu_1300_p2[0:0] === 1'b1) ? select_ln65_179_fu_1288_p3 : zext_ln65_52_fu_1280_p1);

assign select_ln65_182_fu_1706_p3 = ((icmp_ln1496_136_reg_2483[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_183_fu_1314_p3 = ((icmp_ln1496_136_reg_2483[0:0] === 1'b1) ? trunc_ln708_162_reg_2448 : trunc_ln708_161_reg_2442);

assign select_ln65_184_fu_1713_p3 = ((icmp_ln1496_137_reg_2489[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_185_fu_1319_p3 = ((icmp_ln1496_137_reg_2489[0:0] === 1'b1) ? trunc_ln708_164_reg_2460 : trunc_ln708_163_reg_2454);

assign select_ln65_186_fu_1720_p3 = ((icmp_ln1496_138_reg_2618[0:0] === 1'b1) ? select_ln65_184_fu_1713_p3 : select_ln65_182_fu_1706_p3);

assign select_ln65_187_fu_1938_p3 = ((icmp_ln1496_139_fu_1934_p2[0:0] === 1'b1) ? select_ln65_186_reg_2837 : zext_ln65_53_fu_1931_p1);

assign select_ln65_188_fu_1333_p3 = ((icmp_ln1496_3_reg_2548[0:0] === 1'b1) ? trunc_ln708_167_reg_2501 : trunc_ln708_166_reg_2495);

assign select_ln65_189_fu_1338_p3 = ((icmp_ln1496_141_reg_2554[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_190_fu_1345_p3 = ((icmp_ln1496_141_reg_2554[0:0] === 1'b1) ? trunc_ln708_169_reg_2513 : trunc_ln708_168_reg_2507);

assign select_ln65_191_fu_1356_p3 = ((icmp_ln1496_142_fu_1350_p2[0:0] === 1'b1) ? select_ln65_189_fu_1338_p3 : zext_ln65_55_fu_1330_p1);

assign select_ln65_192_fu_1834_p3 = ((icmp_ln1496_143_reg_2560[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_193_fu_1364_p3 = ((icmp_ln1496_143_reg_2560[0:0] === 1'b1) ? trunc_ln708_171_reg_2525 : trunc_ln708_170_reg_2519);

assign select_ln65_194_fu_1841_p3 = ((icmp_ln1496_144_reg_2566[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_195_fu_1369_p3 = ((icmp_ln1496_144_reg_2566[0:0] === 1'b1) ? trunc_ln708_173_reg_2537 : trunc_ln708_172_reg_2531);

assign select_ln65_196_fu_1848_p3 = ((icmp_ln1496_145_reg_2629[0:0] === 1'b1) ? select_ln65_194_fu_1841_p3 : select_ln65_192_fu_1834_p3);

assign select_ln65_197_fu_1952_p3 = ((icmp_ln1496_146_fu_1948_p2[0:0] === 1'b1) ? select_ln65_196_reg_2908 : zext_ln65_56_fu_1945_p1);

assign select_ln65_fu_1183_p3 = ((icmp_ln1496_reg_2317[0:0] === 1'b1) ? trunc_ln708_s_reg_2270 : trunc_ln_reg_2264);

assign start_out = real_start;

assign tmp_18_fu_616_p4 = {{pX_2[31:1]}};

assign tmp_fu_596_p4 = {{pY_2[31:1]}};

assign trunc_ln708_141_fu_670_p4 = {{line_buffer_Array_V_3_1_0_q0[19:3]}};

assign trunc_ln708_142_fu_680_p4 = {{kernel_data_V_3_16[19:3]}};

assign trunc_ln708_143_fu_690_p4 = {{kernel_data_V_3_20[19:3]}};

assign trunc_ln708_144_fu_700_p4 = {{DataOut_V_68_reg_2232[19:3]}};

assign trunc_ln708_145_fu_709_p4 = {{kernel_data_V_3_28[19:3]}};

assign trunc_ln708_146_fu_719_p4 = {{kernel_data_V_3_32[19:3]}};

assign trunc_ln708_148_fu_762_p4 = {{kernel_data_V_3_5[19:3]}};

assign trunc_ln708_149_fu_772_p4 = {{kernel_data_V_3_9[19:3]}};

assign trunc_ln708_150_fu_782_p4 = {{line_buffer_Array_V_3_1_1_q0[19:3]}};

assign trunc_ln708_151_fu_792_p4 = {{kernel_data_V_3_17[19:3]}};

assign trunc_ln708_152_fu_802_p4 = {{kernel_data_V_3_21[19:3]}};

assign trunc_ln708_153_fu_812_p4 = {{DataOut_V_70_reg_2239[19:3]}};

assign trunc_ln708_154_fu_821_p4 = {{kernel_data_V_3_29[19:3]}};

assign trunc_ln708_155_fu_831_p4 = {{kernel_data_V_3_33[19:3]}};

assign trunc_ln708_157_fu_874_p4 = {{kernel_data_V_3_6[19:3]}};

assign trunc_ln708_158_fu_884_p4 = {{kernel_data_V_3_10[19:3]}};

assign trunc_ln708_159_fu_894_p4 = {{line_buffer_Array_V_3_1_2_q0[19:3]}};

assign trunc_ln708_160_fu_904_p4 = {{kernel_data_V_3_18[19:3]}};

assign trunc_ln708_161_fu_914_p4 = {{kernel_data_V_3_22[19:3]}};

assign trunc_ln708_162_fu_924_p4 = {{DataOut_V_72_reg_2246[19:3]}};

assign trunc_ln708_163_fu_933_p4 = {{kernel_data_V_3_30[19:3]}};

assign trunc_ln708_164_fu_943_p4 = {{kernel_data_V_3_34[19:3]}};

assign trunc_ln708_166_fu_986_p4 = {{kernel_data_V_3_7[19:3]}};

assign trunc_ln708_167_fu_996_p4 = {{kernel_data_V_3_11[19:3]}};

assign trunc_ln708_168_fu_1006_p4 = {{line_buffer_Array_V_3_1_3_q0[19:3]}};

assign trunc_ln708_169_fu_1016_p4 = {{kernel_data_V_3_19[19:3]}};

assign trunc_ln708_170_fu_1026_p4 = {{kernel_data_V_3_23[19:3]}};

assign trunc_ln708_171_fu_1036_p4 = {{DataOut_V_74_reg_2253[19:3]}};

assign trunc_ln708_172_fu_1045_p4 = {{kernel_data_V_3_31[19:3]}};

assign trunc_ln708_173_fu_1055_p4 = {{kernel_data_V_3_35[19:3]}};

assign trunc_ln708_s_fu_660_p4 = {{kernel_data_V_3_8[19:3]}};

assign trunc_ln_fu_650_p4 = {{kernel_data_V_3_4[19:3]}};

assign zext_ln65_47_fu_1903_p1 = select_ln65_161_reg_2590;

assign zext_ln65_48_fu_1959_p1 = select_ln65_167_reg_2918;

assign zext_ln65_49_fu_1230_p1 = icmp_ln1496_1_reg_2394;

assign zext_ln65_50_fu_1917_p1 = select_ln65_171_reg_2601;

assign zext_ln65_51_fu_1984_p1 = select_ln65_177_reg_2923;

assign zext_ln65_52_fu_1280_p1 = icmp_ln1496_2_reg_2471;

assign zext_ln65_53_fu_1931_p1 = select_ln65_181_reg_2612;

assign zext_ln65_54_fu_2009_p1 = select_ln65_187_reg_2928;

assign zext_ln65_55_fu_1330_p1 = icmp_ln1496_3_reg_2548;

assign zext_ln65_56_fu_1945_p1 = select_ln65_191_reg_2623;

assign zext_ln65_57_fu_2034_p1 = select_ln65_197_reg_2933;

assign zext_ln65_fu_1180_p1 = icmp_ln1496_reg_2317;

always @ (posedge ap_clk) begin
    select_ln65_166_reg_2695[2] <= 1'b1;
    select_ln65_176_reg_2766[2] <= 1'b1;
    select_ln65_186_reg_2837[2] <= 1'b1;
    select_ln65_196_reg_2908[2] <= 1'b1;
    zext_ln65_48_reg_2938[3] <= 1'b0;
    zext_ln65_51_reg_2948[3] <= 1'b0;
    zext_ln65_54_reg_2958[3] <= 1'b0;
    zext_ln65_57_reg_2968[3] <= 1'b0;
end

endmodule //pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_20_8_5_3_0_4u_config6_s
