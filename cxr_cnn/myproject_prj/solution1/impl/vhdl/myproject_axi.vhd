-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi is
port (
    in_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC );
end;


architecture behav of myproject_axi is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject_axi,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.030040,HLS_SYN_LAT=229690,HLS_SYN_TPT=229379,HLS_SYN_MEM=278,HLS_SYN_DSP=22,HLS_SYN_FF=62880,HLS_SYN_LUT=55540,HLS_VERSION=2019_2}";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal Loop_1_proc421_U0_ap_start : STD_LOGIC;
    signal Loop_1_proc421_U0_ap_done : STD_LOGIC;
    signal Loop_1_proc421_U0_ap_continue : STD_LOGIC;
    signal Loop_1_proc421_U0_ap_idle : STD_LOGIC;
    signal Loop_1_proc421_U0_ap_ready : STD_LOGIC;
    signal Loop_1_proc421_U0_start_out : STD_LOGIC;
    signal Loop_1_proc421_U0_start_write : STD_LOGIC;
    signal Loop_1_proc421_U0_in_r_TREADY : STD_LOGIC;
    signal Loop_1_proc421_U0_in_local_V_data_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_1_proc421_U0_in_local_V_data_0_V_write : STD_LOGIC;
    signal Loop_1_proc421_U0_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_channel_done_is_last_0_i_loc_channel : STD_LOGIC;
    signal is_last_0_i_loc_channel_full_n : STD_LOGIC;
    signal myproject_U0_ap_start : STD_LOGIC;
    signal myproject_U0_start_out : STD_LOGIC;
    signal myproject_U0_start_write : STD_LOGIC;
    signal myproject_U0_input_33_V_data_V_read : STD_LOGIC;
    signal myproject_U0_layer28_out_V_data_0_V_din : STD_LOGIC_VECTOR (19 downto 0);
    signal myproject_U0_layer28_out_V_data_0_V_write : STD_LOGIC;
    signal myproject_U0_layer28_out_V_data_1_V_din : STD_LOGIC_VECTOR (19 downto 0);
    signal myproject_U0_layer28_out_V_data_1_V_write : STD_LOGIC;
    signal myproject_U0_layer28_out_V_data_2_V_din : STD_LOGIC_VECTOR (19 downto 0);
    signal myproject_U0_layer28_out_V_data_2_V_write : STD_LOGIC;
    signal myproject_U0_ap_done : STD_LOGIC;
    signal myproject_U0_ap_ready : STD_LOGIC;
    signal myproject_U0_ap_idle : STD_LOGIC;
    signal myproject_U0_ap_continue : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_ap_start : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_ap_done : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_ap_continue : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_ap_idle : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_ap_ready : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_out_local_V_data_0_V_read : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_out_local_V_data_1_V_read : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_out_local_V_data_2_V_read : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_tmp_data_V_0 : STD_LOGIC_VECTOR (19 downto 0);
    signal Block_myproject_axi_exit27_proc_U0_tmp_data_V_0_ap_vld : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_tmp_data_V_1 : STD_LOGIC_VECTOR (19 downto 0);
    signal Block_myproject_axi_exit27_proc_U0_tmp_data_V_1_ap_vld : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_tmp_data_V_2 : STD_LOGIC_VECTOR (19 downto 0);
    signal Block_myproject_axi_exit27_proc_U0_tmp_data_V_2_ap_vld : STD_LOGIC;
    signal ap_channel_done_tmp_data_V_2 : STD_LOGIC;
    signal tmp_data_V_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_tmp_data_V_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_tmp_data_V_2 : STD_LOGIC;
    signal ap_channel_done_tmp_data_V_1 : STD_LOGIC;
    signal tmp_data_V_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_tmp_data_V_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_tmp_data_V_1 : STD_LOGIC;
    signal ap_channel_done_tmp_data_V_0 : STD_LOGIC;
    signal tmp_data_V_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_tmp_data_V_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_tmp_data_V_0 : STD_LOGIC;
    signal Loop_2_proc_U0_ap_start : STD_LOGIC;
    signal Loop_2_proc_U0_ap_done : STD_LOGIC;
    signal Loop_2_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_2_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_2_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_2_proc_U0_out_r_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_2_proc_U0_out_r_TVALID : STD_LOGIC;
    signal Loop_2_proc_U0_out_r_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal in_local_V_data_0_V_full_n : STD_LOGIC;
    signal in_local_V_data_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal in_local_V_data_0_V_empty_n : STD_LOGIC;
    signal is_last_0_i_loc_channel_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal is_last_0_i_loc_channel_empty_n : STD_LOGIC;
    signal out_local_V_data_0_V_full_n : STD_LOGIC;
    signal out_local_V_data_0_V_dout : STD_LOGIC_VECTOR (19 downto 0);
    signal out_local_V_data_0_V_empty_n : STD_LOGIC;
    signal out_local_V_data_1_V_full_n : STD_LOGIC;
    signal out_local_V_data_1_V_dout : STD_LOGIC_VECTOR (19 downto 0);
    signal out_local_V_data_1_V_empty_n : STD_LOGIC;
    signal out_local_V_data_2_V_full_n : STD_LOGIC;
    signal out_local_V_data_2_V_dout : STD_LOGIC_VECTOR (19 downto 0);
    signal out_local_V_data_2_V_empty_n : STD_LOGIC;
    signal tmp_data_V_0_dout : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_data_V_0_empty_n : STD_LOGIC;
    signal tmp_data_V_1_dout : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_data_V_1_empty_n : STD_LOGIC;
    signal tmp_data_V_2_dout : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_data_V_2_empty_n : STD_LOGIC;
    signal start_for_myproject_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_myproject_U0_full_n : STD_LOGIC;
    signal start_for_myproject_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_myproject_U0_empty_n : STD_LOGIC;
    signal start_for_Block_myproject_axi_exit27_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_myproject_axi_exit27_proc_U0_full_n : STD_LOGIC;
    signal start_for_Block_myproject_axi_exit27_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_myproject_axi_exit27_proc_U0_empty_n : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_start_full_n : STD_LOGIC;
    signal Block_myproject_axi_exit27_proc_U0_start_write : STD_LOGIC;
    signal Loop_2_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_2_proc_U0_start_write : STD_LOGIC;

    component Loop_1_proc421 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in_r_TVALID : IN STD_LOGIC;
        in_r_TREADY : OUT STD_LOGIC;
        in_local_V_data_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_local_V_data_0_V_full_n : IN STD_LOGIC;
        in_local_V_data_0_V_write : OUT STD_LOGIC;
        in_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component myproject IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        input_33_V_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        input_33_V_data_V_empty_n : IN STD_LOGIC;
        input_33_V_data_V_read : OUT STD_LOGIC;
        layer28_out_V_data_0_V_din : OUT STD_LOGIC_VECTOR (19 downto 0);
        layer28_out_V_data_0_V_full_n : IN STD_LOGIC;
        layer28_out_V_data_0_V_write : OUT STD_LOGIC;
        layer28_out_V_data_1_V_din : OUT STD_LOGIC_VECTOR (19 downto 0);
        layer28_out_V_data_1_V_full_n : IN STD_LOGIC;
        layer28_out_V_data_1_V_write : OUT STD_LOGIC;
        layer28_out_V_data_2_V_din : OUT STD_LOGIC_VECTOR (19 downto 0);
        layer28_out_V_data_2_V_full_n : IN STD_LOGIC;
        layer28_out_V_data_2_V_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component Block_myproject_axi_exit27_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_local_V_data_0_V_dout : IN STD_LOGIC_VECTOR (19 downto 0);
        out_local_V_data_0_V_empty_n : IN STD_LOGIC;
        out_local_V_data_0_V_read : OUT STD_LOGIC;
        out_local_V_data_1_V_dout : IN STD_LOGIC_VECTOR (19 downto 0);
        out_local_V_data_1_V_empty_n : IN STD_LOGIC;
        out_local_V_data_1_V_read : OUT STD_LOGIC;
        out_local_V_data_2_V_dout : IN STD_LOGIC_VECTOR (19 downto 0);
        out_local_V_data_2_V_empty_n : IN STD_LOGIC;
        out_local_V_data_2_V_read : OUT STD_LOGIC;
        tmp_data_V_0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        tmp_data_V_0_ap_vld : OUT STD_LOGIC;
        tmp_data_V_1 : OUT STD_LOGIC_VECTOR (19 downto 0);
        tmp_data_V_1_ap_vld : OUT STD_LOGIC;
        tmp_data_V_2 : OUT STD_LOGIC_VECTOR (19 downto 0);
        tmp_data_V_2_ap_vld : OUT STD_LOGIC );
    end component;


    component Loop_2_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_r_TVALID : OUT STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_read : IN STD_LOGIC_VECTOR (0 downto 0);
        tmp_data_V_0 : IN STD_LOGIC_VECTOR (19 downto 0);
        tmp_data_V_1 : IN STD_LOGIC_VECTOR (19 downto 0);
        tmp_data_V_2 : IN STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component fifo_w8_d16384_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w20_d1_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (19 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (19 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w20_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (19 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (19 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_myproject_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_myproject_axi_exit27_proc_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Loop_1_proc421_U0 : component Loop_1_proc421
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_1_proc421_U0_ap_start,
        start_full_n => start_for_myproject_U0_full_n,
        ap_done => Loop_1_proc421_U0_ap_done,
        ap_continue => Loop_1_proc421_U0_ap_continue,
        ap_idle => Loop_1_proc421_U0_ap_idle,
        ap_ready => Loop_1_proc421_U0_ap_ready,
        start_out => Loop_1_proc421_U0_start_out,
        start_write => Loop_1_proc421_U0_start_write,
        in_r_TLAST => in_r_TLAST,
        in_r_TVALID => in_r_TVALID,
        in_r_TREADY => Loop_1_proc421_U0_in_r_TREADY,
        in_local_V_data_0_V_din => Loop_1_proc421_U0_in_local_V_data_0_V_din,
        in_local_V_data_0_V_full_n => in_local_V_data_0_V_full_n,
        in_local_V_data_0_V_write => Loop_1_proc421_U0_in_local_V_data_0_V_write,
        in_r_TDATA => in_r_TDATA,
        ap_return => Loop_1_proc421_U0_ap_return);

    myproject_U0 : component myproject
    port map (
        ap_start => myproject_U0_ap_start,
        start_full_n => start_for_Block_myproject_axi_exit27_proc_U0_full_n,
        start_out => myproject_U0_start_out,
        start_write => myproject_U0_start_write,
        input_33_V_data_V_dout => in_local_V_data_0_V_dout,
        input_33_V_data_V_empty_n => in_local_V_data_0_V_empty_n,
        input_33_V_data_V_read => myproject_U0_input_33_V_data_V_read,
        layer28_out_V_data_0_V_din => myproject_U0_layer28_out_V_data_0_V_din,
        layer28_out_V_data_0_V_full_n => out_local_V_data_0_V_full_n,
        layer28_out_V_data_0_V_write => myproject_U0_layer28_out_V_data_0_V_write,
        layer28_out_V_data_1_V_din => myproject_U0_layer28_out_V_data_1_V_din,
        layer28_out_V_data_1_V_full_n => out_local_V_data_1_V_full_n,
        layer28_out_V_data_1_V_write => myproject_U0_layer28_out_V_data_1_V_write,
        layer28_out_V_data_2_V_din => myproject_U0_layer28_out_V_data_2_V_din,
        layer28_out_V_data_2_V_full_n => out_local_V_data_2_V_full_n,
        layer28_out_V_data_2_V_write => myproject_U0_layer28_out_V_data_2_V_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_done => myproject_U0_ap_done,
        ap_ready => myproject_U0_ap_ready,
        ap_idle => myproject_U0_ap_idle,
        ap_continue => myproject_U0_ap_continue);

    Block_myproject_axi_exit27_proc_U0 : component Block_myproject_axi_exit27_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_myproject_axi_exit27_proc_U0_ap_start,
        ap_done => Block_myproject_axi_exit27_proc_U0_ap_done,
        ap_continue => Block_myproject_axi_exit27_proc_U0_ap_continue,
        ap_idle => Block_myproject_axi_exit27_proc_U0_ap_idle,
        ap_ready => Block_myproject_axi_exit27_proc_U0_ap_ready,
        out_local_V_data_0_V_dout => out_local_V_data_0_V_dout,
        out_local_V_data_0_V_empty_n => out_local_V_data_0_V_empty_n,
        out_local_V_data_0_V_read => Block_myproject_axi_exit27_proc_U0_out_local_V_data_0_V_read,
        out_local_V_data_1_V_dout => out_local_V_data_1_V_dout,
        out_local_V_data_1_V_empty_n => out_local_V_data_1_V_empty_n,
        out_local_V_data_1_V_read => Block_myproject_axi_exit27_proc_U0_out_local_V_data_1_V_read,
        out_local_V_data_2_V_dout => out_local_V_data_2_V_dout,
        out_local_V_data_2_V_empty_n => out_local_V_data_2_V_empty_n,
        out_local_V_data_2_V_read => Block_myproject_axi_exit27_proc_U0_out_local_V_data_2_V_read,
        tmp_data_V_0 => Block_myproject_axi_exit27_proc_U0_tmp_data_V_0,
        tmp_data_V_0_ap_vld => Block_myproject_axi_exit27_proc_U0_tmp_data_V_0_ap_vld,
        tmp_data_V_1 => Block_myproject_axi_exit27_proc_U0_tmp_data_V_1,
        tmp_data_V_1_ap_vld => Block_myproject_axi_exit27_proc_U0_tmp_data_V_1_ap_vld,
        tmp_data_V_2 => Block_myproject_axi_exit27_proc_U0_tmp_data_V_2,
        tmp_data_V_2_ap_vld => Block_myproject_axi_exit27_proc_U0_tmp_data_V_2_ap_vld);

    Loop_2_proc_U0 : component Loop_2_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_2_proc_U0_ap_start,
        ap_done => Loop_2_proc_U0_ap_done,
        ap_continue => Loop_2_proc_U0_ap_continue,
        ap_idle => Loop_2_proc_U0_ap_idle,
        ap_ready => Loop_2_proc_U0_ap_ready,
        out_r_TDATA => Loop_2_proc_U0_out_r_TDATA,
        out_r_TVALID => Loop_2_proc_U0_out_r_TVALID,
        out_r_TREADY => out_r_TREADY,
        out_r_TLAST => Loop_2_proc_U0_out_r_TLAST,
        p_read => is_last_0_i_loc_channel_dout,
        tmp_data_V_0 => tmp_data_V_0_dout,
        tmp_data_V_1 => tmp_data_V_1_dout,
        tmp_data_V_2 => tmp_data_V_2_dout);

    in_local_V_data_0_V_U : component fifo_w8_d16384_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_1_proc421_U0_in_local_V_data_0_V_din,
        if_full_n => in_local_V_data_0_V_full_n,
        if_write => Loop_1_proc421_U0_in_local_V_data_0_V_write,
        if_dout => in_local_V_data_0_V_dout,
        if_empty_n => in_local_V_data_0_V_empty_n,
        if_read => myproject_U0_input_33_V_data_V_read);

    is_last_0_i_loc_channel_U : component fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_1_proc421_U0_ap_return,
        if_full_n => is_last_0_i_loc_channel_full_n,
        if_write => Loop_1_proc421_U0_ap_done,
        if_dout => is_last_0_i_loc_channel_dout,
        if_empty_n => is_last_0_i_loc_channel_empty_n,
        if_read => Loop_2_proc_U0_ap_ready);

    out_local_V_data_0_V_U : component fifo_w20_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => myproject_U0_layer28_out_V_data_0_V_din,
        if_full_n => out_local_V_data_0_V_full_n,
        if_write => myproject_U0_layer28_out_V_data_0_V_write,
        if_dout => out_local_V_data_0_V_dout,
        if_empty_n => out_local_V_data_0_V_empty_n,
        if_read => Block_myproject_axi_exit27_proc_U0_out_local_V_data_0_V_read);

    out_local_V_data_1_V_U : component fifo_w20_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => myproject_U0_layer28_out_V_data_1_V_din,
        if_full_n => out_local_V_data_1_V_full_n,
        if_write => myproject_U0_layer28_out_V_data_1_V_write,
        if_dout => out_local_V_data_1_V_dout,
        if_empty_n => out_local_V_data_1_V_empty_n,
        if_read => Block_myproject_axi_exit27_proc_U0_out_local_V_data_1_V_read);

    out_local_V_data_2_V_U : component fifo_w20_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => myproject_U0_layer28_out_V_data_2_V_din,
        if_full_n => out_local_V_data_2_V_full_n,
        if_write => myproject_U0_layer28_out_V_data_2_V_write,
        if_dout => out_local_V_data_2_V_dout,
        if_empty_n => out_local_V_data_2_V_empty_n,
        if_read => Block_myproject_axi_exit27_proc_U0_out_local_V_data_2_V_read);

    tmp_data_V_0_U : component fifo_w20_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_myproject_axi_exit27_proc_U0_tmp_data_V_0,
        if_full_n => tmp_data_V_0_full_n,
        if_write => ap_channel_done_tmp_data_V_0,
        if_dout => tmp_data_V_0_dout,
        if_empty_n => tmp_data_V_0_empty_n,
        if_read => Loop_2_proc_U0_ap_ready);

    tmp_data_V_1_U : component fifo_w20_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_myproject_axi_exit27_proc_U0_tmp_data_V_1,
        if_full_n => tmp_data_V_1_full_n,
        if_write => ap_channel_done_tmp_data_V_1,
        if_dout => tmp_data_V_1_dout,
        if_empty_n => tmp_data_V_1_empty_n,
        if_read => Loop_2_proc_U0_ap_ready);

    tmp_data_V_2_U : component fifo_w20_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_myproject_axi_exit27_proc_U0_tmp_data_V_2,
        if_full_n => tmp_data_V_2_full_n,
        if_write => ap_channel_done_tmp_data_V_2,
        if_dout => tmp_data_V_2_dout,
        if_empty_n => tmp_data_V_2_empty_n,
        if_read => Loop_2_proc_U0_ap_ready);

    start_for_myproject_U0_U : component start_for_myproject_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_myproject_U0_din,
        if_full_n => start_for_myproject_U0_full_n,
        if_write => Loop_1_proc421_U0_start_write,
        if_dout => start_for_myproject_U0_dout,
        if_empty_n => start_for_myproject_U0_empty_n,
        if_read => myproject_U0_ap_ready);

    start_for_Block_myproject_axi_exit27_proc_U0_U : component start_for_Block_myproject_axi_exit27_proc_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_myproject_axi_exit27_proc_U0_din,
        if_full_n => start_for_Block_myproject_axi_exit27_proc_U0_full_n,
        if_write => myproject_U0_start_write,
        if_dout => start_for_Block_myproject_axi_exit27_proc_U0_dout,
        if_empty_n => start_for_Block_myproject_axi_exit27_proc_U0_empty_n,
        if_read => Block_myproject_axi_exit27_proc_U0_ap_ready);





    ap_sync_reg_channel_write_tmp_data_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_tmp_data_V_0 <= ap_const_logic_0;
            else
                if (((Block_myproject_axi_exit27_proc_U0_ap_done and Block_myproject_axi_exit27_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_tmp_data_V_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_tmp_data_V_0 <= ap_sync_channel_write_tmp_data_V_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_tmp_data_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_tmp_data_V_1 <= ap_const_logic_0;
            else
                if (((Block_myproject_axi_exit27_proc_U0_ap_done and Block_myproject_axi_exit27_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_tmp_data_V_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_tmp_data_V_1 <= ap_sync_channel_write_tmp_data_V_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_tmp_data_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_tmp_data_V_2 <= ap_const_logic_0;
            else
                if (((Block_myproject_axi_exit27_proc_U0_ap_done and Block_myproject_axi_exit27_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_tmp_data_V_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_tmp_data_V_2 <= ap_sync_channel_write_tmp_data_V_2;
                end if; 
            end if;
        end if;
    end process;

    Block_myproject_axi_exit27_proc_U0_ap_continue <= (ap_sync_channel_write_tmp_data_V_2 and ap_sync_channel_write_tmp_data_V_1 and ap_sync_channel_write_tmp_data_V_0);
    Block_myproject_axi_exit27_proc_U0_ap_start <= start_for_Block_myproject_axi_exit27_proc_U0_empty_n;
    Block_myproject_axi_exit27_proc_U0_start_full_n <= ap_const_logic_1;
    Block_myproject_axi_exit27_proc_U0_start_write <= ap_const_logic_0;
    Loop_1_proc421_U0_ap_continue <= is_last_0_i_loc_channel_full_n;
    Loop_1_proc421_U0_ap_start <= ap_const_logic_1;
    Loop_2_proc_U0_ap_continue <= ap_const_logic_1;
    Loop_2_proc_U0_ap_start <= (tmp_data_V_2_empty_n and tmp_data_V_1_empty_n and tmp_data_V_0_empty_n and is_last_0_i_loc_channel_empty_n);
    Loop_2_proc_U0_start_full_n <= ap_const_logic_1;
    Loop_2_proc_U0_start_write <= ap_const_logic_0;
    ap_channel_done_is_last_0_i_loc_channel <= Loop_1_proc421_U0_ap_done;
    ap_channel_done_tmp_data_V_0 <= ((ap_sync_reg_channel_write_tmp_data_V_0 xor ap_const_logic_1) and Block_myproject_axi_exit27_proc_U0_ap_done);
    ap_channel_done_tmp_data_V_1 <= ((ap_sync_reg_channel_write_tmp_data_V_1 xor ap_const_logic_1) and Block_myproject_axi_exit27_proc_U0_ap_done);
    ap_channel_done_tmp_data_V_2 <= ((ap_sync_reg_channel_write_tmp_data_V_2 xor ap_const_logic_1) and Block_myproject_axi_exit27_proc_U0_ap_done);

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_channel_write_tmp_data_V_0 <= ((tmp_data_V_0_full_n and ap_channel_done_tmp_data_V_0) or ap_sync_reg_channel_write_tmp_data_V_0);
    ap_sync_channel_write_tmp_data_V_1 <= ((tmp_data_V_1_full_n and ap_channel_done_tmp_data_V_1) or ap_sync_reg_channel_write_tmp_data_V_1);
    ap_sync_channel_write_tmp_data_V_2 <= ((tmp_data_V_2_full_n and ap_channel_done_tmp_data_V_2) or ap_sync_reg_channel_write_tmp_data_V_2);
    ap_sync_continue <= ap_const_logic_0;
    in_r_TREADY <= Loop_1_proc421_U0_in_r_TREADY;
    myproject_U0_ap_continue <= ap_const_logic_1;
    myproject_U0_ap_start <= start_for_myproject_U0_empty_n;
    out_r_TDATA <= Loop_2_proc_U0_out_r_TDATA;
    out_r_TLAST <= Loop_2_proc_U0_out_r_TLAST;
    out_r_TVALID <= Loop_2_proc_U0_out_r_TVALID;
    start_for_Block_myproject_axi_exit27_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_myproject_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
